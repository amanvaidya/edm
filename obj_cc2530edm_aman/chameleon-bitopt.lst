                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Tue Feb 10 06:19:34 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module chameleon_bitopt
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _chameleon_bitopt
                                     13 	.globl _set_bits
                                     14 	.globl _set_bits_in_byte
                                     15 	.globl _get_bits
                                     16 	.globl _get_bits_in_byte
                                     17 	.globl _channel_lookup
                                     18 	.globl _packetbuf_addr
                                     19 	.globl _packetbuf_set_addr
                                     20 	.globl _packetbuf_attr
                                     21 	.globl _packetbuf_set_attr
                                     22 	.globl _packetbuf_hdrreduce
                                     23 	.globl _packetbuf_hdralloc
                                     24 	.globl _packetbuf_hdrptr
                                     25 	.globl _packetbuf_dataptr
                                     26 	.globl _memset
                                     27 	.globl _ACTIVE
                                     28 	.globl _TX_BYTE
                                     29 	.globl _RX_BYTE
                                     30 	.globl _ERR
                                     31 	.globl _FE
                                     32 	.globl _SLAVE
                                     33 	.globl _RE
                                     34 	.globl _MODE
                                     35 	.globl _T3OVFIF
                                     36 	.globl _T3CH0IF
                                     37 	.globl _T3CH1IF
                                     38 	.globl _T4OVFIF
                                     39 	.globl _T4CH0IF
                                     40 	.globl _T4CH1IF
                                     41 	.globl _OVFIM
                                     42 	.globl _B_0
                                     43 	.globl _B_1
                                     44 	.globl _B_2
                                     45 	.globl _B_3
                                     46 	.globl _B_4
                                     47 	.globl _B_5
                                     48 	.globl _B_6
                                     49 	.globl _B_7
                                     50 	.globl _P2IF
                                     51 	.globl _UTX0IF
                                     52 	.globl _UTX1IF
                                     53 	.globl _P1IF
                                     54 	.globl _WDTIF
                                     55 	.globl _ACC_0
                                     56 	.globl _ACC_1
                                     57 	.globl _ACC_2
                                     58 	.globl _ACC_3
                                     59 	.globl _ACC_4
                                     60 	.globl _ACC_5
                                     61 	.globl _ACC_6
                                     62 	.globl _ACC_7
                                     63 	.globl _P
                                     64 	.globl _F1
                                     65 	.globl _OV
                                     66 	.globl _RS0
                                     67 	.globl _RS1
                                     68 	.globl _F0
                                     69 	.globl _AC
                                     70 	.globl _CY
                                     71 	.globl _DMAIF
                                     72 	.globl _T1IF
                                     73 	.globl _T2IF
                                     74 	.globl _T3IF
                                     75 	.globl _T4IF
                                     76 	.globl _P0IF
                                     77 	.globl _STIF
                                     78 	.globl _DMAIE
                                     79 	.globl _T1IE
                                     80 	.globl _T2IE
                                     81 	.globl _T3IE
                                     82 	.globl _T4IE
                                     83 	.globl _P0IE
                                     84 	.globl _RFERRIE
                                     85 	.globl _ADCIE
                                     86 	.globl _URX0IE
                                     87 	.globl _URX1IE
                                     88 	.globl _ENCIE
                                     89 	.globl _STIE
                                     90 	.globl _EA
                                     91 	.globl _P2_0
                                     92 	.globl _P2_1
                                     93 	.globl _P2_2
                                     94 	.globl _P2_3
                                     95 	.globl _P2_4
                                     96 	.globl _P2_5
                                     97 	.globl _P2_6
                                     98 	.globl _P2_7
                                     99 	.globl _ENCIF_0
                                    100 	.globl _ENCIF_1
                                    101 	.globl _P1_0
                                    102 	.globl _P1_1
                                    103 	.globl _P1_2
                                    104 	.globl _P1_3
                                    105 	.globl _P1_4
                                    106 	.globl _P1_5
                                    107 	.globl _P1_6
                                    108 	.globl _P1_7
                                    109 	.globl _IT0
                                    110 	.globl _RFERRIF
                                    111 	.globl _IT1
                                    112 	.globl _URX0IF
                                    113 	.globl _ADCIF
                                    114 	.globl _URX1IF
                                    115 	.globl _P0_0
                                    116 	.globl _P0_1
                                    117 	.globl _P0_2
                                    118 	.globl _P0_3
                                    119 	.globl _P0_4
                                    120 	.globl _P0_5
                                    121 	.globl _P0_6
                                    122 	.globl _P0_7
                                    123 	.globl _WDCTL
                                    124 	.globl _U1GCR
                                    125 	.globl _U1UCR
                                    126 	.globl _U1BAUD
                                    127 	.globl _U1DBUF
                                    128 	.globl _U1CSR
                                    129 	.globl _U0GCR
                                    130 	.globl _U0UCR
                                    131 	.globl _U0BAUD
                                    132 	.globl _U0DBUF
                                    133 	.globl _U0CSR
                                    134 	.globl _TIMIF
                                    135 	.globl _T4CC1
                                    136 	.globl _T4CCTL1
                                    137 	.globl _T4CC0
                                    138 	.globl _T4CCTL0
                                    139 	.globl _T4CTL
                                    140 	.globl _T4CNT
                                    141 	.globl _T3CC1
                                    142 	.globl _T3CCTL1
                                    143 	.globl _T3CC0
                                    144 	.globl _T3CCTL0
                                    145 	.globl _T3CTL
                                    146 	.globl _T3CNT
                                    147 	.globl _T2MSEL
                                    148 	.globl _T2IRQM
                                    149 	.globl _T2MOVF2
                                    150 	.globl _T2MOVF1
                                    151 	.globl _T2MOVF0
                                    152 	.globl _T2M1
                                    153 	.globl _T2M0
                                    154 	.globl _T2IRQF
                                    155 	.globl _T2EVTCFG
                                    156 	.globl _T2CTRL
                                    157 	.globl _T1STAT
                                    158 	.globl _T1CCTL2
                                    159 	.globl _T1CCTL1
                                    160 	.globl _T1CCTL0
                                    161 	.globl _T1CTL
                                    162 	.globl _T1CNTH
                                    163 	.globl _T1CNTL
                                    164 	.globl _T1CC2H
                                    165 	.globl _T1CC2L
                                    166 	.globl _T1CC1H
                                    167 	.globl _T1CC1L
                                    168 	.globl _T1CC0H
                                    169 	.globl _T1CC0L
                                    170 	.globl _CLKCONSTA
                                    171 	.globl _CLKCONCMD
                                    172 	.globl _SLEEPSTA
                                    173 	.globl _SLEEPCMD
                                    174 	.globl _STLOAD
                                    175 	.globl _ST2
                                    176 	.globl _ST1
                                    177 	.globl _ST0
                                    178 	.globl _RFERRF
                                    179 	.globl _RFIRQF0
                                    180 	.globl _RFST
                                    181 	.globl _RFD
                                    182 	.globl _RFIRQF1
                                    183 	.globl _PSBANK
                                    184 	.globl _FMAP
                                    185 	.globl _MEMCTR
                                    186 	.globl __XPAGE
                                    187 	.globl _MPAGE
                                    188 	.globl _PMUX
                                    189 	.globl _P2DIR
                                    190 	.globl _P1DIR
                                    191 	.globl _P0DIR
                                    192 	.globl _P2INP
                                    193 	.globl _P1INP
                                    194 	.globl _P2SEL
                                    195 	.globl _P1SEL
                                    196 	.globl _P0SEL
                                    197 	.globl _APCFG
                                    198 	.globl _PERCFG
                                    199 	.globl _P0INP
                                    200 	.globl _P2IEN
                                    201 	.globl _P1IEN
                                    202 	.globl _P0IEN
                                    203 	.globl _PICTL
                                    204 	.globl _P2IFG
                                    205 	.globl _P1IFG
                                    206 	.globl _P0IFG
                                    207 	.globl _DMAREQ
                                    208 	.globl _DMAARM
                                    209 	.globl _DMA0CFGH
                                    210 	.globl _DMA0CFGL
                                    211 	.globl _DMA1CFGH
                                    212 	.globl _DMA1CFGL
                                    213 	.globl _DMAIRQ
                                    214 	.globl _ENCCS
                                    215 	.globl _ENCDO
                                    216 	.globl _ENCDI
                                    217 	.globl _RNDH
                                    218 	.globl _RNDL
                                    219 	.globl _ADCH
                                    220 	.globl _ADCL
                                    221 	.globl _ADCCON3
                                    222 	.globl _ADCCON2
                                    223 	.globl _ADCCON1
                                    224 	.globl _B
                                    225 	.globl _IRCON2
                                    226 	.globl _ACC
                                    227 	.globl _PSW
                                    228 	.globl _IRCON
                                    229 	.globl _IP1
                                    230 	.globl _IEN1
                                    231 	.globl _IP0
                                    232 	.globl _IEN0
                                    233 	.globl _P2
                                    234 	.globl _S1CON
                                    235 	.globl _IEN2
                                    236 	.globl _S0CON
                                    237 	.globl _DPS
                                    238 	.globl _P1
                                    239 	.globl _TCON
                                    240 	.globl _PCON
                                    241 	.globl _DPH1
                                    242 	.globl _DPL1
                                    243 	.globl _DPH0
                                    244 	.globl _DPL0
                                    245 	.globl _SP
                                    246 	.globl _P0
                                    247 	.globl _X_IEEE_ADDR
                                    248 	.globl _X_INFOPAGE
                                    249 	.globl _X_P2DIR
                                    250 	.globl _X_P1DIR
                                    251 	.globl _X_P0DIR
                                    252 	.globl _X_U1GCR
                                    253 	.globl _X_U1UCR
                                    254 	.globl _X_U1BAUD
                                    255 	.globl _X_U1DBUF
                                    256 	.globl _X_U1CSR
                                    257 	.globl _X_P2INP
                                    258 	.globl _X_P1INP
                                    259 	.globl _X_P2SEL
                                    260 	.globl _X_P1SEL
                                    261 	.globl _X_P0SEL
                                    262 	.globl _X_APCFG
                                    263 	.globl _X_PERCFG
                                    264 	.globl _X_T4CC1
                                    265 	.globl _X_T4CCTL1
                                    266 	.globl _X_T4CC0
                                    267 	.globl _X_T4CCTL0
                                    268 	.globl _X_T4CTL
                                    269 	.globl _X_T4CNT
                                    270 	.globl _X_RFIRQF0
                                    271 	.globl _X_T1CCTL2
                                    272 	.globl _X_T1CCTL1
                                    273 	.globl _X_T1CCTL0
                                    274 	.globl _X_T1CTL
                                    275 	.globl _X_T1CNTH
                                    276 	.globl _X_T1CNTL
                                    277 	.globl _X_RFST
                                    278 	.globl _X_T1CC2H
                                    279 	.globl _X_T1CC2L
                                    280 	.globl _X_T1CC1H
                                    281 	.globl _X_T1CC1L
                                    282 	.globl _X_T1CC0H
                                    283 	.globl _X_T1CC0L
                                    284 	.globl _X_RFD
                                    285 	.globl _X_TIMIF
                                    286 	.globl _X_DMAREQ
                                    287 	.globl _X_DMAARM
                                    288 	.globl _X_DMA0CFGH
                                    289 	.globl _X_DMA0CFGL
                                    290 	.globl _X_DMA1CFGH
                                    291 	.globl _X_DMA1CFGL
                                    292 	.globl _X_DMAIRQ
                                    293 	.globl _X_T3CC1
                                    294 	.globl _X_T3CCTL1
                                    295 	.globl _X_T3CC0
                                    296 	.globl _X_T3CCTL0
                                    297 	.globl _X_T3CTL
                                    298 	.globl _X_T3CNT
                                    299 	.globl _X_WDCTL
                                    300 	.globl _X_MEMCTR
                                    301 	.globl _X_CLKCONCMD
                                    302 	.globl _X_U0GCR
                                    303 	.globl _X_U0UCR
                                    304 	.globl _X_T2MSEL
                                    305 	.globl _X_U0BAUD
                                    306 	.globl _X_U0DBUF
                                    307 	.globl _X_RFERRF
                                    308 	.globl _X_SLEEPCMD
                                    309 	.globl _X_RNDH
                                    310 	.globl _X_RNDL
                                    311 	.globl _X_ADCH
                                    312 	.globl _X_ADCL
                                    313 	.globl _X_ADCCON3
                                    314 	.globl _X_ADCCON2
                                    315 	.globl _X_ADCCON1
                                    316 	.globl _X_ENCCS
                                    317 	.globl _X_ENCDO
                                    318 	.globl _X_ENCDI
                                    319 	.globl _X_T1STAT
                                    320 	.globl _X_PMUX
                                    321 	.globl _X_STLOAD
                                    322 	.globl _X_P2IEN
                                    323 	.globl _X_P0IEN
                                    324 	.globl _X_T2IRQM
                                    325 	.globl _X_T2MOVF2
                                    326 	.globl _X_T2MOVF1
                                    327 	.globl _X_T2MOVF0
                                    328 	.globl _X_T2M1
                                    329 	.globl _X_T2M0
                                    330 	.globl _X_T2IRQF
                                    331 	.globl _X_P2
                                    332 	.globl _X_PSBANK
                                    333 	.globl _X_FMAP
                                    334 	.globl _X_CLKCONSTA
                                    335 	.globl _X_SLEEPSTA
                                    336 	.globl _X_T2EVTCFG
                                    337 	.globl _X_ST2
                                    338 	.globl _X_ST1
                                    339 	.globl _X_ST0
                                    340 	.globl _X_T2CTRL
                                    341 	.globl _X__XPAGE
                                    342 	.globl _X_MPAGE
                                    343 	.globl _X_RFIRQF1
                                    344 	.globl _X_P1
                                    345 	.globl _X_P0INP
                                    346 	.globl _X_P1IEN
                                    347 	.globl _X_PICTL
                                    348 	.globl _X_P2IFG
                                    349 	.globl _X_P1IFG
                                    350 	.globl _X_P0IFG
                                    351 	.globl _X_U0CSR
                                    352 	.globl _X_P0
                                    353 	.globl _USBF5
                                    354 	.globl _USBF4
                                    355 	.globl _USBF3
                                    356 	.globl _USBF2
                                    357 	.globl _USBF1
                                    358 	.globl _USBF0
                                    359 	.globl _USBCNTH
                                    360 	.globl _USBCNTL
                                    361 	.globl _USBCNT0
                                    362 	.globl _USBCSOH
                                    363 	.globl _USBCSOL
                                    364 	.globl _USBMAXO
                                    365 	.globl _USBCSIH
                                    366 	.globl _USBCSIL
                                    367 	.globl _USBCS0
                                    368 	.globl _USBMAXI
                                    369 	.globl _USBCTRL
                                    370 	.globl _USBINDEX
                                    371 	.globl _USBFRMH
                                    372 	.globl _USBFRML
                                    373 	.globl _USBCIE
                                    374 	.globl _USBOIE
                                    375 	.globl _USBIIE
                                    376 	.globl _USBCIF
                                    377 	.globl _USBOIF
                                    378 	.globl _USBIIF
                                    379 	.globl _USBPOW
                                    380 	.globl _USBADDR
                                    381 	.globl _CSPT
                                    382 	.globl _CSPZ
                                    383 	.globl _CSPY
                                    384 	.globl _CSPX
                                    385 	.globl _CSPSTAT
                                    386 	.globl _CSPCTRL
                                    387 	.globl _CSPPROG23
                                    388 	.globl _CSPPROG22
                                    389 	.globl _CSPPROG21
                                    390 	.globl _CSPPROG20
                                    391 	.globl _CSPPROG19
                                    392 	.globl _CSPPROG18
                                    393 	.globl _CSPPROG17
                                    394 	.globl _CSPPROG16
                                    395 	.globl _CSPPROG15
                                    396 	.globl _CSPPROG14
                                    397 	.globl _CSPPROG13
                                    398 	.globl _CSPPROG12
                                    399 	.globl _CSPPROG11
                                    400 	.globl _CSPPROG10
                                    401 	.globl _CSPPROG9
                                    402 	.globl _CSPPROG8
                                    403 	.globl _CSPPROG7
                                    404 	.globl _CSPPROG6
                                    405 	.globl _CSPPROG5
                                    406 	.globl _CSPPROG4
                                    407 	.globl _CSPPROG3
                                    408 	.globl _CSPPROG2
                                    409 	.globl _CSPPROG1
                                    410 	.globl _CSPPROG0
                                    411 	.globl _RFC_OBS_CTRL2
                                    412 	.globl _RFC_OBS_CTRL1
                                    413 	.globl _RFC_OBS_CTRL0
                                    414 	.globl _TXFILTCFG
                                    415 	.globl _PTEST1
                                    416 	.globl _PTEST0
                                    417 	.globl _ATEST
                                    418 	.globl _DACTEST2
                                    419 	.globl _DACTEST1
                                    420 	.globl _DACTEST0
                                    421 	.globl _MDMTEST1
                                    422 	.globl _MDMTEST0
                                    423 	.globl _ADCTEST2
                                    424 	.globl _ADCTEST1
                                    425 	.globl _ADCTEST0
                                    426 	.globl _AGCCTRL3
                                    427 	.globl _AGCCTRL2
                                    428 	.globl _AGCCTRL1
                                    429 	.globl _AGCCTRL0
                                    430 	.globl _FSCAL3
                                    431 	.globl _FSCAL2
                                    432 	.globl _FSCAL1
                                    433 	.globl _FSCAL0
                                    434 	.globl _FSCTRL
                                    435 	.globl _RXCTRL
                                    436 	.globl _FREQEST
                                    437 	.globl _MDMCTRL1
                                    438 	.globl _MDMCTRL0
                                    439 	.globl _RFRND
                                    440 	.globl _RFERRM
                                    441 	.globl _RFIRQM1
                                    442 	.globl _RFIRQM0
                                    443 	.globl _TXLAST_PTR
                                    444 	.globl _TXFIRST_PTR
                                    445 	.globl _RXP1_PTR
                                    446 	.globl _RXLAST_PTR
                                    447 	.globl _RXFIRST_PTR
                                    448 	.globl _TXFIFOCNT
                                    449 	.globl _RXFIFOCNT
                                    450 	.globl _RXFIRST
                                    451 	.globl _RSSISTAT
                                    452 	.globl _RSSI
                                    453 	.globl _CCACTRL1
                                    454 	.globl _CCACTRL0
                                    455 	.globl _FSMCTRL
                                    456 	.globl _FIFOPCTRL
                                    457 	.globl _FSMSTAT1
                                    458 	.globl _FSMSTAT0
                                    459 	.globl _TXCTRL
                                    460 	.globl _TXPOWER
                                    461 	.globl _FREQCTRL
                                    462 	.globl _FREQTUNE
                                    463 	.globl _RXMASKCLR
                                    464 	.globl _RXMASKSET
                                    465 	.globl _RXENABLE
                                    466 	.globl _FRMCTRL1
                                    467 	.globl _FRMCTRL0
                                    468 	.globl _SRCEXTEN2
                                    469 	.globl _SRCEXTEN1
                                    470 	.globl _SRCEXTEN0
                                    471 	.globl _SRCSHORTEN2
                                    472 	.globl _SRCSHORTEN1
                                    473 	.globl _SRCSHORTEN0
                                    474 	.globl _SRCMATCH
                                    475 	.globl _FRMFILT1
                                    476 	.globl _FRMFILT0
                                    477 	.globl _SHORT_ADDR1
                                    478 	.globl _SHORT_ADDR0
                                    479 	.globl _PAN_ID1
                                    480 	.globl _PAN_ID0
                                    481 	.globl _EXT_ADDR7
                                    482 	.globl _EXT_ADDR6
                                    483 	.globl _EXT_ADDR5
                                    484 	.globl _EXT_ADDR4
                                    485 	.globl _EXT_ADDR3
                                    486 	.globl _EXT_ADDR2
                                    487 	.globl _EXT_ADDR1
                                    488 	.globl _EXT_ADDR0
                                    489 	.globl _SRCSHORTPENDEN2
                                    490 	.globl _SRCSHORTPENDEN1
                                    491 	.globl _SRCSHORTPENDEN0
                                    492 	.globl _SRCEXTPENDEN2
                                    493 	.globl _SRCEXTPENDEN1
                                    494 	.globl _SRCEXTPENDEN0
                                    495 	.globl _SRCRESINDEX
                                    496 	.globl _SRCRESMASK2
                                    497 	.globl _SRCRESMASK1
                                    498 	.globl _SRCRESMASK0
                                    499 	.globl _SRC_ADDR_TABLE
                                    500 	.globl _TXFIFO
                                    501 	.globl _RXFIFO
                                    502 	.globl _RFCORE_RAM
                                    503 	.globl _CMPCTL
                                    504 	.globl _OPAMPS
                                    505 	.globl _OPAMPC
                                    506 	.globl _STCV2
                                    507 	.globl _STCV1
                                    508 	.globl _STCV0
                                    509 	.globl _STCS
                                    510 	.globl _STCC
                                    511 	.globl _T1CC4H
                                    512 	.globl _T1CC4L
                                    513 	.globl _T1CC3H
                                    514 	.globl _T1CC3L
                                    515 	.globl _XX_T1CC2H
                                    516 	.globl _XX_T1CC2L
                                    517 	.globl _XX_T1CC1H
                                    518 	.globl _XX_T1CC1L
                                    519 	.globl _XX_T1CC0H
                                    520 	.globl _XX_T1CC0L
                                    521 	.globl _T1CCTL4
                                    522 	.globl _T1CCTL3
                                    523 	.globl _XX_T1CCTL2
                                    524 	.globl _XX_T1CCTL1
                                    525 	.globl _XX_T1CCTL0
                                    526 	.globl _CLD
                                    527 	.globl _IRCTL
                                    528 	.globl _CHIPINFO1
                                    529 	.globl _CHIPINFO0
                                    530 	.globl _FWDATA
                                    531 	.globl _FADDRH
                                    532 	.globl _FADDRL
                                    533 	.globl _FCTL
                                    534 	.globl _IVCTRL
                                    535 	.globl _BATTMON
                                    536 	.globl _SRCRC
                                    537 	.globl _DBGDATA
                                    538 	.globl _TESTREG0
                                    539 	.globl _CHIPID
                                    540 	.globl _CHVER
                                    541 	.globl _OBSSEL5
                                    542 	.globl _OBSSEL4
                                    543 	.globl _OBSSEL3
                                    544 	.globl _OBSSEL2
                                    545 	.globl _OBSSEL1
                                    546 	.globl _OBSSEL0
                                    547 	.globl _I2CIO
                                    548 	.globl _I2CWC
                                    549 	.globl _I2CADDR
                                    550 	.globl _I2CDATA
                                    551 	.globl _I2CSTAT
                                    552 	.globl _I2CCFG
                                    553 	.globl _OPAMPMC
                                    554 	.globl _MONMUX
                                    555 ;--------------------------------------------------------
                                    556 ; special function registers
                                    557 ;--------------------------------------------------------
                                    558 	.area RSEG    (ABS,DATA)
      000000                        559 	.org 0x0000
                           000080   560 _P0	=	0x0080
                           000081   561 _SP	=	0x0081
                           000082   562 _DPL0	=	0x0082
                           000083   563 _DPH0	=	0x0083
                           000084   564 _DPL1	=	0x0084
                           000085   565 _DPH1	=	0x0085
                           000087   566 _PCON	=	0x0087
                           000088   567 _TCON	=	0x0088
                           000090   568 _P1	=	0x0090
                           000092   569 _DPS	=	0x0092
                           000098   570 _S0CON	=	0x0098
                           00009A   571 _IEN2	=	0x009a
                           00009B   572 _S1CON	=	0x009b
                           0000A0   573 _P2	=	0x00a0
                           0000A8   574 _IEN0	=	0x00a8
                           0000A9   575 _IP0	=	0x00a9
                           0000B8   576 _IEN1	=	0x00b8
                           0000B9   577 _IP1	=	0x00b9
                           0000C0   578 _IRCON	=	0x00c0
                           0000D0   579 _PSW	=	0x00d0
                           0000E0   580 _ACC	=	0x00e0
                           0000E8   581 _IRCON2	=	0x00e8
                           0000F0   582 _B	=	0x00f0
                           0000B4   583 _ADCCON1	=	0x00b4
                           0000B5   584 _ADCCON2	=	0x00b5
                           0000B6   585 _ADCCON3	=	0x00b6
                           0000BA   586 _ADCL	=	0x00ba
                           0000BB   587 _ADCH	=	0x00bb
                           0000BC   588 _RNDL	=	0x00bc
                           0000BD   589 _RNDH	=	0x00bd
                           0000B1   590 _ENCDI	=	0x00b1
                           0000B2   591 _ENCDO	=	0x00b2
                           0000B3   592 _ENCCS	=	0x00b3
                           0000D1   593 _DMAIRQ	=	0x00d1
                           0000D2   594 _DMA1CFGL	=	0x00d2
                           0000D3   595 _DMA1CFGH	=	0x00d3
                           0000D4   596 _DMA0CFGL	=	0x00d4
                           0000D5   597 _DMA0CFGH	=	0x00d5
                           0000D6   598 _DMAARM	=	0x00d6
                           0000D7   599 _DMAREQ	=	0x00d7
                           000089   600 _P0IFG	=	0x0089
                           00008A   601 _P1IFG	=	0x008a
                           00008B   602 _P2IFG	=	0x008b
                           00008C   603 _PICTL	=	0x008c
                           0000AB   604 _P0IEN	=	0x00ab
                           00008D   605 _P1IEN	=	0x008d
                           0000AC   606 _P2IEN	=	0x00ac
                           00008F   607 _P0INP	=	0x008f
                           0000F1   608 _PERCFG	=	0x00f1
                           0000F2   609 _APCFG	=	0x00f2
                           0000F3   610 _P0SEL	=	0x00f3
                           0000F4   611 _P1SEL	=	0x00f4
                           0000F5   612 _P2SEL	=	0x00f5
                           0000F6   613 _P1INP	=	0x00f6
                           0000F7   614 _P2INP	=	0x00f7
                           0000FD   615 _P0DIR	=	0x00fd
                           0000FE   616 _P1DIR	=	0x00fe
                           0000FF   617 _P2DIR	=	0x00ff
                           0000AE   618 _PMUX	=	0x00ae
                           000093   619 _MPAGE	=	0x0093
                           000093   620 __XPAGE	=	0x0093
                           0000C7   621 _MEMCTR	=	0x00c7
                           00009F   622 _FMAP	=	0x009f
                           00009F   623 _PSBANK	=	0x009f
                           000091   624 _RFIRQF1	=	0x0091
                           0000D9   625 _RFD	=	0x00d9
                           0000E1   626 _RFST	=	0x00e1
                           0000E9   627 _RFIRQF0	=	0x00e9
                           0000BF   628 _RFERRF	=	0x00bf
                           000095   629 _ST0	=	0x0095
                           000096   630 _ST1	=	0x0096
                           000097   631 _ST2	=	0x0097
                           0000AD   632 _STLOAD	=	0x00ad
                           0000BE   633 _SLEEPCMD	=	0x00be
                           00009D   634 _SLEEPSTA	=	0x009d
                           0000C6   635 _CLKCONCMD	=	0x00c6
                           00009E   636 _CLKCONSTA	=	0x009e
                           0000DA   637 _T1CC0L	=	0x00da
                           0000DB   638 _T1CC0H	=	0x00db
                           0000DC   639 _T1CC1L	=	0x00dc
                           0000DD   640 _T1CC1H	=	0x00dd
                           0000DE   641 _T1CC2L	=	0x00de
                           0000DF   642 _T1CC2H	=	0x00df
                           0000E2   643 _T1CNTL	=	0x00e2
                           0000E3   644 _T1CNTH	=	0x00e3
                           0000E4   645 _T1CTL	=	0x00e4
                           0000E5   646 _T1CCTL0	=	0x00e5
                           0000E6   647 _T1CCTL1	=	0x00e6
                           0000E7   648 _T1CCTL2	=	0x00e7
                           0000AF   649 _T1STAT	=	0x00af
                           000094   650 _T2CTRL	=	0x0094
                           00009C   651 _T2EVTCFG	=	0x009c
                           0000A1   652 _T2IRQF	=	0x00a1
                           0000A2   653 _T2M0	=	0x00a2
                           0000A3   654 _T2M1	=	0x00a3
                           0000A4   655 _T2MOVF0	=	0x00a4
                           0000A5   656 _T2MOVF1	=	0x00a5
                           0000A6   657 _T2MOVF2	=	0x00a6
                           0000A7   658 _T2IRQM	=	0x00a7
                           0000C3   659 _T2MSEL	=	0x00c3
                           0000CA   660 _T3CNT	=	0x00ca
                           0000CB   661 _T3CTL	=	0x00cb
                           0000CC   662 _T3CCTL0	=	0x00cc
                           0000CD   663 _T3CC0	=	0x00cd
                           0000CE   664 _T3CCTL1	=	0x00ce
                           0000CF   665 _T3CC1	=	0x00cf
                           0000EA   666 _T4CNT	=	0x00ea
                           0000EB   667 _T4CTL	=	0x00eb
                           0000EC   668 _T4CCTL0	=	0x00ec
                           0000ED   669 _T4CC0	=	0x00ed
                           0000EE   670 _T4CCTL1	=	0x00ee
                           0000EF   671 _T4CC1	=	0x00ef
                           0000D8   672 _TIMIF	=	0x00d8
                           000086   673 _U0CSR	=	0x0086
                           0000C1   674 _U0DBUF	=	0x00c1
                           0000C2   675 _U0BAUD	=	0x00c2
                           0000C4   676 _U0UCR	=	0x00c4
                           0000C5   677 _U0GCR	=	0x00c5
                           0000F8   678 _U1CSR	=	0x00f8
                           0000F9   679 _U1DBUF	=	0x00f9
                           0000FA   680 _U1BAUD	=	0x00fa
                           0000FB   681 _U1UCR	=	0x00fb
                           0000FC   682 _U1GCR	=	0x00fc
                           0000C9   683 _WDCTL	=	0x00c9
                                    684 ;--------------------------------------------------------
                                    685 ; special function bits
                                    686 ;--------------------------------------------------------
                                    687 	.area RSEG    (ABS,DATA)
      000000                        688 	.org 0x0000
                           000087   689 _P0_7	=	0x0087
                           000086   690 _P0_6	=	0x0086
                           000085   691 _P0_5	=	0x0085
                           000084   692 _P0_4	=	0x0084
                           000083   693 _P0_3	=	0x0083
                           000082   694 _P0_2	=	0x0082
                           000081   695 _P0_1	=	0x0081
                           000080   696 _P0_0	=	0x0080
                           00008F   697 _URX1IF	=	0x008f
                           00008D   698 _ADCIF	=	0x008d
                           00008B   699 _URX0IF	=	0x008b
                           00008A   700 _IT1	=	0x008a
                           000089   701 _RFERRIF	=	0x0089
                           000088   702 _IT0	=	0x0088
                           000097   703 _P1_7	=	0x0097
                           000096   704 _P1_6	=	0x0096
                           000095   705 _P1_5	=	0x0095
                           000094   706 _P1_4	=	0x0094
                           000093   707 _P1_3	=	0x0093
                           000092   708 _P1_2	=	0x0092
                           000091   709 _P1_1	=	0x0091
                           000090   710 _P1_0	=	0x0090
                           000099   711 _ENCIF_1	=	0x0099
                           000098   712 _ENCIF_0	=	0x0098
                           0000A7   713 _P2_7	=	0x00a7
                           0000A6   714 _P2_6	=	0x00a6
                           0000A5   715 _P2_5	=	0x00a5
                           0000A4   716 _P2_4	=	0x00a4
                           0000A3   717 _P2_3	=	0x00a3
                           0000A2   718 _P2_2	=	0x00a2
                           0000A1   719 _P2_1	=	0x00a1
                           0000A0   720 _P2_0	=	0x00a0
                           0000AF   721 _EA	=	0x00af
                           0000AD   722 _STIE	=	0x00ad
                           0000AC   723 _ENCIE	=	0x00ac
                           0000AB   724 _URX1IE	=	0x00ab
                           0000AA   725 _URX0IE	=	0x00aa
                           0000A9   726 _ADCIE	=	0x00a9
                           0000A8   727 _RFERRIE	=	0x00a8
                           0000BD   728 _P0IE	=	0x00bd
                           0000BC   729 _T4IE	=	0x00bc
                           0000BB   730 _T3IE	=	0x00bb
                           0000BA   731 _T2IE	=	0x00ba
                           0000B9   732 _T1IE	=	0x00b9
                           0000B8   733 _DMAIE	=	0x00b8
                           0000C7   734 _STIF	=	0x00c7
                           0000C5   735 _P0IF	=	0x00c5
                           0000C4   736 _T4IF	=	0x00c4
                           0000C3   737 _T3IF	=	0x00c3
                           0000C2   738 _T2IF	=	0x00c2
                           0000C1   739 _T1IF	=	0x00c1
                           0000C0   740 _DMAIF	=	0x00c0
                           0000D7   741 _CY	=	0x00d7
                           0000D6   742 _AC	=	0x00d6
                           0000D5   743 _F0	=	0x00d5
                           0000D4   744 _RS1	=	0x00d4
                           0000D3   745 _RS0	=	0x00d3
                           0000D2   746 _OV	=	0x00d2
                           0000D1   747 _F1	=	0x00d1
                           0000D0   748 _P	=	0x00d0
                           0000E7   749 _ACC_7	=	0x00e7
                           0000E6   750 _ACC_6	=	0x00e6
                           0000E5   751 _ACC_5	=	0x00e5
                           0000E4   752 _ACC_4	=	0x00e4
                           0000E3   753 _ACC_3	=	0x00e3
                           0000E2   754 _ACC_2	=	0x00e2
                           0000E1   755 _ACC_1	=	0x00e1
                           0000E0   756 _ACC_0	=	0x00e0
                           0000EC   757 _WDTIF	=	0x00ec
                           0000EB   758 _P1IF	=	0x00eb
                           0000EA   759 _UTX1IF	=	0x00ea
                           0000E9   760 _UTX0IF	=	0x00e9
                           0000E8   761 _P2IF	=	0x00e8
                           0000F7   762 _B_7	=	0x00f7
                           0000F6   763 _B_6	=	0x00f6
                           0000F5   764 _B_5	=	0x00f5
                           0000F4   765 _B_4	=	0x00f4
                           0000F3   766 _B_3	=	0x00f3
                           0000F2   767 _B_2	=	0x00f2
                           0000F1   768 _B_1	=	0x00f1
                           0000F0   769 _B_0	=	0x00f0
                           0000DE   770 _OVFIM	=	0x00de
                           0000DD   771 _T4CH1IF	=	0x00dd
                           0000DC   772 _T4CH0IF	=	0x00dc
                           0000DB   773 _T4OVFIF	=	0x00db
                           0000DA   774 _T3CH1IF	=	0x00da
                           0000D9   775 _T3CH0IF	=	0x00d9
                           0000D8   776 _T3OVFIF	=	0x00d8
                           0000FF   777 _MODE	=	0x00ff
                           0000FE   778 _RE	=	0x00fe
                           0000FD   779 _SLAVE	=	0x00fd
                           0000FC   780 _FE	=	0x00fc
                           0000FB   781 _ERR	=	0x00fb
                           0000FA   782 _RX_BYTE	=	0x00fa
                           0000F9   783 _TX_BYTE	=	0x00f9
                           0000F8   784 _ACTIVE	=	0x00f8
                                    785 ;--------------------------------------------------------
                                    786 ; overlayable register banks
                                    787 ;--------------------------------------------------------
                                    788 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        789 	.ds 8
                                    790 ;--------------------------------------------------------
                                    791 ; internal ram data
                                    792 ;--------------------------------------------------------
                                    793 	.area DSEG    (DATA)
                                    794 ;--------------------------------------------------------
                                    795 ; overlayable items in internal ram 
                                    796 ;--------------------------------------------------------
                                    797 ;--------------------------------------------------------
                                    798 ; indirectly addressable internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area ISEG    (DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; absolute internal ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area IABS    (ABS,DATA)
                                    805 	.area IABS    (ABS,DATA)
                                    806 ;--------------------------------------------------------
                                    807 ; bit data
                                    808 ;--------------------------------------------------------
                                    809 	.area BSEG    (BIT)
                                    810 ;--------------------------------------------------------
                                    811 ; paged external ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area PSEG    (PAG,XDATA)
                                    814 ;--------------------------------------------------------
                                    815 ; external ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area XSEG    (XDATA)
                           0061A6   818 _MONMUX	=	0x61a6
                           0061A6   819 _OPAMPMC	=	0x61a6
                           006230   820 _I2CCFG	=	0x6230
                           006231   821 _I2CSTAT	=	0x6231
                           006232   822 _I2CDATA	=	0x6232
                           006233   823 _I2CADDR	=	0x6233
                           006234   824 _I2CWC	=	0x6234
                           006235   825 _I2CIO	=	0x6235
                           006243   826 _OBSSEL0	=	0x6243
                           006244   827 _OBSSEL1	=	0x6244
                           006245   828 _OBSSEL2	=	0x6245
                           006246   829 _OBSSEL3	=	0x6246
                           006247   830 _OBSSEL4	=	0x6247
                           006248   831 _OBSSEL5	=	0x6248
                           006249   832 _CHVER	=	0x6249
                           00624A   833 _CHIPID	=	0x624a
                           00624B   834 _TESTREG0	=	0x624b
                           006260   835 _DBGDATA	=	0x6260
                           006262   836 _SRCRC	=	0x6262
                           006264   837 _BATTMON	=	0x6264
                           006265   838 _IVCTRL	=	0x6265
                           006270   839 _FCTL	=	0x6270
                           006271   840 _FADDRL	=	0x6271
                           006272   841 _FADDRH	=	0x6272
                           006273   842 _FWDATA	=	0x6273
                           006276   843 _CHIPINFO0	=	0x6276
                           006277   844 _CHIPINFO1	=	0x6277
                           006281   845 _IRCTL	=	0x6281
                           006290   846 _CLD	=	0x6290
                           0062A0   847 _XX_T1CCTL0	=	0x62a0
                           0062A1   848 _XX_T1CCTL1	=	0x62a1
                           0062A2   849 _XX_T1CCTL2	=	0x62a2
                           0062A3   850 _T1CCTL3	=	0x62a3
                           0062A4   851 _T1CCTL4	=	0x62a4
                           0062A6   852 _XX_T1CC0L	=	0x62a6
                           0062A7   853 _XX_T1CC0H	=	0x62a7
                           0062A8   854 _XX_T1CC1L	=	0x62a8
                           0062A9   855 _XX_T1CC1H	=	0x62a9
                           0062AA   856 _XX_T1CC2L	=	0x62aa
                           0062AB   857 _XX_T1CC2H	=	0x62ab
                           0062AC   858 _T1CC3L	=	0x62ac
                           0062AD   859 _T1CC3H	=	0x62ad
                           0062AE   860 _T1CC4L	=	0x62ae
                           0062AF   861 _T1CC4H	=	0x62af
                           0062B0   862 _STCC	=	0x62b0
                           0062B1   863 _STCS	=	0x62b1
                           0062B2   864 _STCV0	=	0x62b2
                           0062B3   865 _STCV1	=	0x62b3
                           0062B4   866 _STCV2	=	0x62b4
                           0062C0   867 _OPAMPC	=	0x62c0
                           0062C1   868 _OPAMPS	=	0x62c1
                           0062D0   869 _CMPCTL	=	0x62d0
                           006000   870 _RFCORE_RAM	=	0x6000
                           006000   871 _RXFIFO	=	0x6000
                           006080   872 _TXFIFO	=	0x6080
                           006100   873 _SRC_ADDR_TABLE	=	0x6100
                           006160   874 _SRCRESMASK0	=	0x6160
                           006161   875 _SRCRESMASK1	=	0x6161
                           006162   876 _SRCRESMASK2	=	0x6162
                           006163   877 _SRCRESINDEX	=	0x6163
                           006164   878 _SRCEXTPENDEN0	=	0x6164
                           006165   879 _SRCEXTPENDEN1	=	0x6165
                           006166   880 _SRCEXTPENDEN2	=	0x6166
                           006167   881 _SRCSHORTPENDEN0	=	0x6167
                           006168   882 _SRCSHORTPENDEN1	=	0x6168
                           006169   883 _SRCSHORTPENDEN2	=	0x6169
                           00616A   884 _EXT_ADDR0	=	0x616a
                           00616B   885 _EXT_ADDR1	=	0x616b
                           00616C   886 _EXT_ADDR2	=	0x616c
                           00616D   887 _EXT_ADDR3	=	0x616d
                           00616E   888 _EXT_ADDR4	=	0x616e
                           00616F   889 _EXT_ADDR5	=	0x616f
                           006170   890 _EXT_ADDR6	=	0x6170
                           006171   891 _EXT_ADDR7	=	0x6171
                           006172   892 _PAN_ID0	=	0x6172
                           006173   893 _PAN_ID1	=	0x6173
                           006174   894 _SHORT_ADDR0	=	0x6174
                           006175   895 _SHORT_ADDR1	=	0x6175
                           006180   896 _FRMFILT0	=	0x6180
                           006181   897 _FRMFILT1	=	0x6181
                           006182   898 _SRCMATCH	=	0x6182
                           006183   899 _SRCSHORTEN0	=	0x6183
                           006184   900 _SRCSHORTEN1	=	0x6184
                           006185   901 _SRCSHORTEN2	=	0x6185
                           006186   902 _SRCEXTEN0	=	0x6186
                           006187   903 _SRCEXTEN1	=	0x6187
                           006188   904 _SRCEXTEN2	=	0x6188
                           006189   905 _FRMCTRL0	=	0x6189
                           00618A   906 _FRMCTRL1	=	0x618a
                           00618B   907 _RXENABLE	=	0x618b
                           00618C   908 _RXMASKSET	=	0x618c
                           00618D   909 _RXMASKCLR	=	0x618d
                           00618E   910 _FREQTUNE	=	0x618e
                           00618F   911 _FREQCTRL	=	0x618f
                           006190   912 _TXPOWER	=	0x6190
                           006191   913 _TXCTRL	=	0x6191
                           006192   914 _FSMSTAT0	=	0x6192
                           006193   915 _FSMSTAT1	=	0x6193
                           006194   916 _FIFOPCTRL	=	0x6194
                           006195   917 _FSMCTRL	=	0x6195
                           006196   918 _CCACTRL0	=	0x6196
                           006197   919 _CCACTRL1	=	0x6197
                           006198   920 _RSSI	=	0x6198
                           006199   921 _RSSISTAT	=	0x6199
                           00619A   922 _RXFIRST	=	0x619a
                           00619B   923 _RXFIFOCNT	=	0x619b
                           00619C   924 _TXFIFOCNT	=	0x619c
                           00619D   925 _RXFIRST_PTR	=	0x619d
                           00619E   926 _RXLAST_PTR	=	0x619e
                           00619F   927 _RXP1_PTR	=	0x619f
                           0061A1   928 _TXFIRST_PTR	=	0x61a1
                           0061A2   929 _TXLAST_PTR	=	0x61a2
                           0061A3   930 _RFIRQM0	=	0x61a3
                           0061A4   931 _RFIRQM1	=	0x61a4
                           0061A5   932 _RFERRM	=	0x61a5
                           0061A7   933 _RFRND	=	0x61a7
                           0061A8   934 _MDMCTRL0	=	0x61a8
                           0061A9   935 _MDMCTRL1	=	0x61a9
                           0061AA   936 _FREQEST	=	0x61aa
                           0061AB   937 _RXCTRL	=	0x61ab
                           0061AC   938 _FSCTRL	=	0x61ac
                           0061AD   939 _FSCAL0	=	0x61ad
                           0061AE   940 _FSCAL1	=	0x61ae
                           0061AF   941 _FSCAL2	=	0x61af
                           0061B0   942 _FSCAL3	=	0x61b0
                           0061B1   943 _AGCCTRL0	=	0x61b1
                           0061B2   944 _AGCCTRL1	=	0x61b2
                           0061B3   945 _AGCCTRL2	=	0x61b3
                           0061B4   946 _AGCCTRL3	=	0x61b4
                           0061B5   947 _ADCTEST0	=	0x61b5
                           0061B6   948 _ADCTEST1	=	0x61b6
                           0061B7   949 _ADCTEST2	=	0x61b7
                           0061B8   950 _MDMTEST0	=	0x61b8
                           0061B9   951 _MDMTEST1	=	0x61b9
                           0061BA   952 _DACTEST0	=	0x61ba
                           0061BB   953 _DACTEST1	=	0x61bb
                           0061BC   954 _DACTEST2	=	0x61bc
                           0061BD   955 _ATEST	=	0x61bd
                           0061BE   956 _PTEST0	=	0x61be
                           0061BF   957 _PTEST1	=	0x61bf
                           0061FA   958 _TXFILTCFG	=	0x61fa
                           0061EB   959 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   960 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   961 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   962 _CSPPROG0	=	0x61c0
                           0061C1   963 _CSPPROG1	=	0x61c1
                           0061C2   964 _CSPPROG2	=	0x61c2
                           0061C3   965 _CSPPROG3	=	0x61c3
                           0061C4   966 _CSPPROG4	=	0x61c4
                           0061C5   967 _CSPPROG5	=	0x61c5
                           0061C6   968 _CSPPROG6	=	0x61c6
                           0061C7   969 _CSPPROG7	=	0x61c7
                           0061C8   970 _CSPPROG8	=	0x61c8
                           0061C9   971 _CSPPROG9	=	0x61c9
                           0061CA   972 _CSPPROG10	=	0x61ca
                           0061CB   973 _CSPPROG11	=	0x61cb
                           0061CC   974 _CSPPROG12	=	0x61cc
                           0061CD   975 _CSPPROG13	=	0x61cd
                           0061CE   976 _CSPPROG14	=	0x61ce
                           0061CF   977 _CSPPROG15	=	0x61cf
                           0061D0   978 _CSPPROG16	=	0x61d0
                           0061D1   979 _CSPPROG17	=	0x61d1
                           0061D2   980 _CSPPROG18	=	0x61d2
                           0061D3   981 _CSPPROG19	=	0x61d3
                           0061D4   982 _CSPPROG20	=	0x61d4
                           0061D5   983 _CSPPROG21	=	0x61d5
                           0061D6   984 _CSPPROG22	=	0x61d6
                           0061D7   985 _CSPPROG23	=	0x61d7
                           0061E0   986 _CSPCTRL	=	0x61e0
                           0061E1   987 _CSPSTAT	=	0x61e1
                           0061E2   988 _CSPX	=	0x61e2
                           0061E3   989 _CSPY	=	0x61e3
                           0061E4   990 _CSPZ	=	0x61e4
                           0061E5   991 _CSPT	=	0x61e5
                           006200   992 _USBADDR	=	0x6200
                           006201   993 _USBPOW	=	0x6201
                           006202   994 _USBIIF	=	0x6202
                           006204   995 _USBOIF	=	0x6204
                           006206   996 _USBCIF	=	0x6206
                           006207   997 _USBIIE	=	0x6207
                           006209   998 _USBOIE	=	0x6209
                           00620B   999 _USBCIE	=	0x620b
                           00620C  1000 _USBFRML	=	0x620c
                           00620D  1001 _USBFRMH	=	0x620d
                           00620E  1002 _USBINDEX	=	0x620e
                           00620F  1003 _USBCTRL	=	0x620f
                           006210  1004 _USBMAXI	=	0x6210
                           006211  1005 _USBCS0	=	0x6211
                           006211  1006 _USBCSIL	=	0x6211
                           006212  1007 _USBCSIH	=	0x6212
                           006213  1008 _USBMAXO	=	0x6213
                           006214  1009 _USBCSOL	=	0x6214
                           006215  1010 _USBCSOH	=	0x6215
                           006216  1011 _USBCNT0	=	0x6216
                           006216  1012 _USBCNTL	=	0x6216
                           006217  1013 _USBCNTH	=	0x6217
                           006220  1014 _USBF0	=	0x6220
                           006222  1015 _USBF1	=	0x6222
                           006224  1016 _USBF2	=	0x6224
                           006226  1017 _USBF3	=	0x6226
                           006228  1018 _USBF4	=	0x6228
                           00622A  1019 _USBF5	=	0x622a
                           007080  1020 _X_P0	=	0x7080
                           007086  1021 _X_U0CSR	=	0x7086
                           007089  1022 _X_P0IFG	=	0x7089
                           00708A  1023 _X_P1IFG	=	0x708a
                           00708B  1024 _X_P2IFG	=	0x708b
                           00708C  1025 _X_PICTL	=	0x708c
                           00708D  1026 _X_P1IEN	=	0x708d
                           00708F  1027 _X_P0INP	=	0x708f
                           007090  1028 _X_P1	=	0x7090
                           007091  1029 _X_RFIRQF1	=	0x7091
                           007093  1030 _X_MPAGE	=	0x7093
                           007093  1031 _X__XPAGE	=	0x7093
                           007094  1032 _X_T2CTRL	=	0x7094
                           007095  1033 _X_ST0	=	0x7095
                           007096  1034 _X_ST1	=	0x7096
                           007097  1035 _X_ST2	=	0x7097
                           00709C  1036 _X_T2EVTCFG	=	0x709c
                           00709D  1037 _X_SLEEPSTA	=	0x709d
                           00709E  1038 _X_CLKCONSTA	=	0x709e
                           00709F  1039 _X_FMAP	=	0x709f
                           00709F  1040 _X_PSBANK	=	0x709f
                           0070A0  1041 _X_P2	=	0x70a0
                           0070A1  1042 _X_T2IRQF	=	0x70a1
                           0070A2  1043 _X_T2M0	=	0x70a2
                           0070A3  1044 _X_T2M1	=	0x70a3
                           0070A4  1045 _X_T2MOVF0	=	0x70a4
                           0070A5  1046 _X_T2MOVF1	=	0x70a5
                           0070A6  1047 _X_T2MOVF2	=	0x70a6
                           0070A7  1048 _X_T2IRQM	=	0x70a7
                           0070AB  1049 _X_P0IEN	=	0x70ab
                           0070AC  1050 _X_P2IEN	=	0x70ac
                           0070AD  1051 _X_STLOAD	=	0x70ad
                           0070AE  1052 _X_PMUX	=	0x70ae
                           0070AF  1053 _X_T1STAT	=	0x70af
                           0070B1  1054 _X_ENCDI	=	0x70b1
                           0070B2  1055 _X_ENCDO	=	0x70b2
                           0070B3  1056 _X_ENCCS	=	0x70b3
                           0070B4  1057 _X_ADCCON1	=	0x70b4
                           0070B5  1058 _X_ADCCON2	=	0x70b5
                           0070B6  1059 _X_ADCCON3	=	0x70b6
                           0070BA  1060 _X_ADCL	=	0x70ba
                           0070BB  1061 _X_ADCH	=	0x70bb
                           0070BC  1062 _X_RNDL	=	0x70bc
                           0070BD  1063 _X_RNDH	=	0x70bd
                           0070BE  1064 _X_SLEEPCMD	=	0x70be
                           0070BF  1065 _X_RFERRF	=	0x70bf
                           0070C1  1066 _X_U0DBUF	=	0x70c1
                           0070C2  1067 _X_U0BAUD	=	0x70c2
                           0070C3  1068 _X_T2MSEL	=	0x70c3
                           0070C4  1069 _X_U0UCR	=	0x70c4
                           0070C5  1070 _X_U0GCR	=	0x70c5
                           0070C6  1071 _X_CLKCONCMD	=	0x70c6
                           0070C7  1072 _X_MEMCTR	=	0x70c7
                           0070C9  1073 _X_WDCTL	=	0x70c9
                           0070CA  1074 _X_T3CNT	=	0x70ca
                           0070CB  1075 _X_T3CTL	=	0x70cb
                           0070CC  1076 _X_T3CCTL0	=	0x70cc
                           0070CD  1077 _X_T3CC0	=	0x70cd
                           0070CE  1078 _X_T3CCTL1	=	0x70ce
                           0070CF  1079 _X_T3CC1	=	0x70cf
                           0070D1  1080 _X_DMAIRQ	=	0x70d1
                           0070D2  1081 _X_DMA1CFGL	=	0x70d2
                           0070D3  1082 _X_DMA1CFGH	=	0x70d3
                           0070D4  1083 _X_DMA0CFGL	=	0x70d4
                           0070D5  1084 _X_DMA0CFGH	=	0x70d5
                           0070D6  1085 _X_DMAARM	=	0x70d6
                           0070D7  1086 _X_DMAREQ	=	0x70d7
                           0070D8  1087 _X_TIMIF	=	0x70d8
                           0070D9  1088 _X_RFD	=	0x70d9
                           0070DA  1089 _X_T1CC0L	=	0x70da
                           0070DB  1090 _X_T1CC0H	=	0x70db
                           0070DC  1091 _X_T1CC1L	=	0x70dc
                           0070DD  1092 _X_T1CC1H	=	0x70dd
                           0070DE  1093 _X_T1CC2L	=	0x70de
                           0070DF  1094 _X_T1CC2H	=	0x70df
                           0070E1  1095 _X_RFST	=	0x70e1
                           0070E2  1096 _X_T1CNTL	=	0x70e2
                           0070E3  1097 _X_T1CNTH	=	0x70e3
                           0070E4  1098 _X_T1CTL	=	0x70e4
                           0070E5  1099 _X_T1CCTL0	=	0x70e5
                           0070E6  1100 _X_T1CCTL1	=	0x70e6
                           0070E7  1101 _X_T1CCTL2	=	0x70e7
                           0070E9  1102 _X_RFIRQF0	=	0x70e9
                           0070EA  1103 _X_T4CNT	=	0x70ea
                           0070EB  1104 _X_T4CTL	=	0x70eb
                           0070EC  1105 _X_T4CCTL0	=	0x70ec
                           0070ED  1106 _X_T4CC0	=	0x70ed
                           0070EE  1107 _X_T4CCTL1	=	0x70ee
                           0070EF  1108 _X_T4CC1	=	0x70ef
                           0070F1  1109 _X_PERCFG	=	0x70f1
                           0070F2  1110 _X_APCFG	=	0x70f2
                           0070F3  1111 _X_P0SEL	=	0x70f3
                           0070F4  1112 _X_P1SEL	=	0x70f4
                           0070F5  1113 _X_P2SEL	=	0x70f5
                           0070F6  1114 _X_P1INP	=	0x70f6
                           0070F7  1115 _X_P2INP	=	0x70f7
                           0070F8  1116 _X_U1CSR	=	0x70f8
                           0070F9  1117 _X_U1DBUF	=	0x70f9
                           0070FA  1118 _X_U1BAUD	=	0x70fa
                           0070FB  1119 _X_U1UCR	=	0x70fb
                           0070FC  1120 _X_U1GCR	=	0x70fc
                           0070FD  1121 _X_P0DIR	=	0x70fd
                           0070FE  1122 _X_P1DIR	=	0x70fe
                           0070FF  1123 _X_P2DIR	=	0x70ff
                           007800  1124 _X_INFOPAGE	=	0x7800
                           00780C  1125 _X_IEEE_ADDR	=	0x780c
                                   1126 ;--------------------------------------------------------
                                   1127 ; absolute external ram data
                                   1128 ;--------------------------------------------------------
                                   1129 	.area XABS    (ABS,XDATA)
                                   1130 ;--------------------------------------------------------
                                   1131 ; external initialized ram data
                                   1132 ;--------------------------------------------------------
                                   1133 	.area XISEG   (XDATA)
                                   1134 	.area HOME    (CODE)
                                   1135 	.area GSINIT0 (CODE)
                                   1136 	.area GSINIT1 (CODE)
                                   1137 	.area GSINIT2 (CODE)
                                   1138 	.area GSINIT3 (CODE)
                                   1139 	.area GSINIT4 (CODE)
                                   1140 	.area GSINIT5 (CODE)
                                   1141 	.area GSINIT  (CODE)
                                   1142 	.area GSFINAL (CODE)
                                   1143 	.area CSEG    (CODE)
                                   1144 ;--------------------------------------------------------
                                   1145 ; global & static initialisations
                                   1146 ;--------------------------------------------------------
                                   1147 	.area HOME    (CODE)
                                   1148 	.area GSINIT  (CODE)
                                   1149 	.area GSFINAL (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 ;--------------------------------------------------------
                                   1152 ; Home
                                   1153 ;--------------------------------------------------------
                                   1154 	.area HOME    (CODE)
                                   1155 	.area HOME    (CODE)
                                   1156 ;--------------------------------------------------------
                                   1157 ; code
                                   1158 ;--------------------------------------------------------
                                   1159 	.area CSEG    (CODE)
                                   1160 ;------------------------------------------------------------
                                   1161 ;Allocation info for local variables in function 'get_bits_in_byte'
                                   1162 ;------------------------------------------------------------
                                   1163 ;bitpos                    Allocated to stack - sp -3
                                   1164 ;vallen                    Allocated to stack - sp -5
                                   1165 ;from                      Allocated to registers r5 r6 r7 
                                   1166 ;shifted_val               Allocated to registers r4 r3 
                                   1167 ;------------------------------------------------------------
                                   1168 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:73: get_bits_in_byte(uint8_t *from, int bitpos, int vallen)
                                   1169 ;	-----------------------------------------
                                   1170 ;	 function get_bits_in_byte
                                   1171 ;	-----------------------------------------
      000000                       1172 _get_bits_in_byte:
                           000007  1173 	ar7 = 0x07
                           000006  1174 	ar6 = 0x06
                           000005  1175 	ar5 = 0x05
                           000004  1176 	ar4 = 0x04
                           000003  1177 	ar3 = 0x03
                           000002  1178 	ar2 = 0x02
                           000001  1179 	ar1 = 0x01
                           000000  1180 	ar0 = 0x00
                                   1181 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:77: shifted_val = (from[0] << 8) | from[1];
      000000 AD 82            [24] 1182 	mov	r5,dpl
      000002 AE 83            [24] 1183 	mov	r6,dph
      000004 AF F0            [24] 1184 	mov	r7,b
      000006 12r00r00         [24] 1185 	lcall	__gptrget
      000009 FB               [12] 1186 	mov	r3,a
      00000A 7C 00            [12] 1187 	mov	r4,#0x00
      00000C 0D               [12] 1188 	inc	r5
      00000D BD 00 01         [24] 1189 	cjne	r5,#0x00,00103$
      000010 0E               [12] 1190 	inc	r6
      000011                       1191 00103$:
      000011 8D 82            [24] 1192 	mov	dpl,r5
      000013 8E 83            [24] 1193 	mov	dph,r6
      000015 8F F0            [24] 1194 	mov	b,r7
      000017 12r00r00         [24] 1195 	lcall	__gptrget
      00001A FD               [12] 1196 	mov	r5,a
      00001B 7F 00            [12] 1197 	mov	r7,#0x00
      00001D 42 04            [12] 1198 	orl	ar4,a
      00001F EF               [12] 1199 	mov	a,r7
      000020 42 03            [12] 1200 	orl	ar3,a
                                   1201 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:85: return (((shifted_val << bitpos) >> 8) & bitmask[vallen]) >> (8 - vallen);
      000022 E5 81            [12] 1202 	mov	a,sp
      000024 24 FD            [12] 1203 	add	a,#0xfd
      000026 F8               [12] 1204 	mov	r0,a
      000027 86 F0            [24] 1205 	mov	b,@r0
      000029 05 F0            [12] 1206 	inc	b
      00002B 80 06            [24] 1207 	sjmp	00105$
      00002D                       1208 00104$:
      00002D EC               [12] 1209 	mov	a,r4
      00002E 2C               [12] 1210 	add	a,r4
      00002F FC               [12] 1211 	mov	r4,a
      000030 EB               [12] 1212 	mov	a,r3
      000031 33               [12] 1213 	rlc	a
      000032 FB               [12] 1214 	mov	r3,a
      000033                       1215 00105$:
      000033 D5 F0 F7         [24] 1216 	djnz	b,00104$
      000036 8B 04            [24] 1217 	mov	ar4,r3
      000038 7B 00            [12] 1218 	mov	r3,#0x00
      00003A E5 81            [12] 1219 	mov	a,sp
      00003C 24 FB            [12] 1220 	add	a,#0xfb
      00003E F8               [12] 1221 	mov	r0,a
      00003F E6               [12] 1222 	mov	a,@r0
      000040 24r00            [12] 1223 	add	a,#_bitmask
      000042 F5 82            [12] 1224 	mov	dpl,a
      000044 08               [12] 1225 	inc	r0
      000045 E6               [12] 1226 	mov	a,@r0
      000046 34s00            [12] 1227 	addc	a,#(_bitmask >> 8)
      000048 F5 83            [12] 1228 	mov	dph,a
      00004A E4               [12] 1229 	clr	a
      00004B 93               [24] 1230 	movc	a,@a+dptr
      00004C 7E 00            [12] 1231 	mov	r6,#0x00
      00004E 52 04            [12] 1232 	anl	ar4,a
      000050 EE               [12] 1233 	mov	a,r6
      000051 52 03            [12] 1234 	anl	ar3,a
      000053 E5 81            [12] 1235 	mov	a,sp
      000055 24 FB            [12] 1236 	add	a,#0xfb
      000057 F8               [12] 1237 	mov	r0,a
      000058 74 08            [12] 1238 	mov	a,#0x08
      00005A C3               [12] 1239 	clr	c
      00005B 96               [12] 1240 	subb	a,@r0
      00005C FE               [12] 1241 	mov	r6,a
      00005D E4               [12] 1242 	clr	a
      00005E 08               [12] 1243 	inc	r0
      00005F 96               [12] 1244 	subb	a,@r0
      000060 FF               [12] 1245 	mov	r7,a
      000061 8E F0            [24] 1246 	mov	b,r6
      000063 05 F0            [12] 1247 	inc	b
      000065 80 07            [24] 1248 	sjmp	00107$
      000067                       1249 00106$:
      000067 C3               [12] 1250 	clr	c
      000068 EB               [12] 1251 	mov	a,r3
      000069 13               [12] 1252 	rrc	a
      00006A FB               [12] 1253 	mov	r3,a
      00006B EC               [12] 1254 	mov	a,r4
      00006C 13               [12] 1255 	rrc	a
      00006D FC               [12] 1256 	mov	r4,a
      00006E                       1257 00107$:
      00006E D5 F0 F6         [24] 1258 	djnz	b,00106$
      000071 8C 82            [24] 1259 	mov	dpl,r4
      000073 22               [24] 1260 	ret
                                   1261 ;------------------------------------------------------------
                                   1262 ;Allocation info for local variables in function 'get_bits'
                                   1263 ;------------------------------------------------------------
                                   1264 ;from                      Allocated to stack - sp -11
                                   1265 ;bitpos                    Allocated to stack - sp -13
                                   1266 ;vallen                    Allocated to stack - sp -15
                                   1267 ;to                        Allocated to stack - sp -6
                                   1268 ;i                         Allocated to stack - sp -3
                                   1269 ;bits                      Allocated to stack - sp -1
                                   1270 ;------------------------------------------------------------
                                   1271 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:89: get_bits(uint8_t *to, uint8_t *from, int bitpos, int vallen)
                                   1272 ;	-----------------------------------------
                                   1273 ;	 function get_bits
                                   1274 ;	-----------------------------------------
      000074                       1275 _get_bits:
      000074 C0 82            [24] 1276 	push	dpl
      000076 C0 83            [24] 1277 	push	dph
      000078 C0 F0            [24] 1278 	push	b
      00007A E5 81            [12] 1279 	mov	a,sp
      00007C 24 04            [12] 1280 	add	a,#0x04
                                   1281 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:94: if(vallen < 8) {
      00007E F5 81            [12] 1282 	mov	sp,a
      000080 24 F1            [12] 1283 	add	a,#0xf1
      000082 F8               [12] 1284 	mov	r0,a
      000083 C3               [12] 1285 	clr	c
      000084 E6               [12] 1286 	mov	a,@r0
      000085 94 08            [12] 1287 	subb	a,#0x08
      000087 08               [12] 1288 	inc	r0
      000088 E6               [12] 1289 	mov	a,@r0
      000089 64 80            [12] 1290 	xrl	a,#0x80
      00008B 94 80            [12] 1291 	subb	a,#0x80
      00008D 50 42            [24] 1292 	jnc	00111$
                                   1293 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:95: *to = get_bits_in_byte(from, bitpos, vallen);
      00008F E5 81            [12] 1294 	mov	a,sp
      000091 24 F1            [12] 1295 	add	a,#0xf1
      000093 F8               [12] 1296 	mov	r0,a
      000094 E6               [12] 1297 	mov	a,@r0
      000095 C0 E0            [24] 1298 	push	acc
      000097 08               [12] 1299 	inc	r0
      000098 E6               [12] 1300 	mov	a,@r0
      000099 C0 E0            [24] 1301 	push	acc
      00009B E5 81            [12] 1302 	mov	a,sp
      00009D 24 F1            [12] 1303 	add	a,#0xf1
      00009F F8               [12] 1304 	mov	r0,a
      0000A0 E6               [12] 1305 	mov	a,@r0
      0000A1 C0 E0            [24] 1306 	push	acc
      0000A3 08               [12] 1307 	inc	r0
      0000A4 E6               [12] 1308 	mov	a,@r0
      0000A5 C0 E0            [24] 1309 	push	acc
      0000A7 E5 81            [12] 1310 	mov	a,sp
      0000A9 24 F1            [12] 1311 	add	a,#0xf1
      0000AB F8               [12] 1312 	mov	r0,a
      0000AC 86 82            [24] 1313 	mov	dpl,@r0
      0000AE 08               [12] 1314 	inc	r0
      0000AF 86 83            [24] 1315 	mov	dph,@r0
      0000B1 08               [12] 1316 	inc	r0
      0000B2 86 F0            [24] 1317 	mov	b,@r0
      0000B4 12r00r00         [24] 1318 	lcall	_get_bits_in_byte
      0000B7 AC 82            [24] 1319 	mov	r4,dpl
      0000B9 E5 81            [12] 1320 	mov	a,sp
      0000BB 24 FC            [12] 1321 	add	a,#0xfc
      0000BD F5 81            [12] 1322 	mov	sp,a
      0000BF 24 FA            [12] 1323 	add	a,#0xfa
      0000C1 F8               [12] 1324 	mov	r0,a
      0000C2 86 82            [24] 1325 	mov	dpl,@r0
      0000C4 08               [12] 1326 	inc	r0
      0000C5 86 83            [24] 1327 	mov	dph,@r0
      0000C7 08               [12] 1328 	inc	r0
      0000C8 86 F0            [24] 1329 	mov	b,@r0
      0000CA EC               [12] 1330 	mov	a,r4
      0000CB 12r00r00         [24] 1331 	lcall	__gptrput
      0000CE 02r03r1D         [24] 1332 	ljmp	00119$
      0000D1                       1333 00111$:
                                   1334 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:97: if(bitpos == 0) {
      0000D1 E5 81            [12] 1335 	mov	a,sp
      0000D3 24 F3            [12] 1336 	add	a,#0xf3
      0000D5 F8               [12] 1337 	mov	r0,a
      0000D6 E6               [12] 1338 	mov	a,@r0
      0000D7 08               [12] 1339 	inc	r0
      0000D8 46               [12] 1340 	orl	a,@r0
      0000D9 60 03            [24] 1341 	jz	00148$
      0000DB 02r01rE9         [24] 1342 	ljmp	00127$
      0000DE                       1343 00148$:
                                   1344 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:98: for(i = 0; i < vallen / 8; ++i) {
      0000DE 74 08            [12] 1345 	mov	a,#0x08
      0000E0 C0 E0            [24] 1346 	push	acc
      0000E2 E4               [12] 1347 	clr	a
      0000E3 C0 E0            [24] 1348 	push	acc
      0000E5 E5 81            [12] 1349 	mov	a,sp
      0000E7 24 EF            [12] 1350 	add	a,#0xef
      0000E9 F8               [12] 1351 	mov	r0,a
      0000EA 86 82            [24] 1352 	mov	dpl,@r0
      0000EC 08               [12] 1353 	inc	r0
      0000ED 86 83            [24] 1354 	mov	dph,@r0
      0000EF 12r00r00         [24] 1355 	lcall	__divsint
      0000F2 AB 82            [24] 1356 	mov	r3,dpl
      0000F4 AC 83            [24] 1357 	mov	r4,dph
      0000F6 15 81            [12] 1358 	dec	sp
      0000F8 15 81            [12] 1359 	dec	sp
      0000FA E5 81            [12] 1360 	mov	a,sp
      0000FC 24 FD            [12] 1361 	add	a,#0xfd
      0000FE F8               [12] 1362 	mov	r0,a
      0000FF E4               [12] 1363 	clr	a
      000100 F6               [12] 1364 	mov	@r0,a
      000101 08               [12] 1365 	inc	r0
      000102 F6               [12] 1366 	mov	@r0,a
      000103                       1367 00114$:
      000103 E5 81            [12] 1368 	mov	a,sp
      000105 24 FD            [12] 1369 	add	a,#0xfd
      000107 F8               [12] 1370 	mov	r0,a
      000108 C3               [12] 1371 	clr	c
      000109 E6               [12] 1372 	mov	a,@r0
      00010A 9B               [12] 1373 	subb	a,r3
      00010B 08               [12] 1374 	inc	r0
      00010C E6               [12] 1375 	mov	a,@r0
      00010D 64 80            [12] 1376 	xrl	a,#0x80
      00010F 8C F0            [24] 1377 	mov	b,r4
      000111 63 F0 80         [24] 1378 	xrl	b,#0x80
      000114 95 F0            [12] 1379 	subb	a,b
      000116 50 52            [24] 1380 	jnc	00101$
                                   1381 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:101: to[i] = from[i];
      000118 C0 03            [24] 1382 	push	ar3
      00011A C0 04            [24] 1383 	push	ar4
      00011C E5 81            [12] 1384 	mov	a,sp
      00011E 24 F8            [12] 1385 	add	a,#0xf8
      000120 F8               [12] 1386 	mov	r0,a
      000121 E5 81            [12] 1387 	mov	a,sp
      000123 24 FB            [12] 1388 	add	a,#0xfb
      000125 F9               [12] 1389 	mov	r1,a
      000126 E7               [12] 1390 	mov	a,@r1
      000127 26               [12] 1391 	add	a,@r0
      000128 FC               [12] 1392 	mov	r4,a
      000129 09               [12] 1393 	inc	r1
      00012A E7               [12] 1394 	mov	a,@r1
      00012B 08               [12] 1395 	inc	r0
      00012C 36               [12] 1396 	addc	a,@r0
      00012D FD               [12] 1397 	mov	r5,a
      00012E 08               [12] 1398 	inc	r0
      00012F 86 06            [24] 1399 	mov	ar6,@r0
      000131 E5 81            [12] 1400 	mov	a,sp
      000133 24 F3            [12] 1401 	add	a,#0xf3
      000135 F8               [12] 1402 	mov	r0,a
      000136 E5 81            [12] 1403 	mov	a,sp
      000138 24 FB            [12] 1404 	add	a,#0xfb
      00013A F9               [12] 1405 	mov	r1,a
      00013B E7               [12] 1406 	mov	a,@r1
      00013C 26               [12] 1407 	add	a,@r0
      00013D FA               [12] 1408 	mov	r2,a
      00013E 09               [12] 1409 	inc	r1
      00013F E7               [12] 1410 	mov	a,@r1
      000140 08               [12] 1411 	inc	r0
      000141 36               [12] 1412 	addc	a,@r0
      000142 FB               [12] 1413 	mov	r3,a
      000143 08               [12] 1414 	inc	r0
      000144 86 07            [24] 1415 	mov	ar7,@r0
      000146 8A 82            [24] 1416 	mov	dpl,r2
      000148 8B 83            [24] 1417 	mov	dph,r3
      00014A 8F F0            [24] 1418 	mov	b,r7
      00014C 12r00r00         [24] 1419 	lcall	__gptrget
      00014F FA               [12] 1420 	mov	r2,a
      000150 8C 82            [24] 1421 	mov	dpl,r4
      000152 8D 83            [24] 1422 	mov	dph,r5
      000154 8E F0            [24] 1423 	mov	b,r6
      000156 12r00r00         [24] 1424 	lcall	__gptrput
                                   1425 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:98: for(i = 0; i < vallen / 8; ++i) {
      000159 E5 81            [12] 1426 	mov	a,sp
      00015B 24 FB            [12] 1427 	add	a,#0xfb
      00015D F8               [12] 1428 	mov	r0,a
      00015E 06               [12] 1429 	inc	@r0
      00015F B6 00 02         [24] 1430 	cjne	@r0,#0x00,00150$
      000162 08               [12] 1431 	inc	r0
      000163 06               [12] 1432 	inc	@r0
      000164                       1433 00150$:
      000164 D0 04            [24] 1434 	pop	ar4
      000166 D0 03            [24] 1435 	pop	ar3
      000168 80 99            [24] 1436 	sjmp	00114$
      00016A                       1437 00101$:
                                   1438 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:103: bits = vallen & 7;
      00016A E5 81            [12] 1439 	mov	a,sp
      00016C 24 F1            [12] 1440 	add	a,#0xf1
      00016E F8               [12] 1441 	mov	r0,a
      00016F A9 81            [24] 1442 	mov	r1,sp
      000171 19               [12] 1443 	dec	r1
      000172 74 07            [12] 1444 	mov	a,#0x07
      000174 56               [12] 1445 	anl	a,@r0
      000175 F7               [12] 1446 	mov	@r1,a
      000176 09               [12] 1447 	inc	r1
      000177 77 00            [12] 1448 	mov	@r1,#0x00
                                   1449 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:104: if(bits) {
      000179 A8 81            [24] 1450 	mov	r0,sp
      00017B 18               [12] 1451 	dec	r0
      00017C E6               [12] 1452 	mov	a,@r0
      00017D 08               [12] 1453 	inc	r0
      00017E 46               [12] 1454 	orl	a,@r0
      00017F 70 03            [24] 1455 	jnz	00151$
      000181 02r03r1D         [24] 1456 	ljmp	00119$
      000184                       1457 00151$:
                                   1458 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:105: to[i] = get_bits_in_byte(&from[i], 0, bits);
      000184 E5 81            [12] 1459 	mov	a,sp
      000186 24 FA            [12] 1460 	add	a,#0xfa
      000188 F8               [12] 1461 	mov	r0,a
      000189 E5 81            [12] 1462 	mov	a,sp
      00018B 24 FD            [12] 1463 	add	a,#0xfd
      00018D F9               [12] 1464 	mov	r1,a
      00018E E7               [12] 1465 	mov	a,@r1
      00018F 26               [12] 1466 	add	a,@r0
      000190 FB               [12] 1467 	mov	r3,a
      000191 09               [12] 1468 	inc	r1
      000192 E7               [12] 1469 	mov	a,@r1
      000193 08               [12] 1470 	inc	r0
      000194 36               [12] 1471 	addc	a,@r0
      000195 FC               [12] 1472 	mov	r4,a
      000196 08               [12] 1473 	inc	r0
      000197 86 05            [24] 1474 	mov	ar5,@r0
      000199 E5 81            [12] 1475 	mov	a,sp
      00019B 24 F5            [12] 1476 	add	a,#0xf5
      00019D F8               [12] 1477 	mov	r0,a
      00019E E5 81            [12] 1478 	mov	a,sp
      0001A0 24 FD            [12] 1479 	add	a,#0xfd
      0001A2 F9               [12] 1480 	mov	r1,a
      0001A3 E7               [12] 1481 	mov	a,@r1
      0001A4 26               [12] 1482 	add	a,@r0
      0001A5 FA               [12] 1483 	mov	r2,a
      0001A6 09               [12] 1484 	inc	r1
      0001A7 E7               [12] 1485 	mov	a,@r1
      0001A8 08               [12] 1486 	inc	r0
      0001A9 36               [12] 1487 	addc	a,@r0
      0001AA FE               [12] 1488 	mov	r6,a
      0001AB 08               [12] 1489 	inc	r0
      0001AC 86 07            [24] 1490 	mov	ar7,@r0
      0001AE C0 05            [24] 1491 	push	ar5
      0001B0 C0 04            [24] 1492 	push	ar4
      0001B2 C0 03            [24] 1493 	push	ar3
      0001B4 E5 81            [12] 1494 	mov	a,sp
      0001B6 24 FC            [12] 1495 	add	a,#0xfc
      0001B8 F8               [12] 1496 	mov	r0,a
      0001B9 E6               [12] 1497 	mov	a,@r0
      0001BA C0 E0            [24] 1498 	push	acc
      0001BC 08               [12] 1499 	inc	r0
      0001BD E6               [12] 1500 	mov	a,@r0
      0001BE C0 E0            [24] 1501 	push	acc
      0001C0 E4               [12] 1502 	clr	a
      0001C1 C0 E0            [24] 1503 	push	acc
      0001C3 C0 E0            [24] 1504 	push	acc
      0001C5 8A 82            [24] 1505 	mov	dpl,r2
      0001C7 8E 83            [24] 1506 	mov	dph,r6
      0001C9 8F F0            [24] 1507 	mov	b,r7
      0001CB 12r00r00         [24] 1508 	lcall	_get_bits_in_byte
      0001CE AF 82            [24] 1509 	mov	r7,dpl
      0001D0 E5 81            [12] 1510 	mov	a,sp
      0001D2 24 FC            [12] 1511 	add	a,#0xfc
      0001D4 F5 81            [12] 1512 	mov	sp,a
      0001D6 D0 03            [24] 1513 	pop	ar3
      0001D8 D0 04            [24] 1514 	pop	ar4
      0001DA D0 05            [24] 1515 	pop	ar5
      0001DC 8B 82            [24] 1516 	mov	dpl,r3
      0001DE 8C 83            [24] 1517 	mov	dph,r4
      0001E0 8D F0            [24] 1518 	mov	b,r5
      0001E2 EF               [12] 1519 	mov	a,r7
      0001E3 12r00r00         [24] 1520 	lcall	__gptrput
      0001E6 02r03r1D         [24] 1521 	ljmp	00119$
                                   1522 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:108: for(i = 0; i < vallen / 8; ++i) {
      0001E9                       1523 00127$:
      0001E9 74 08            [12] 1524 	mov	a,#0x08
      0001EB C0 E0            [24] 1525 	push	acc
      0001ED E4               [12] 1526 	clr	a
      0001EE C0 E0            [24] 1527 	push	acc
      0001F0 E5 81            [12] 1528 	mov	a,sp
      0001F2 24 EF            [12] 1529 	add	a,#0xef
      0001F4 F8               [12] 1530 	mov	r0,a
      0001F5 86 82            [24] 1531 	mov	dpl,@r0
      0001F7 08               [12] 1532 	inc	r0
      0001F8 86 83            [24] 1533 	mov	dph,@r0
      0001FA 12r00r00         [24] 1534 	lcall	__divsint
      0001FD AE 82            [24] 1535 	mov	r6,dpl
      0001FF AF 83            [24] 1536 	mov	r7,dph
      000201 15 81            [12] 1537 	dec	sp
      000203 15 81            [12] 1538 	dec	sp
      000205 E5 81            [12] 1539 	mov	a,sp
      000207 24 FD            [12] 1540 	add	a,#0xfd
      000209 F8               [12] 1541 	mov	r0,a
      00020A E4               [12] 1542 	clr	a
      00020B F6               [12] 1543 	mov	@r0,a
      00020C 08               [12] 1544 	inc	r0
      00020D F6               [12] 1545 	mov	@r0,a
      00020E                       1546 00117$:
      00020E E5 81            [12] 1547 	mov	a,sp
      000210 24 FD            [12] 1548 	add	a,#0xfd
      000212 F8               [12] 1549 	mov	r0,a
      000213 C3               [12] 1550 	clr	c
      000214 E6               [12] 1551 	mov	a,@r0
      000215 9E               [12] 1552 	subb	a,r6
      000216 08               [12] 1553 	inc	r0
      000217 E6               [12] 1554 	mov	a,@r0
      000218 64 80            [12] 1555 	xrl	a,#0x80
      00021A 8F F0            [24] 1556 	mov	b,r7
      00021C 63 F0 80         [24] 1557 	xrl	b,#0x80
      00021F 95 F0            [12] 1558 	subb	a,b
      000221 50 7A            [24] 1559 	jnc	00104$
                                   1560 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:111: to[i] = get_bits_in_byte(&from[i], bitpos, 8);
      000223 C0 06            [24] 1561 	push	ar6
      000225 C0 07            [24] 1562 	push	ar7
      000227 E5 81            [12] 1563 	mov	a,sp
      000229 24 F8            [12] 1564 	add	a,#0xf8
      00022B F8               [12] 1565 	mov	r0,a
      00022C E5 81            [12] 1566 	mov	a,sp
      00022E 24 FB            [12] 1567 	add	a,#0xfb
      000230 F9               [12] 1568 	mov	r1,a
      000231 E7               [12] 1569 	mov	a,@r1
      000232 26               [12] 1570 	add	a,@r0
      000233 FA               [12] 1571 	mov	r2,a
      000234 09               [12] 1572 	inc	r1
      000235 E7               [12] 1573 	mov	a,@r1
      000236 08               [12] 1574 	inc	r0
      000237 36               [12] 1575 	addc	a,@r0
      000238 FB               [12] 1576 	mov	r3,a
      000239 08               [12] 1577 	inc	r0
      00023A 86 07            [24] 1578 	mov	ar7,@r0
      00023C E5 81            [12] 1579 	mov	a,sp
      00023E 24 F3            [12] 1580 	add	a,#0xf3
      000240 F8               [12] 1581 	mov	r0,a
      000241 E5 81            [12] 1582 	mov	a,sp
      000243 24 FB            [12] 1583 	add	a,#0xfb
      000245 F9               [12] 1584 	mov	r1,a
      000246 E7               [12] 1585 	mov	a,@r1
      000247 26               [12] 1586 	add	a,@r0
      000248 FC               [12] 1587 	mov	r4,a
      000249 09               [12] 1588 	inc	r1
      00024A E7               [12] 1589 	mov	a,@r1
      00024B 08               [12] 1590 	inc	r0
      00024C 36               [12] 1591 	addc	a,@r0
      00024D FD               [12] 1592 	mov	r5,a
      00024E 08               [12] 1593 	inc	r0
      00024F 86 06            [24] 1594 	mov	ar6,@r0
      000251 C0 07            [24] 1595 	push	ar7
      000253 C0 03            [24] 1596 	push	ar3
      000255 C0 02            [24] 1597 	push	ar2
      000257 74 08            [12] 1598 	mov	a,#0x08
      000259 C0 E0            [24] 1599 	push	acc
      00025B E4               [12] 1600 	clr	a
      00025C C0 E0            [24] 1601 	push	acc
      00025E E5 81            [12] 1602 	mov	a,sp
      000260 24 EC            [12] 1603 	add	a,#0xec
      000262 F8               [12] 1604 	mov	r0,a
      000263 E6               [12] 1605 	mov	a,@r0
      000264 C0 E0            [24] 1606 	push	acc
      000266 08               [12] 1607 	inc	r0
      000267 E6               [12] 1608 	mov	a,@r0
      000268 C0 E0            [24] 1609 	push	acc
      00026A 8C 82            [24] 1610 	mov	dpl,r4
      00026C 8D 83            [24] 1611 	mov	dph,r5
      00026E 8E F0            [24] 1612 	mov	b,r6
      000270 12r00r00         [24] 1613 	lcall	_get_bits_in_byte
      000273 AE 82            [24] 1614 	mov	r6,dpl
      000275 E5 81            [12] 1615 	mov	a,sp
      000277 24 FC            [12] 1616 	add	a,#0xfc
      000279 F5 81            [12] 1617 	mov	sp,a
      00027B D0 02            [24] 1618 	pop	ar2
      00027D D0 03            [24] 1619 	pop	ar3
      00027F D0 07            [24] 1620 	pop	ar7
      000281 8A 82            [24] 1621 	mov	dpl,r2
      000283 8B 83            [24] 1622 	mov	dph,r3
      000285 8F F0            [24] 1623 	mov	b,r7
      000287 EE               [12] 1624 	mov	a,r6
      000288 12r00r00         [24] 1625 	lcall	__gptrput
                                   1626 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:108: for(i = 0; i < vallen / 8; ++i) {
      00028B E5 81            [12] 1627 	mov	a,sp
      00028D 24 FB            [12] 1628 	add	a,#0xfb
      00028F F8               [12] 1629 	mov	r0,a
      000290 06               [12] 1630 	inc	@r0
      000291 B6 00 02         [24] 1631 	cjne	@r0,#0x00,00153$
      000294 08               [12] 1632 	inc	r0
      000295 06               [12] 1633 	inc	@r0
      000296                       1634 00153$:
      000296 D0 07            [24] 1635 	pop	ar7
      000298 D0 06            [24] 1636 	pop	ar6
      00029A 02r02r0E         [24] 1637 	ljmp	00117$
      00029D                       1638 00104$:
                                   1639 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:113: bits = vallen & 7;
      00029D E5 81            [12] 1640 	mov	a,sp
      00029F 24 F1            [12] 1641 	add	a,#0xf1
      0002A1 F8               [12] 1642 	mov	r0,a
      0002A2 A9 81            [24] 1643 	mov	r1,sp
      0002A4 19               [12] 1644 	dec	r1
      0002A5 74 07            [12] 1645 	mov	a,#0x07
      0002A7 56               [12] 1646 	anl	a,@r0
      0002A8 F7               [12] 1647 	mov	@r1,a
      0002A9 09               [12] 1648 	inc	r1
      0002AA 77 00            [12] 1649 	mov	@r1,#0x00
                                   1650 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:114: if(bits) {
      0002AC A8 81            [24] 1651 	mov	r0,sp
      0002AE 18               [12] 1652 	dec	r0
      0002AF E6               [12] 1653 	mov	a,@r0
      0002B0 08               [12] 1654 	inc	r0
      0002B1 46               [12] 1655 	orl	a,@r0
      0002B2 60 69            [24] 1656 	jz	00119$
                                   1657 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:115: to[i] = get_bits_in_byte(&from[i], bitpos, bits);
      0002B4 E5 81            [12] 1658 	mov	a,sp
      0002B6 24 FA            [12] 1659 	add	a,#0xfa
      0002B8 F8               [12] 1660 	mov	r0,a
      0002B9 E5 81            [12] 1661 	mov	a,sp
      0002BB 24 FD            [12] 1662 	add	a,#0xfd
      0002BD F9               [12] 1663 	mov	r1,a
      0002BE E7               [12] 1664 	mov	a,@r1
      0002BF 26               [12] 1665 	add	a,@r0
      0002C0 FD               [12] 1666 	mov	r5,a
      0002C1 09               [12] 1667 	inc	r1
      0002C2 E7               [12] 1668 	mov	a,@r1
      0002C3 08               [12] 1669 	inc	r0
      0002C4 36               [12] 1670 	addc	a,@r0
      0002C5 FE               [12] 1671 	mov	r6,a
      0002C6 08               [12] 1672 	inc	r0
      0002C7 86 07            [24] 1673 	mov	ar7,@r0
      0002C9 E5 81            [12] 1674 	mov	a,sp
      0002CB 24 F5            [12] 1675 	add	a,#0xf5
      0002CD F8               [12] 1676 	mov	r0,a
      0002CE E5 81            [12] 1677 	mov	a,sp
      0002D0 24 FD            [12] 1678 	add	a,#0xfd
      0002D2 F9               [12] 1679 	mov	r1,a
      0002D3 E7               [12] 1680 	mov	a,@r1
      0002D4 26               [12] 1681 	add	a,@r0
      0002D5 FA               [12] 1682 	mov	r2,a
      0002D6 09               [12] 1683 	inc	r1
      0002D7 E7               [12] 1684 	mov	a,@r1
      0002D8 08               [12] 1685 	inc	r0
      0002D9 36               [12] 1686 	addc	a,@r0
      0002DA FB               [12] 1687 	mov	r3,a
      0002DB 08               [12] 1688 	inc	r0
      0002DC 86 04            [24] 1689 	mov	ar4,@r0
      0002DE C0 07            [24] 1690 	push	ar7
      0002E0 C0 06            [24] 1691 	push	ar6
      0002E2 C0 05            [24] 1692 	push	ar5
      0002E4 E5 81            [12] 1693 	mov	a,sp
      0002E6 24 FC            [12] 1694 	add	a,#0xfc
      0002E8 F8               [12] 1695 	mov	r0,a
      0002E9 E6               [12] 1696 	mov	a,@r0
      0002EA C0 E0            [24] 1697 	push	acc
      0002EC 08               [12] 1698 	inc	r0
      0002ED E6               [12] 1699 	mov	a,@r0
      0002EE C0 E0            [24] 1700 	push	acc
      0002F0 E5 81            [12] 1701 	mov	a,sp
      0002F2 24 EE            [12] 1702 	add	a,#0xee
      0002F4 F8               [12] 1703 	mov	r0,a
      0002F5 E6               [12] 1704 	mov	a,@r0
      0002F6 C0 E0            [24] 1705 	push	acc
      0002F8 08               [12] 1706 	inc	r0
      0002F9 E6               [12] 1707 	mov	a,@r0
      0002FA C0 E0            [24] 1708 	push	acc
      0002FC 8A 82            [24] 1709 	mov	dpl,r2
      0002FE 8B 83            [24] 1710 	mov	dph,r3
      000300 8C F0            [24] 1711 	mov	b,r4
      000302 12r00r00         [24] 1712 	lcall	_get_bits_in_byte
      000305 AC 82            [24] 1713 	mov	r4,dpl
      000307 E5 81            [12] 1714 	mov	a,sp
      000309 24 FC            [12] 1715 	add	a,#0xfc
      00030B F5 81            [12] 1716 	mov	sp,a
      00030D D0 05            [24] 1717 	pop	ar5
      00030F D0 06            [24] 1718 	pop	ar6
      000311 D0 07            [24] 1719 	pop	ar7
      000313 8D 82            [24] 1720 	mov	dpl,r5
      000315 8E 83            [24] 1721 	mov	dph,r6
      000317 8F F0            [24] 1722 	mov	b,r7
      000319 EC               [12] 1723 	mov	a,r4
      00031A 12r00r00         [24] 1724 	lcall	__gptrput
      00031D                       1725 00119$:
      00031D E5 81            [12] 1726 	mov	a,sp
      00031F 24 F9            [12] 1727 	add	a,#0xF9
      000321 F5 81            [12] 1728 	mov	sp,a
      000323 22               [24] 1729 	ret
                                   1730 ;------------------------------------------------------------
                                   1731 ;Allocation info for local variables in function 'header_size'
                                   1732 ;------------------------------------------------------------
                                   1733 ;a                         Allocated to registers 
                                   1734 ;size                      Allocated to stack - sp -1
                                   1735 ;len                       Allocated to registers r2 r4 
                                   1736 ;------------------------------------------------------------
                                   1737 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:122: header_size(const struct packetbuf_attrlist *a)
                                   1738 ;	-----------------------------------------
                                   1739 ;	 function header_size
                                   1740 ;	-----------------------------------------
      000324                       1741 _header_size:
      000324 05 81            [12] 1742 	inc	sp
      000326 05 81            [12] 1743 	inc	sp
      000328 AD 82            [24] 1744 	mov	r5,dpl
      00032A AE 83            [24] 1745 	mov	r6,dph
      00032C AF F0            [24] 1746 	mov	r7,b
                                   1747 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:129: size = 0;
      00032E A8 81            [24] 1748 	mov	r0,sp
      000330 18               [12] 1749 	dec	r0
      000331 E4               [12] 1750 	clr	a
      000332 F6               [12] 1751 	mov	@r0,a
      000333 08               [12] 1752 	inc	r0
      000334 F6               [12] 1753 	mov	@r0,a
      000335                       1754 00103$:
                                   1755 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:130: for(; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000335 8D 82            [24] 1756 	mov	dpl,r5
      000337 8E 83            [24] 1757 	mov	dph,r6
      000339 8F F0            [24] 1758 	mov	b,r7
      00033B 12r00r00         [24] 1759 	lcall	__gptrget
      00033E FA               [12] 1760 	mov	r2,a
      00033F 60 28            [24] 1761 	jz	00101$
                                   1762 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:140: len = a->len;
      000341 74 01            [12] 1763 	mov	a,#0x01
      000343 2D               [12] 1764 	add	a,r5
      000344 FA               [12] 1765 	mov	r2,a
      000345 E4               [12] 1766 	clr	a
      000346 3E               [12] 1767 	addc	a,r6
      000347 FB               [12] 1768 	mov	r3,a
      000348 8F 04            [24] 1769 	mov	ar4,r7
      00034A 8A 82            [24] 1770 	mov	dpl,r2
      00034C 8B 83            [24] 1771 	mov	dph,r3
      00034E 8C F0            [24] 1772 	mov	b,r4
      000350 12r00r00         [24] 1773 	lcall	__gptrget
      000353 FA               [12] 1774 	mov	r2,a
      000354 7C 00            [12] 1775 	mov	r4,#0x00
                                   1776 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:144: size += len;
      000356 A8 81            [24] 1777 	mov	r0,sp
      000358 18               [12] 1778 	dec	r0
      000359 EA               [12] 1779 	mov	a,r2
      00035A 26               [12] 1780 	add	a,@r0
      00035B F6               [12] 1781 	mov	@r0,a
      00035C EC               [12] 1782 	mov	a,r4
      00035D 08               [12] 1783 	inc	r0
      00035E 36               [12] 1784 	addc	a,@r0
      00035F F6               [12] 1785 	mov	@r0,a
                                   1786 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:130: for(; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000360 74 02            [12] 1787 	mov	a,#0x02
      000362 2D               [12] 1788 	add	a,r5
      000363 FD               [12] 1789 	mov	r5,a
      000364 E4               [12] 1790 	clr	a
      000365 3E               [12] 1791 	addc	a,r6
      000366 FE               [12] 1792 	mov	r6,a
      000367 80 CC            [24] 1793 	sjmp	00103$
      000369                       1794 00101$:
                                   1795 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:146: return size;
      000369 A8 81            [24] 1796 	mov	r0,sp
      00036B 18               [12] 1797 	dec	r0
      00036C 86 82            [24] 1798 	mov	dpl,@r0
      00036E 08               [12] 1799 	inc	r0
      00036F 86 83            [24] 1800 	mov	dph,@r0
      000371 15 81            [12] 1801 	dec	sp
      000373 15 81            [12] 1802 	dec	sp
      000375 22               [24] 1803 	ret
                                   1804 ;------------------------------------------------------------
                                   1805 ;Allocation info for local variables in function 'set_bits_in_byte'
                                   1806 ;------------------------------------------------------------
                                   1807 ;bitpos                    Allocated to stack - sp -8
                                   1808 ;val                       Allocated to stack - sp -9
                                   1809 ;vallen                    Allocated to stack - sp -11
                                   1810 ;target                    Allocated to stack - sp -4
                                   1811 ;shifted_val               Allocated to registers r3 r4 
                                   1812 ;sloc0                     Allocated to stack - sp -1
                                   1813 ;------------------------------------------------------------
                                   1814 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:150: set_bits_in_byte(uint8_t *target, int bitpos, uint8_t val, int vallen)
                                   1815 ;	-----------------------------------------
                                   1816 ;	 function set_bits_in_byte
                                   1817 ;	-----------------------------------------
      000376                       1818 _set_bits_in_byte:
      000376 C0 82            [24] 1819 	push	dpl
      000378 C0 83            [24] 1820 	push	dph
      00037A C0 F0            [24] 1821 	push	b
      00037C 05 81            [12] 1822 	inc	sp
      00037E 05 81            [12] 1823 	inc	sp
                                   1824 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:153: shifted_val = val << (8 - bitpos + 8 - vallen);
      000380 E5 81            [12] 1825 	mov	a,sp
      000382 24 F7            [12] 1826 	add	a,#0xf7
      000384 F8               [12] 1827 	mov	r0,a
      000385 86 03            [24] 1828 	mov	ar3,@r0
      000387 7C 00            [12] 1829 	mov	r4,#0x00
      000389 E5 81            [12] 1830 	mov	a,sp
      00038B 24 F8            [12] 1831 	add	a,#0xf8
      00038D F8               [12] 1832 	mov	r0,a
      00038E 74 10            [12] 1833 	mov	a,#0x10
      000390 C3               [12] 1834 	clr	c
      000391 96               [12] 1835 	subb	a,@r0
      000392 FA               [12] 1836 	mov	r2,a
      000393 E4               [12] 1837 	clr	a
      000394 08               [12] 1838 	inc	r0
      000395 96               [12] 1839 	subb	a,@r0
      000396 FF               [12] 1840 	mov	r7,a
      000397 E5 81            [12] 1841 	mov	a,sp
      000399 24 F5            [12] 1842 	add	a,#0xf5
      00039B F8               [12] 1843 	mov	r0,a
      00039C EA               [12] 1844 	mov	a,r2
      00039D C3               [12] 1845 	clr	c
      00039E 96               [12] 1846 	subb	a,@r0
      00039F FA               [12] 1847 	mov	r2,a
      0003A0 EF               [12] 1848 	mov	a,r7
      0003A1 08               [12] 1849 	inc	r0
      0003A2 96               [12] 1850 	subb	a,@r0
      0003A3 FF               [12] 1851 	mov	r7,a
      0003A4 8A F0            [24] 1852 	mov	b,r2
      0003A6 05 F0            [12] 1853 	inc	b
      0003A8 80 06            [24] 1854 	sjmp	00104$
      0003AA                       1855 00103$:
      0003AA EB               [12] 1856 	mov	a,r3
      0003AB 2B               [12] 1857 	add	a,r3
      0003AC FB               [12] 1858 	mov	r3,a
      0003AD EC               [12] 1859 	mov	a,r4
      0003AE 33               [12] 1860 	rlc	a
      0003AF FC               [12] 1861 	mov	r4,a
      0003B0                       1862 00104$:
      0003B0 D5 F0 F7         [24] 1863 	djnz	b,00103$
                                   1864 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:156: target[0] |= shifted_val >> 8;
      0003B3 E5 81            [12] 1865 	mov	a,sp
      0003B5 24 FC            [12] 1866 	add	a,#0xfc
      0003B7 F8               [12] 1867 	mov	r0,a
      0003B8 86 82            [24] 1868 	mov	dpl,@r0
      0003BA 08               [12] 1869 	inc	r0
      0003BB 86 83            [24] 1870 	mov	dph,@r0
      0003BD 08               [12] 1871 	inc	r0
      0003BE 86 F0            [24] 1872 	mov	b,@r0
      0003C0 12r00r00         [24] 1873 	lcall	__gptrget
      0003C3 FF               [12] 1874 	mov	r7,a
      0003C4 8C 06            [24] 1875 	mov	ar6,r4
      0003C6 EE               [12] 1876 	mov	a,r6
      0003C7 42 07            [12] 1877 	orl	ar7,a
      0003C9 E5 81            [12] 1878 	mov	a,sp
      0003CB 24 FC            [12] 1879 	add	a,#0xfc
      0003CD F8               [12] 1880 	mov	r0,a
      0003CE 86 82            [24] 1881 	mov	dpl,@r0
      0003D0 08               [12] 1882 	inc	r0
      0003D1 86 83            [24] 1883 	mov	dph,@r0
      0003D3 08               [12] 1884 	inc	r0
      0003D4 86 F0            [24] 1885 	mov	b,@r0
      0003D6 EF               [12] 1886 	mov	a,r7
      0003D7 12r00r00         [24] 1887 	lcall	__gptrput
                                   1888 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:157: target[1] |= shifted_val & 0xff;
      0003DA E5 81            [12] 1889 	mov	a,sp
      0003DC 24 FC            [12] 1890 	add	a,#0xfc
      0003DE F8               [12] 1891 	mov	r0,a
      0003DF 74 01            [12] 1892 	mov	a,#0x01
      0003E1 26               [12] 1893 	add	a,@r0
      0003E2 FD               [12] 1894 	mov	r5,a
      0003E3 E4               [12] 1895 	clr	a
      0003E4 08               [12] 1896 	inc	r0
      0003E5 36               [12] 1897 	addc	a,@r0
      0003E6 FE               [12] 1898 	mov	r6,a
      0003E7 08               [12] 1899 	inc	r0
      0003E8 86 07            [24] 1900 	mov	ar7,@r0
      0003EA 8D 82            [24] 1901 	mov	dpl,r5
      0003EC 8E 83            [24] 1902 	mov	dph,r6
      0003EE 8F F0            [24] 1903 	mov	b,r7
      0003F0 12r00r00         [24] 1904 	lcall	__gptrget
      0003F3 FA               [12] 1905 	mov	r2,a
      0003F4 A8 81            [24] 1906 	mov	r0,sp
      0003F6 18               [12] 1907 	dec	r0
      0003F7 A6 03            [24] 1908 	mov	@r0,ar3
      0003F9 08               [12] 1909 	inc	r0
      0003FA 76 00            [12] 1910 	mov	@r0,#0x00
      0003FC 7C 00            [12] 1911 	mov	r4,#0x00
      0003FE A8 81            [24] 1912 	mov	r0,sp
      000400 18               [12] 1913 	dec	r0
      000401 E6               [12] 1914 	mov	a,@r0
      000402 42 02            [12] 1915 	orl	ar2,a
      000404 08               [12] 1916 	inc	r0
      000405 E6               [12] 1917 	mov	a,@r0
      000406 42 04            [12] 1918 	orl	ar4,a
      000408 8D 82            [24] 1919 	mov	dpl,r5
      00040A 8E 83            [24] 1920 	mov	dph,r6
      00040C 8F F0            [24] 1921 	mov	b,r7
      00040E EA               [12] 1922 	mov	a,r2
      00040F 12r00r00         [24] 1923 	lcall	__gptrput
      000412 E5 81            [12] 1924 	mov	a,sp
      000414 24 FB            [12] 1925 	add	a,#0xFB
      000416 F5 81            [12] 1926 	mov	sp,a
      000418 22               [24] 1927 	ret
                                   1928 ;------------------------------------------------------------
                                   1929 ;Allocation info for local variables in function 'set_bits'
                                   1930 ;------------------------------------------------------------
                                   1931 ;bitpos                    Allocated to stack - sp -8
                                   1932 ;val                       Allocated to stack - sp -11
                                   1933 ;vallen                    Allocated to stack - sp -13
                                   1934 ;ptr                       Allocated to stack - sp -4
                                   1935 ;i                         Allocated to stack - sp -1
                                   1936 ;bits                      Allocated to registers r6 r7 
                                   1937 ;------------------------------------------------------------
                                   1938 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:161: set_bits(uint8_t *ptr, int bitpos, uint8_t *val, int vallen)
                                   1939 ;	-----------------------------------------
                                   1940 ;	 function set_bits
                                   1941 ;	-----------------------------------------
      000419                       1942 _set_bits:
      000419 C0 82            [24] 1943 	push	dpl
      00041B C0 83            [24] 1944 	push	dph
      00041D C0 F0            [24] 1945 	push	b
      00041F 05 81            [12] 1946 	inc	sp
      000421 05 81            [12] 1947 	inc	sp
                                   1948 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:168: if(vallen < 8) {
      000423 E5 81            [12] 1949 	mov	a,sp
      000425 24 F3            [12] 1950 	add	a,#0xf3
      000427 F8               [12] 1951 	mov	r0,a
      000428 C3               [12] 1952 	clr	c
      000429 E6               [12] 1953 	mov	a,@r0
      00042A 94 08            [12] 1954 	subb	a,#0x08
      00042C 08               [12] 1955 	inc	r0
      00042D E6               [12] 1956 	mov	a,@r0
      00042E 64 80            [12] 1957 	xrl	a,#0x80
      000430 94 80            [12] 1958 	subb	a,#0x80
      000432 50 4A            [24] 1959 	jnc	00111$
                                   1960 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:169: set_bits_in_byte(ptr, bitpos, *val /*>> (8 - vallen)*/, vallen);
      000434 E5 81            [12] 1961 	mov	a,sp
      000436 24 F5            [12] 1962 	add	a,#0xf5
      000438 F8               [12] 1963 	mov	r0,a
      000439 86 02            [24] 1964 	mov	ar2,@r0
      00043B 08               [12] 1965 	inc	r0
      00043C 86 03            [24] 1966 	mov	ar3,@r0
      00043E 08               [12] 1967 	inc	r0
      00043F 86 04            [24] 1968 	mov	ar4,@r0
      000441 8A 82            [24] 1969 	mov	dpl,r2
      000443 8B 83            [24] 1970 	mov	dph,r3
      000445 8C F0            [24] 1971 	mov	b,r4
      000447 12r00r00         [24] 1972 	lcall	__gptrget
      00044A FA               [12] 1973 	mov	r2,a
      00044B E5 81            [12] 1974 	mov	a,sp
      00044D 24 F3            [12] 1975 	add	a,#0xf3
      00044F F8               [12] 1976 	mov	r0,a
      000450 E6               [12] 1977 	mov	a,@r0
      000451 C0 E0            [24] 1978 	push	acc
      000453 08               [12] 1979 	inc	r0
      000454 E6               [12] 1980 	mov	a,@r0
      000455 C0 E0            [24] 1981 	push	acc
      000457 C0 02            [24] 1982 	push	ar2
      000459 E5 81            [12] 1983 	mov	a,sp
      00045B 24 F5            [12] 1984 	add	a,#0xf5
      00045D F8               [12] 1985 	mov	r0,a
      00045E E6               [12] 1986 	mov	a,@r0
      00045F C0 E0            [24] 1987 	push	acc
      000461 08               [12] 1988 	inc	r0
      000462 E6               [12] 1989 	mov	a,@r0
      000463 C0 E0            [24] 1990 	push	acc
      000465 E5 81            [12] 1991 	mov	a,sp
      000467 24 F7            [12] 1992 	add	a,#0xf7
      000469 F8               [12] 1993 	mov	r0,a
      00046A 86 82            [24] 1994 	mov	dpl,@r0
      00046C 08               [12] 1995 	inc	r0
      00046D 86 83            [24] 1996 	mov	dph,@r0
      00046F 08               [12] 1997 	inc	r0
      000470 86 F0            [24] 1998 	mov	b,@r0
      000472 12r03r76         [24] 1999 	lcall	_set_bits_in_byte
      000475 E5 81            [12] 2000 	mov	a,sp
      000477 24 FB            [12] 2001 	add	a,#0xfb
      000479 F5 81            [12] 2002 	mov	sp,a
      00047B 02r06rAB         [24] 2003 	ljmp	00119$
      00047E                       2004 00111$:
                                   2005 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:171: if(bitpos == 0) {
      00047E E5 81            [12] 2006 	mov	a,sp
      000480 24 F8            [12] 2007 	add	a,#0xf8
      000482 F8               [12] 2008 	mov	r0,a
      000483 E6               [12] 2009 	mov	a,@r0
      000484 08               [12] 2010 	inc	r0
      000485 46               [12] 2011 	orl	a,@r0
      000486 60 03            [24] 2012 	jz	00148$
      000488 02r05r86         [24] 2013 	ljmp	00127$
      00048B                       2014 00148$:
                                   2015 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:172: for(i = 0; i < vallen / 8; ++i) {
      00048B 74 08            [12] 2016 	mov	a,#0x08
      00048D C0 E0            [24] 2017 	push	acc
      00048F E4               [12] 2018 	clr	a
      000490 C0 E0            [24] 2019 	push	acc
      000492 E5 81            [12] 2020 	mov	a,sp
      000494 24 F1            [12] 2021 	add	a,#0xf1
      000496 F8               [12] 2022 	mov	r0,a
      000497 86 82            [24] 2023 	mov	dpl,@r0
      000499 08               [12] 2024 	inc	r0
      00049A 86 83            [24] 2025 	mov	dph,@r0
      00049C 12r00r00         [24] 2026 	lcall	__divsint
      00049F AB 82            [24] 2027 	mov	r3,dpl
      0004A1 AC 83            [24] 2028 	mov	r4,dph
      0004A3 15 81            [12] 2029 	dec	sp
      0004A5 15 81            [12] 2030 	dec	sp
      0004A7 A8 81            [24] 2031 	mov	r0,sp
      0004A9 18               [12] 2032 	dec	r0
      0004AA E4               [12] 2033 	clr	a
      0004AB F6               [12] 2034 	mov	@r0,a
      0004AC 08               [12] 2035 	inc	r0
      0004AD F6               [12] 2036 	mov	@r0,a
      0004AE                       2037 00114$:
      0004AE A8 81            [24] 2038 	mov	r0,sp
      0004B0 18               [12] 2039 	dec	r0
      0004B1 C3               [12] 2040 	clr	c
      0004B2 E6               [12] 2041 	mov	a,@r0
      0004B3 9B               [12] 2042 	subb	a,r3
      0004B4 08               [12] 2043 	inc	r0
      0004B5 E6               [12] 2044 	mov	a,@r0
      0004B6 64 80            [12] 2045 	xrl	a,#0x80
      0004B8 8C F0            [24] 2046 	mov	b,r4
      0004BA 63 F0 80         [24] 2047 	xrl	b,#0x80
      0004BD 95 F0            [12] 2048 	subb	a,b
      0004BF 50 52            [24] 2049 	jnc	00101$
                                   2050 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:175: ptr[i] = val[i];
      0004C1 C0 03            [24] 2051 	push	ar3
      0004C3 C0 04            [24] 2052 	push	ar4
      0004C5 E5 81            [12] 2053 	mov	a,sp
      0004C7 24 FA            [12] 2054 	add	a,#0xfa
      0004C9 F8               [12] 2055 	mov	r0,a
      0004CA E5 81            [12] 2056 	mov	a,sp
      0004CC 24 FD            [12] 2057 	add	a,#0xfd
      0004CE F9               [12] 2058 	mov	r1,a
      0004CF E7               [12] 2059 	mov	a,@r1
      0004D0 26               [12] 2060 	add	a,@r0
      0004D1 FC               [12] 2061 	mov	r4,a
      0004D2 09               [12] 2062 	inc	r1
      0004D3 E7               [12] 2063 	mov	a,@r1
      0004D4 08               [12] 2064 	inc	r0
      0004D5 36               [12] 2065 	addc	a,@r0
      0004D6 FD               [12] 2066 	mov	r5,a
      0004D7 08               [12] 2067 	inc	r0
      0004D8 86 06            [24] 2068 	mov	ar6,@r0
      0004DA E5 81            [12] 2069 	mov	a,sp
      0004DC 24 F3            [12] 2070 	add	a,#0xf3
      0004DE F8               [12] 2071 	mov	r0,a
      0004DF E5 81            [12] 2072 	mov	a,sp
      0004E1 24 FD            [12] 2073 	add	a,#0xfd
      0004E3 F9               [12] 2074 	mov	r1,a
      0004E4 E7               [12] 2075 	mov	a,@r1
      0004E5 26               [12] 2076 	add	a,@r0
      0004E6 FA               [12] 2077 	mov	r2,a
      0004E7 09               [12] 2078 	inc	r1
      0004E8 E7               [12] 2079 	mov	a,@r1
      0004E9 08               [12] 2080 	inc	r0
      0004EA 36               [12] 2081 	addc	a,@r0
      0004EB FB               [12] 2082 	mov	r3,a
      0004EC 08               [12] 2083 	inc	r0
      0004ED 86 07            [24] 2084 	mov	ar7,@r0
      0004EF 8A 82            [24] 2085 	mov	dpl,r2
      0004F1 8B 83            [24] 2086 	mov	dph,r3
      0004F3 8F F0            [24] 2087 	mov	b,r7
      0004F5 12r00r00         [24] 2088 	lcall	__gptrget
      0004F8 FA               [12] 2089 	mov	r2,a
      0004F9 8C 82            [24] 2090 	mov	dpl,r4
      0004FB 8D 83            [24] 2091 	mov	dph,r5
      0004FD 8E F0            [24] 2092 	mov	b,r6
      0004FF 12r00r00         [24] 2093 	lcall	__gptrput
                                   2094 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:172: for(i = 0; i < vallen / 8; ++i) {
      000502 E5 81            [12] 2095 	mov	a,sp
      000504 24 FD            [12] 2096 	add	a,#0xfd
      000506 F8               [12] 2097 	mov	r0,a
      000507 06               [12] 2098 	inc	@r0
      000508 B6 00 02         [24] 2099 	cjne	@r0,#0x00,00150$
      00050B 08               [12] 2100 	inc	r0
      00050C 06               [12] 2101 	inc	@r0
      00050D                       2102 00150$:
      00050D D0 04            [24] 2103 	pop	ar4
      00050F D0 03            [24] 2104 	pop	ar3
      000511 80 9B            [24] 2105 	sjmp	00114$
      000513                       2106 00101$:
                                   2107 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:177: bits = vallen & 7;
      000513 E5 81            [12] 2108 	mov	a,sp
      000515 24 F3            [12] 2109 	add	a,#0xf3
      000517 F8               [12] 2110 	mov	r0,a
      000518 74 07            [12] 2111 	mov	a,#0x07
      00051A 56               [12] 2112 	anl	a,@r0
                                   2113 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:178: if(bits) {
      00051B FE               [12] 2114 	mov	r6,a
      00051C 7F 00            [12] 2115 	mov	r7,#0x00
      00051E 4F               [12] 2116 	orl	a,r7
      00051F 70 03            [24] 2117 	jnz	00151$
      000521 02r06rAB         [24] 2118 	ljmp	00119$
      000524                       2119 00151$:
                                   2120 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:179: set_bits_in_byte(&ptr[i], 0, val[i] >> (8 - bits), bits);
      000524 E5 81            [12] 2121 	mov	a,sp
      000526 24 F5            [12] 2122 	add	a,#0xf5
      000528 F8               [12] 2123 	mov	r0,a
      000529 A9 81            [24] 2124 	mov	r1,sp
      00052B 19               [12] 2125 	dec	r1
      00052C E7               [12] 2126 	mov	a,@r1
      00052D 26               [12] 2127 	add	a,@r0
      00052E FB               [12] 2128 	mov	r3,a
      00052F 09               [12] 2129 	inc	r1
      000530 E7               [12] 2130 	mov	a,@r1
      000531 08               [12] 2131 	inc	r0
      000532 36               [12] 2132 	addc	a,@r0
      000533 FC               [12] 2133 	mov	r4,a
      000534 08               [12] 2134 	inc	r0
      000535 86 05            [24] 2135 	mov	ar5,@r0
      000537 8B 82            [24] 2136 	mov	dpl,r3
      000539 8C 83            [24] 2137 	mov	dph,r4
      00053B 8D F0            [24] 2138 	mov	b,r5
      00053D 12r00r00         [24] 2139 	lcall	__gptrget
      000540 FB               [12] 2140 	mov	r3,a
      000541 74 08            [12] 2141 	mov	a,#0x08
      000543 C3               [12] 2142 	clr	c
      000544 9E               [12] 2143 	subb	a,r6
      000545 FC               [12] 2144 	mov	r4,a
      000546 E4               [12] 2145 	clr	a
      000547 9F               [12] 2146 	subb	a,r7
      000548 FD               [12] 2147 	mov	r5,a
      000549 8C F0            [24] 2148 	mov	b,r4
      00054B 05 F0            [12] 2149 	inc	b
      00054D EB               [12] 2150 	mov	a,r3
      00054E 80 02            [24] 2151 	sjmp	00153$
      000550                       2152 00152$:
      000550 C3               [12] 2153 	clr	c
      000551 13               [12] 2154 	rrc	a
      000552                       2155 00153$:
      000552 D5 F0 FB         [24] 2156 	djnz	b,00152$
      000555 FB               [12] 2157 	mov	r3,a
      000556 E5 81            [12] 2158 	mov	a,sp
      000558 24 FC            [12] 2159 	add	a,#0xfc
      00055A F8               [12] 2160 	mov	r0,a
      00055B A9 81            [24] 2161 	mov	r1,sp
      00055D 19               [12] 2162 	dec	r1
      00055E E7               [12] 2163 	mov	a,@r1
      00055F 26               [12] 2164 	add	a,@r0
      000560 FA               [12] 2165 	mov	r2,a
      000561 09               [12] 2166 	inc	r1
      000562 E7               [12] 2167 	mov	a,@r1
      000563 08               [12] 2168 	inc	r0
      000564 36               [12] 2169 	addc	a,@r0
      000565 FC               [12] 2170 	mov	r4,a
      000566 08               [12] 2171 	inc	r0
      000567 86 05            [24] 2172 	mov	ar5,@r0
      000569 C0 06            [24] 2173 	push	ar6
      00056B C0 07            [24] 2174 	push	ar7
      00056D C0 03            [24] 2175 	push	ar3
      00056F E4               [12] 2176 	clr	a
      000570 C0 E0            [24] 2177 	push	acc
      000572 C0 E0            [24] 2178 	push	acc
      000574 8A 82            [24] 2179 	mov	dpl,r2
      000576 8C 83            [24] 2180 	mov	dph,r4
      000578 8D F0            [24] 2181 	mov	b,r5
      00057A 12r03r76         [24] 2182 	lcall	_set_bits_in_byte
      00057D E5 81            [12] 2183 	mov	a,sp
      00057F 24 FB            [12] 2184 	add	a,#0xfb
      000581 F5 81            [12] 2185 	mov	sp,a
      000583 02r06rAB         [24] 2186 	ljmp	00119$
                                   2187 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:182: for(i = 0; i < vallen / 8; ++i) {
      000586                       2188 00127$:
      000586 74 08            [12] 2189 	mov	a,#0x08
      000588 C0 E0            [24] 2190 	push	acc
      00058A E4               [12] 2191 	clr	a
      00058B C0 E0            [24] 2192 	push	acc
      00058D E5 81            [12] 2193 	mov	a,sp
      00058F 24 F1            [12] 2194 	add	a,#0xf1
      000591 F8               [12] 2195 	mov	r0,a
      000592 86 82            [24] 2196 	mov	dpl,@r0
      000594 08               [12] 2197 	inc	r0
      000595 86 83            [24] 2198 	mov	dph,@r0
      000597 12r00r00         [24] 2199 	lcall	__divsint
      00059A AC 82            [24] 2200 	mov	r4,dpl
      00059C AD 83            [24] 2201 	mov	r5,dph
      00059E 15 81            [12] 2202 	dec	sp
      0005A0 15 81            [12] 2203 	dec	sp
      0005A2 A8 81            [24] 2204 	mov	r0,sp
      0005A4 18               [12] 2205 	dec	r0
      0005A5 E4               [12] 2206 	clr	a
      0005A6 F6               [12] 2207 	mov	@r0,a
      0005A7 08               [12] 2208 	inc	r0
      0005A8 F6               [12] 2209 	mov	@r0,a
      0005A9                       2210 00117$:
      0005A9 A8 81            [24] 2211 	mov	r0,sp
      0005AB 18               [12] 2212 	dec	r0
      0005AC C3               [12] 2213 	clr	c
      0005AD E6               [12] 2214 	mov	a,@r0
      0005AE 9C               [12] 2215 	subb	a,r4
      0005AF 08               [12] 2216 	inc	r0
      0005B0 E6               [12] 2217 	mov	a,@r0
      0005B1 64 80            [12] 2218 	xrl	a,#0x80
      0005B3 8D F0            [24] 2219 	mov	b,r5
      0005B5 63 F0 80         [24] 2220 	xrl	b,#0x80
      0005B8 95 F0            [12] 2221 	subb	a,b
      0005BA 50 76            [24] 2222 	jnc	00104$
                                   2223 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:185: set_bits_in_byte(&ptr[i], bitpos, val[i], 8);
      0005BC C0 04            [24] 2224 	push	ar4
      0005BE C0 05            [24] 2225 	push	ar5
      0005C0 E5 81            [12] 2226 	mov	a,sp
      0005C2 24 F3            [12] 2227 	add	a,#0xf3
      0005C4 F8               [12] 2228 	mov	r0,a
      0005C5 E5 81            [12] 2229 	mov	a,sp
      0005C7 24 FD            [12] 2230 	add	a,#0xfd
      0005C9 F9               [12] 2231 	mov	r1,a
      0005CA E7               [12] 2232 	mov	a,@r1
      0005CB 26               [12] 2233 	add	a,@r0
      0005CC FB               [12] 2234 	mov	r3,a
      0005CD 09               [12] 2235 	inc	r1
      0005CE E7               [12] 2236 	mov	a,@r1
      0005CF 08               [12] 2237 	inc	r0
      0005D0 36               [12] 2238 	addc	a,@r0
      0005D1 FC               [12] 2239 	mov	r4,a
      0005D2 08               [12] 2240 	inc	r0
      0005D3 86 05            [24] 2241 	mov	ar5,@r0
      0005D5 8B 82            [24] 2242 	mov	dpl,r3
      0005D7 8C 83            [24] 2243 	mov	dph,r4
      0005D9 8D F0            [24] 2244 	mov	b,r5
      0005DB 12r00r00         [24] 2245 	lcall	__gptrget
      0005DE FB               [12] 2246 	mov	r3,a
      0005DF E5 81            [12] 2247 	mov	a,sp
      0005E1 24 FA            [12] 2248 	add	a,#0xfa
      0005E3 F8               [12] 2249 	mov	r0,a
      0005E4 E5 81            [12] 2250 	mov	a,sp
      0005E6 24 FD            [12] 2251 	add	a,#0xfd
      0005E8 F9               [12] 2252 	mov	r1,a
      0005E9 E7               [12] 2253 	mov	a,@r1
      0005EA 26               [12] 2254 	add	a,@r0
      0005EB FA               [12] 2255 	mov	r2,a
      0005EC 09               [12] 2256 	inc	r1
      0005ED E7               [12] 2257 	mov	a,@r1
      0005EE 08               [12] 2258 	inc	r0
      0005EF 36               [12] 2259 	addc	a,@r0
      0005F0 FC               [12] 2260 	mov	r4,a
      0005F1 08               [12] 2261 	inc	r0
      0005F2 86 05            [24] 2262 	mov	ar5,@r0
      0005F4 C0 05            [24] 2263 	push	ar5
      0005F6 C0 04            [24] 2264 	push	ar4
      0005F8 74 08            [12] 2265 	mov	a,#0x08
      0005FA C0 E0            [24] 2266 	push	acc
      0005FC E4               [12] 2267 	clr	a
      0005FD C0 E0            [24] 2268 	push	acc
      0005FF C0 03            [24] 2269 	push	ar3
      000601 E5 81            [12] 2270 	mov	a,sp
      000603 24 F1            [12] 2271 	add	a,#0xf1
      000605 F8               [12] 2272 	mov	r0,a
      000606 E6               [12] 2273 	mov	a,@r0
      000607 C0 E0            [24] 2274 	push	acc
      000609 08               [12] 2275 	inc	r0
      00060A E6               [12] 2276 	mov	a,@r0
      00060B C0 E0            [24] 2277 	push	acc
      00060D 8A 82            [24] 2278 	mov	dpl,r2
      00060F 8C 83            [24] 2279 	mov	dph,r4
      000611 8D F0            [24] 2280 	mov	b,r5
      000613 12r03r76         [24] 2281 	lcall	_set_bits_in_byte
      000616 E5 81            [12] 2282 	mov	a,sp
      000618 24 FB            [12] 2283 	add	a,#0xfb
      00061A F5 81            [12] 2284 	mov	sp,a
      00061C D0 04            [24] 2285 	pop	ar4
      00061E D0 05            [24] 2286 	pop	ar5
                                   2287 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:182: for(i = 0; i < vallen / 8; ++i) {
      000620 E5 81            [12] 2288 	mov	a,sp
      000622 24 FD            [12] 2289 	add	a,#0xfd
      000624 F8               [12] 2290 	mov	r0,a
      000625 06               [12] 2291 	inc	@r0
      000626 B6 00 02         [24] 2292 	cjne	@r0,#0x00,00155$
      000629 08               [12] 2293 	inc	r0
      00062A 06               [12] 2294 	inc	@r0
      00062B                       2295 00155$:
      00062B D0 05            [24] 2296 	pop	ar5
      00062D D0 04            [24] 2297 	pop	ar4
      00062F 02r05rA9         [24] 2298 	ljmp	00117$
      000632                       2299 00104$:
                                   2300 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:187: bits = vallen & 7;
      000632 E5 81            [12] 2301 	mov	a,sp
      000634 24 F3            [12] 2302 	add	a,#0xf3
      000636 F8               [12] 2303 	mov	r0,a
      000637 74 07            [12] 2304 	mov	a,#0x07
      000639 56               [12] 2305 	anl	a,@r0
                                   2306 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:188: if(bits) {
      00063A FE               [12] 2307 	mov	r6,a
      00063B 7F 00            [12] 2308 	mov	r7,#0x00
      00063D 4F               [12] 2309 	orl	a,r7
      00063E 60 6B            [24] 2310 	jz	00119$
                                   2311 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:189: set_bits_in_byte(&ptr[i], 0, val[i] >> (8 - bits + bitpos), bits);
      000640 E5 81            [12] 2312 	mov	a,sp
      000642 24 F5            [12] 2313 	add	a,#0xf5
      000644 F8               [12] 2314 	mov	r0,a
      000645 A9 81            [24] 2315 	mov	r1,sp
      000647 19               [12] 2316 	dec	r1
      000648 E7               [12] 2317 	mov	a,@r1
      000649 26               [12] 2318 	add	a,@r0
      00064A FB               [12] 2319 	mov	r3,a
      00064B 09               [12] 2320 	inc	r1
      00064C E7               [12] 2321 	mov	a,@r1
      00064D 08               [12] 2322 	inc	r0
      00064E 36               [12] 2323 	addc	a,@r0
      00064F FC               [12] 2324 	mov	r4,a
      000650 08               [12] 2325 	inc	r0
      000651 86 05            [24] 2326 	mov	ar5,@r0
      000653 8B 82            [24] 2327 	mov	dpl,r3
      000655 8C 83            [24] 2328 	mov	dph,r4
      000657 8D F0            [24] 2329 	mov	b,r5
      000659 12r00r00         [24] 2330 	lcall	__gptrget
      00065C FB               [12] 2331 	mov	r3,a
      00065D 74 08            [12] 2332 	mov	a,#0x08
      00065F C3               [12] 2333 	clr	c
      000660 9E               [12] 2334 	subb	a,r6
      000661 FC               [12] 2335 	mov	r4,a
      000662 E4               [12] 2336 	clr	a
      000663 9F               [12] 2337 	subb	a,r7
      000664 FD               [12] 2338 	mov	r5,a
      000665 E5 81            [12] 2339 	mov	a,sp
      000667 24 F8            [12] 2340 	add	a,#0xf8
      000669 F8               [12] 2341 	mov	r0,a
      00066A E6               [12] 2342 	mov	a,@r0
      00066B 2C               [12] 2343 	add	a,r4
      00066C FC               [12] 2344 	mov	r4,a
      00066D 08               [12] 2345 	inc	r0
      00066E E6               [12] 2346 	mov	a,@r0
      00066F 3D               [12] 2347 	addc	a,r5
      000670 FD               [12] 2348 	mov	r5,a
      000671 8C F0            [24] 2349 	mov	b,r4
      000673 05 F0            [12] 2350 	inc	b
      000675 EB               [12] 2351 	mov	a,r3
      000676 80 02            [24] 2352 	sjmp	00158$
      000678                       2353 00157$:
      000678 C3               [12] 2354 	clr	c
      000679 13               [12] 2355 	rrc	a
      00067A                       2356 00158$:
      00067A D5 F0 FB         [24] 2357 	djnz	b,00157$
      00067D FB               [12] 2358 	mov	r3,a
      00067E E5 81            [12] 2359 	mov	a,sp
      000680 24 FC            [12] 2360 	add	a,#0xfc
      000682 F8               [12] 2361 	mov	r0,a
      000683 A9 81            [24] 2362 	mov	r1,sp
      000685 19               [12] 2363 	dec	r1
      000686 E7               [12] 2364 	mov	a,@r1
      000687 26               [12] 2365 	add	a,@r0
      000688 FA               [12] 2366 	mov	r2,a
      000689 09               [12] 2367 	inc	r1
      00068A E7               [12] 2368 	mov	a,@r1
      00068B 08               [12] 2369 	inc	r0
      00068C 36               [12] 2370 	addc	a,@r0
      00068D FC               [12] 2371 	mov	r4,a
      00068E 08               [12] 2372 	inc	r0
      00068F 86 05            [24] 2373 	mov	ar5,@r0
      000691 C0 06            [24] 2374 	push	ar6
      000693 C0 07            [24] 2375 	push	ar7
      000695 C0 03            [24] 2376 	push	ar3
      000697 E4               [12] 2377 	clr	a
      000698 C0 E0            [24] 2378 	push	acc
      00069A C0 E0            [24] 2379 	push	acc
      00069C 8A 82            [24] 2380 	mov	dpl,r2
      00069E 8C 83            [24] 2381 	mov	dph,r4
      0006A0 8D F0            [24] 2382 	mov	b,r5
      0006A2 12r03r76         [24] 2383 	lcall	_set_bits_in_byte
      0006A5 E5 81            [12] 2384 	mov	a,sp
      0006A7 24 FB            [12] 2385 	add	a,#0xfb
      0006A9 F5 81            [12] 2386 	mov	sp,a
      0006AB                       2387 00119$:
      0006AB E5 81            [12] 2388 	mov	a,sp
      0006AD 24 FB            [12] 2389 	add	a,#0xFB
      0006AF F5 81            [12] 2390 	mov	sp,a
      0006B1 22               [24] 2391 	ret
                                   2392 ;------------------------------------------------------------
                                   2393 ;Allocation info for local variables in function 'pack_header'
                                   2394 ;------------------------------------------------------------
                                   2395 ;c                         Allocated to stack - sp -26
                                   2396 ;a                         Allocated to registers 
                                   2397 ;hdrbytesize               Allocated to stack - sp -3
                                   2398 ;byteptr                   Allocated to stack - sp -15
                                   2399 ;bitptr                    Allocated to stack - sp -13
                                   2400 ;len                       Allocated to stack - sp -11
                                   2401 ;hdrptr                    Allocated to stack - sp -9
                                   2402 ;hdr                       Allocated to stack - sp -6
                                   2403 ;val                       Allocated to stack - sp -1
                                   2404 ;sloc0                     Allocated to stack - sp -23
                                   2405 ;sloc1                     Allocated to stack - sp -20
                                   2406 ;sloc2                     Allocated to stack - sp -18
                                   2407 ;------------------------------------------------------------
                                   2408 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:234: pack_header(struct channel *c)
                                   2409 ;	-----------------------------------------
                                   2410 ;	 function pack_header
                                   2411 ;	-----------------------------------------
      0006B2                       2412 _pack_header:
      0006B2 C0 82            [24] 2413 	push	dpl
      0006B4 C0 83            [24] 2414 	push	dph
      0006B6 C0 F0            [24] 2415 	push	b
      0006B8 E5 81            [12] 2416 	mov	a,sp
      0006BA 24 18            [12] 2417 	add	a,#0x18
                                   2418 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:245: hdrbytesize = c->hdrsize / 8 + ((c->hdrsize & 7) == 0? 0: 1);
      0006BC F5 81            [12] 2419 	mov	sp,a
      0006BE 24 E6            [12] 2420 	add	a,#0xe6
      0006C0 F8               [12] 2421 	mov	r0,a
      0006C1 74 08            [12] 2422 	mov	a,#0x08
      0006C3 26               [12] 2423 	add	a,@r0
      0006C4 FA               [12] 2424 	mov	r2,a
      0006C5 E4               [12] 2425 	clr	a
      0006C6 08               [12] 2426 	inc	r0
      0006C7 36               [12] 2427 	addc	a,@r0
      0006C8 FB               [12] 2428 	mov	r3,a
      0006C9 08               [12] 2429 	inc	r0
      0006CA 86 04            [24] 2430 	mov	ar4,@r0
      0006CC 8A 82            [24] 2431 	mov	dpl,r2
      0006CE 8B 83            [24] 2432 	mov	dph,r3
      0006D0 8C F0            [24] 2433 	mov	b,r4
      0006D2 12r00r00         [24] 2434 	lcall	__gptrget
      0006D5 FA               [12] 2435 	mov	r2,a
      0006D6 C4               [12] 2436 	swap	a
      0006D7 23               [12] 2437 	rl	a
      0006D8 54 1F            [12] 2438 	anl	a,#0x1F
      0006DA FB               [12] 2439 	mov	r3,a
      0006DB 7C 00            [12] 2440 	mov	r4,#0x00
      0006DD 53 02 07         [24] 2441 	anl	ar2,#0x07
      0006E0 EA               [12] 2442 	mov	a,r2
      0006E1 B4 01 00         [24] 2443 	cjne	a,#0x01,00130$
      0006E4                       2444 00130$:
      0006E4 E4               [12] 2445 	clr	a
      0006E5 33               [12] 2446 	rlc	a
      0006E6 FA               [12] 2447 	mov	r2,a
      0006E7 60 04            [24] 2448 	jz	00112$
      0006E9 7A 00            [12] 2449 	mov	r2,#0x00
      0006EB 80 02            [24] 2450 	sjmp	00113$
      0006ED                       2451 00112$:
      0006ED 7A 01            [12] 2452 	mov	r2,#0x01
      0006EF                       2453 00113$:
      0006EF 7F 00            [12] 2454 	mov	r7,#0x00
      0006F1 EA               [12] 2455 	mov	a,r2
      0006F2 2B               [12] 2456 	add	a,r3
      0006F3 FB               [12] 2457 	mov	r3,a
      0006F4 EF               [12] 2458 	mov	a,r7
      0006F5 3C               [12] 2459 	addc	a,r4
      0006F6 FC               [12] 2460 	mov	r4,a
      0006F7 E5 81            [12] 2461 	mov	a,sp
      0006F9 24 FD            [12] 2462 	add	a,#0xfd
      0006FB F8               [12] 2463 	mov	r0,a
      0006FC A6 03            [24] 2464 	mov	@r0,ar3
      0006FE 08               [12] 2465 	inc	r0
      0006FF A6 04            [24] 2466 	mov	@r0,ar4
                                   2467 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:246: if(packetbuf_hdralloc(hdrbytesize + sizeof(struct bitopt_hdr)) == 0) {
      000701 E5 81            [12] 2468 	mov	a,sp
      000703 24 FD            [12] 2469 	add	a,#0xfd
      000705 F8               [12] 2470 	mov	r0,a
      000706 74 02            [12] 2471 	mov	a,#0x02
      000708 26               [12] 2472 	add	a,@r0
      000709 FE               [12] 2473 	mov	r6,a
      00070A E4               [12] 2474 	clr	a
      00070B 08               [12] 2475 	inc	r0
      00070C 36               [12] 2476 	addc	a,@r0
      00070D FF               [12] 2477 	mov	r7,a
      00070E 8E 82            [24] 2478 	mov	dpl,r6
      000710 8F 83            [24] 2479 	mov	dph,r7
      000712 12r00r00         [24] 2480 	lcall	_packetbuf_hdralloc
      000715 E5 82            [12] 2481 	mov	a,dpl
      000717 85 83 F0         [24] 2482 	mov	b,dph
      00071A 45 F0            [12] 2483 	orl	a,b
      00071C 70 06            [24] 2484 	jnz	00102$
                                   2485 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:248: return 0;
      00071E 90 00 00         [24] 2486 	mov	dptr,#0x0000
      000721 02r09r63         [24] 2487 	ljmp	00110$
      000724                       2488 00102$:
                                   2489 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:250: hdr = (struct bitopt_hdr *)packetbuf_hdrptr();
      000724 12r00r00         [24] 2490 	lcall	_packetbuf_hdrptr
      000727 AA 82            [24] 2491 	mov	r2,dpl
      000729 AB 83            [24] 2492 	mov	r3,dph
      00072B AC F0            [24] 2493 	mov	r4,b
      00072D E5 81            [12] 2494 	mov	a,sp
      00072F 24 FA            [12] 2495 	add	a,#0xfa
      000731 F8               [12] 2496 	mov	r0,a
      000732 A6 02            [24] 2497 	mov	@r0,ar2
      000734 08               [12] 2498 	inc	r0
      000735 A6 03            [24] 2499 	mov	@r0,ar3
      000737 08               [12] 2500 	inc	r0
      000738 A6 04            [24] 2501 	mov	@r0,ar4
                                   2502 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:251: hdr->channel[0] = c->channelno & 0xff;
      00073A E5 81            [12] 2503 	mov	a,sp
      00073C 24 E6            [12] 2504 	add	a,#0xe6
      00073E F8               [12] 2505 	mov	r0,a
      00073F 74 03            [12] 2506 	mov	a,#0x03
      000741 26               [12] 2507 	add	a,@r0
      000742 FD               [12] 2508 	mov	r5,a
      000743 E4               [12] 2509 	clr	a
      000744 08               [12] 2510 	inc	r0
      000745 36               [12] 2511 	addc	a,@r0
      000746 FE               [12] 2512 	mov	r6,a
      000747 08               [12] 2513 	inc	r0
      000748 86 07            [24] 2514 	mov	ar7,@r0
      00074A 8D 82            [24] 2515 	mov	dpl,r5
      00074C 8E 83            [24] 2516 	mov	dph,r6
      00074E 8F F0            [24] 2517 	mov	b,r7
      000750 12r00r00         [24] 2518 	lcall	__gptrget
      000753 FB               [12] 2519 	mov	r3,a
      000754 A3               [24] 2520 	inc	dptr
      000755 12r00r00         [24] 2521 	lcall	__gptrget
      000758 E5 81            [12] 2522 	mov	a,sp
      00075A 24 FA            [12] 2523 	add	a,#0xfa
      00075C F8               [12] 2524 	mov	r0,a
      00075D 86 82            [24] 2525 	mov	dpl,@r0
      00075F 08               [12] 2526 	inc	r0
      000760 86 83            [24] 2527 	mov	dph,@r0
      000762 08               [12] 2528 	inc	r0
      000763 86 F0            [24] 2529 	mov	b,@r0
      000765 EB               [12] 2530 	mov	a,r3
      000766 12r00r00         [24] 2531 	lcall	__gptrput
                                   2532 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:252: hdr->channel[1] = (c->channelno >> 8) & 0xff;
      000769 E5 81            [12] 2533 	mov	a,sp
      00076B 24 FA            [12] 2534 	add	a,#0xfa
      00076D F8               [12] 2535 	mov	r0,a
      00076E 74 01            [12] 2536 	mov	a,#0x01
      000770 26               [12] 2537 	add	a,@r0
      000771 FA               [12] 2538 	mov	r2,a
      000772 E4               [12] 2539 	clr	a
      000773 08               [12] 2540 	inc	r0
      000774 36               [12] 2541 	addc	a,@r0
      000775 FB               [12] 2542 	mov	r3,a
      000776 08               [12] 2543 	inc	r0
      000777 86 04            [24] 2544 	mov	ar4,@r0
      000779 8D 82            [24] 2545 	mov	dpl,r5
      00077B 8E 83            [24] 2546 	mov	dph,r6
      00077D 8F F0            [24] 2547 	mov	b,r7
      00077F 12r00r00         [24] 2548 	lcall	__gptrget
      000782 A3               [24] 2549 	inc	dptr
      000783 12r00r00         [24] 2550 	lcall	__gptrget
      000786 8A 82            [24] 2551 	mov	dpl,r2
      000788 8B 83            [24] 2552 	mov	dph,r3
      00078A 8C F0            [24] 2553 	mov	b,r4
      00078C 12r00r00         [24] 2554 	lcall	__gptrput
                                   2555 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:254: hdrptr = ((uint8_t *)packetbuf_hdrptr()) + sizeof(struct bitopt_hdr);
      00078F 12r00r00         [24] 2556 	lcall	_packetbuf_hdrptr
      000792 AD 82            [24] 2557 	mov	r5,dpl
      000794 AE 83            [24] 2558 	mov	r6,dph
      000796 AF F0            [24] 2559 	mov	r7,b
      000798 E5 81            [12] 2560 	mov	a,sp
      00079A 24 F7            [12] 2561 	add	a,#0xf7
      00079C F8               [12] 2562 	mov	r0,a
      00079D 74 02            [12] 2563 	mov	a,#0x02
      00079F 2D               [12] 2564 	add	a,r5
      0007A0 F6               [12] 2565 	mov	@r0,a
      0007A1 E4               [12] 2566 	clr	a
      0007A2 3E               [12] 2567 	addc	a,r6
      0007A3 08               [12] 2568 	inc	r0
      0007A4 F6               [12] 2569 	mov	@r0,a
      0007A5 08               [12] 2570 	inc	r0
      0007A6 A6 07            [24] 2571 	mov	@r0,ar7
                                   2572 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:255: memset(hdrptr, 0, hdrbytesize);
      0007A8 E5 81            [12] 2573 	mov	a,sp
      0007AA 24 F7            [12] 2574 	add	a,#0xf7
      0007AC F8               [12] 2575 	mov	r0,a
      0007AD 86 02            [24] 2576 	mov	ar2,@r0
      0007AF 08               [12] 2577 	inc	r0
      0007B0 86 03            [24] 2578 	mov	ar3,@r0
      0007B2 08               [12] 2579 	inc	r0
      0007B3 86 04            [24] 2580 	mov	ar4,@r0
      0007B5 E5 81            [12] 2581 	mov	a,sp
      0007B7 24 FD            [12] 2582 	add	a,#0xfd
      0007B9 F8               [12] 2583 	mov	r0,a
      0007BA E6               [12] 2584 	mov	a,@r0
      0007BB C0 E0            [24] 2585 	push	acc
      0007BD 08               [12] 2586 	inc	r0
      0007BE E6               [12] 2587 	mov	a,@r0
      0007BF C0 E0            [24] 2588 	push	acc
      0007C1 E4               [12] 2589 	clr	a
      0007C2 C0 E0            [24] 2590 	push	acc
      0007C4 8A 82            [24] 2591 	mov	dpl,r2
      0007C6 8B 83            [24] 2592 	mov	dph,r3
      0007C8 8C F0            [24] 2593 	mov	b,r4
      0007CA 12r00r00         [24] 2594 	lcall	_memset
      0007CD 15 81            [12] 2595 	dec	sp
      0007CF 15 81            [12] 2596 	dec	sp
      0007D1 15 81            [12] 2597 	dec	sp
                                   2598 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:257: byteptr = bitptr = 0;
      0007D3 E5 81            [12] 2599 	mov	a,sp
      0007D5 24 F3            [12] 2600 	add	a,#0xf3
      0007D7 F8               [12] 2601 	mov	r0,a
      0007D8 E4               [12] 2602 	clr	a
      0007D9 F6               [12] 2603 	mov	@r0,a
      0007DA 08               [12] 2604 	inc	r0
      0007DB F6               [12] 2605 	mov	@r0,a
                                   2606 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:259: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      0007DC E5 81            [12] 2607 	mov	a,sp
      0007DE 24 E6            [12] 2608 	add	a,#0xe6
      0007E0 F8               [12] 2609 	mov	r0,a
      0007E1 74 05            [12] 2610 	mov	a,#0x05
      0007E3 26               [12] 2611 	add	a,@r0
      0007E4 FA               [12] 2612 	mov	r2,a
      0007E5 E4               [12] 2613 	clr	a
      0007E6 08               [12] 2614 	inc	r0
      0007E7 36               [12] 2615 	addc	a,@r0
      0007E8 FE               [12] 2616 	mov	r6,a
      0007E9 08               [12] 2617 	inc	r0
      0007EA 86 07            [24] 2618 	mov	ar7,@r0
      0007EC 8A 82            [24] 2619 	mov	dpl,r2
      0007EE 8E 83            [24] 2620 	mov	dph,r6
      0007F0 8F F0            [24] 2621 	mov	b,r7
      0007F2 E5 81            [12] 2622 	mov	a,sp
      0007F4 24 E9            [12] 2623 	add	a,#0xe9
      0007F6 F8               [12] 2624 	mov	r0,a
      0007F7 12r00r00         [24] 2625 	lcall	__gptrget
      0007FA F6               [12] 2626 	mov	@r0,a
      0007FB A3               [24] 2627 	inc	dptr
      0007FC 12r00r00         [24] 2628 	lcall	__gptrget
      0007FF 08               [12] 2629 	inc	r0
      000800 F6               [12] 2630 	mov	@r0,a
      000801 A3               [24] 2631 	inc	dptr
      000802 12r00r00         [24] 2632 	lcall	__gptrget
      000805 08               [12] 2633 	inc	r0
      000806 F6               [12] 2634 	mov	@r0,a
      000807                       2635 00108$:
      000807 E5 81            [12] 2636 	mov	a,sp
      000809 24 E9            [12] 2637 	add	a,#0xe9
      00080B F8               [12] 2638 	mov	r0,a
      00080C 86 82            [24] 2639 	mov	dpl,@r0
      00080E 08               [12] 2640 	inc	r0
      00080F 86 83            [24] 2641 	mov	dph,@r0
      000811 08               [12] 2642 	inc	r0
      000812 86 F0            [24] 2643 	mov	b,@r0
      000814 12r00r00         [24] 2644 	lcall	__gptrget
      000817 FA               [12] 2645 	mov	r2,a
      000818 BA 00 03         [24] 2646 	cjne	r2,#0x00,00133$
      00081B 02r09r60         [24] 2647 	ljmp	00106$
      00081E                       2648 00133$:
                                   2649 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:272: len = a->len;
      00081E E5 81            [12] 2650 	mov	a,sp
      000820 24 E9            [12] 2651 	add	a,#0xe9
      000822 F8               [12] 2652 	mov	r0,a
      000823 74 01            [12] 2653 	mov	a,#0x01
      000825 26               [12] 2654 	add	a,@r0
      000826 FB               [12] 2655 	mov	r3,a
      000827 E4               [12] 2656 	clr	a
      000828 08               [12] 2657 	inc	r0
      000829 36               [12] 2658 	addc	a,@r0
      00082A FC               [12] 2659 	mov	r4,a
      00082B 08               [12] 2660 	inc	r0
      00082C 86 07            [24] 2661 	mov	ar7,@r0
      00082E 8B 82            [24] 2662 	mov	dpl,r3
      000830 8C 83            [24] 2663 	mov	dph,r4
      000832 8F F0            [24] 2664 	mov	b,r7
      000834 12r00r00         [24] 2665 	lcall	__gptrget
      000837 FB               [12] 2666 	mov	r3,a
      000838 E5 81            [12] 2667 	mov	a,sp
      00083A 24 F5            [12] 2668 	add	a,#0xf5
      00083C F8               [12] 2669 	mov	r0,a
      00083D A6 03            [24] 2670 	mov	@r0,ar3
      00083F 08               [12] 2671 	inc	r0
      000840 76 00            [12] 2672 	mov	@r0,#0x00
                                   2673 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:273: byteptr = bitptr / 8;
      000842 C0 02            [24] 2674 	push	ar2
      000844 74 08            [12] 2675 	mov	a,#0x08
      000846 C0 E0            [24] 2676 	push	acc
      000848 E4               [12] 2677 	clr	a
      000849 C0 E0            [24] 2678 	push	acc
      00084B E5 81            [12] 2679 	mov	a,sp
      00084D 24 F0            [12] 2680 	add	a,#0xf0
      00084F F8               [12] 2681 	mov	r0,a
      000850 86 82            [24] 2682 	mov	dpl,@r0
      000852 08               [12] 2683 	inc	r0
      000853 86 83            [24] 2684 	mov	dph,@r0
      000855 12r00r00         [24] 2685 	lcall	__divsint
      000858 AD 82            [24] 2686 	mov	r5,dpl
      00085A AE 83            [24] 2687 	mov	r6,dph
      00085C 15 81            [12] 2688 	dec	sp
      00085E 15 81            [12] 2689 	dec	sp
      000860 D0 02            [24] 2690 	pop	ar2
      000862 E5 81            [12] 2691 	mov	a,sp
      000864 24 F1            [12] 2692 	add	a,#0xf1
      000866 F8               [12] 2693 	mov	r0,a
      000867 A6 05            [24] 2694 	mov	@r0,ar5
      000869 08               [12] 2695 	inc	r0
      00086A A6 06            [24] 2696 	mov	@r0,ar6
                                   2697 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:274: if(PACKETBUF_IS_ADDR(a->type)) {
      00086C BA 18 00         [24] 2698 	cjne	r2,#0x18,00134$
      00086F                       2699 00134$:
      00086F 40 62            [24] 2700 	jc	00104$
                                   2701 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:276: (uint8_t *)packetbuf_addr(a->type), len);
      000871 8A 82            [24] 2702 	mov	dpl,r2
      000873 12r00r00         [24] 2703 	lcall	_packetbuf_addr
      000876 AC 82            [24] 2704 	mov	r4,dpl
      000878 AD 83            [24] 2705 	mov	r5,dph
      00087A AE F0            [24] 2706 	mov	r6,b
      00087C 8E 02            [24] 2707 	mov	ar2,r6
                                   2708 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:275: set_bits(&hdrptr[byteptr], bitptr & 7,
      00087E E5 81            [12] 2709 	mov	a,sp
      000880 24 F3            [12] 2710 	add	a,#0xf3
      000882 F8               [12] 2711 	mov	r0,a
      000883 E5 81            [12] 2712 	mov	a,sp
      000885 24 EC            [12] 2713 	add	a,#0xec
      000887 F9               [12] 2714 	mov	r1,a
      000888 74 07            [12] 2715 	mov	a,#0x07
      00088A 56               [12] 2716 	anl	a,@r0
      00088B F7               [12] 2717 	mov	@r1,a
      00088C 09               [12] 2718 	inc	r1
      00088D 77 00            [12] 2719 	mov	@r1,#0x00
      00088F E5 81            [12] 2720 	mov	a,sp
      000891 24 F7            [12] 2721 	add	a,#0xf7
      000893 F8               [12] 2722 	mov	r0,a
      000894 E5 81            [12] 2723 	mov	a,sp
      000896 24 F1            [12] 2724 	add	a,#0xf1
      000898 F9               [12] 2725 	mov	r1,a
      000899 E7               [12] 2726 	mov	a,@r1
      00089A 26               [12] 2727 	add	a,@r0
      00089B FB               [12] 2728 	mov	r3,a
      00089C 09               [12] 2729 	inc	r1
      00089D E7               [12] 2730 	mov	a,@r1
      00089E 08               [12] 2731 	inc	r0
      00089F 36               [12] 2732 	addc	a,@r0
      0008A0 FE               [12] 2733 	mov	r6,a
      0008A1 08               [12] 2734 	inc	r0
      0008A2 86 07            [24] 2735 	mov	ar7,@r0
      0008A4 E5 81            [12] 2736 	mov	a,sp
      0008A6 24 F5            [12] 2737 	add	a,#0xf5
      0008A8 F8               [12] 2738 	mov	r0,a
      0008A9 E6               [12] 2739 	mov	a,@r0
      0008AA C0 E0            [24] 2740 	push	acc
      0008AC 08               [12] 2741 	inc	r0
      0008AD E6               [12] 2742 	mov	a,@r0
      0008AE C0 E0            [24] 2743 	push	acc
      0008B0 C0 04            [24] 2744 	push	ar4
      0008B2 C0 05            [24] 2745 	push	ar5
      0008B4 C0 02            [24] 2746 	push	ar2
      0008B6 E5 81            [12] 2747 	mov	a,sp
      0008B8 24 E7            [12] 2748 	add	a,#0xe7
      0008BA F8               [12] 2749 	mov	r0,a
      0008BB E6               [12] 2750 	mov	a,@r0
      0008BC C0 E0            [24] 2751 	push	acc
      0008BE 08               [12] 2752 	inc	r0
      0008BF E6               [12] 2753 	mov	a,@r0
      0008C0 C0 E0            [24] 2754 	push	acc
      0008C2 8B 82            [24] 2755 	mov	dpl,r3
      0008C4 8E 83            [24] 2756 	mov	dph,r6
      0008C6 8F F0            [24] 2757 	mov	b,r7
      0008C8 12r04r19         [24] 2758 	lcall	_set_bits
      0008CB E5 81            [12] 2759 	mov	a,sp
      0008CD 24 F9            [12] 2760 	add	a,#0xf9
      0008CF F5 81            [12] 2761 	mov	sp,a
      0008D1 80 6B            [24] 2762 	sjmp	00105$
      0008D3                       2763 00104$:
                                   2764 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:283: val = packetbuf_attr(a->type);
      0008D3 8A 82            [24] 2765 	mov	dpl,r2
      0008D5 12r00r00         [24] 2766 	lcall	_packetbuf_attr
      0008D8 AE 82            [24] 2767 	mov	r6,dpl
      0008DA AF 83            [24] 2768 	mov	r7,dph
      0008DC A8 81            [24] 2769 	mov	r0,sp
      0008DE 18               [12] 2770 	dec	r0
      0008DF A6 06            [24] 2771 	mov	@r0,ar6
      0008E1 08               [12] 2772 	inc	r0
      0008E2 A6 07            [24] 2773 	mov	@r0,ar7
                                   2774 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:285: (uint8_t *)&val, len);
      0008E4 AF 81            [24] 2775 	mov	r7,sp
      0008E6 1F               [12] 2776 	dec	r7
      0008E7 7E 00            [12] 2777 	mov	r6,#0x00
      0008E9 7D 40            [12] 2778 	mov	r5,#0x40
                                   2779 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:284: set_bits(&hdrptr[byteptr], bitptr & 7,
      0008EB E5 81            [12] 2780 	mov	a,sp
      0008ED 24 F3            [12] 2781 	add	a,#0xf3
      0008EF F8               [12] 2782 	mov	r0,a
      0008F0 E5 81            [12] 2783 	mov	a,sp
      0008F2 24 EE            [12] 2784 	add	a,#0xee
      0008F4 F9               [12] 2785 	mov	r1,a
      0008F5 74 07            [12] 2786 	mov	a,#0x07
      0008F7 56               [12] 2787 	anl	a,@r0
      0008F8 F7               [12] 2788 	mov	@r1,a
      0008F9 09               [12] 2789 	inc	r1
      0008FA 77 00            [12] 2790 	mov	@r1,#0x00
      0008FC E5 81            [12] 2791 	mov	a,sp
      0008FE 24 F7            [12] 2792 	add	a,#0xf7
      000900 F8               [12] 2793 	mov	r0,a
      000901 E5 81            [12] 2794 	mov	a,sp
      000903 24 F1            [12] 2795 	add	a,#0xf1
      000905 F9               [12] 2796 	mov	r1,a
      000906 E7               [12] 2797 	mov	a,@r1
      000907 26               [12] 2798 	add	a,@r0
      000908 FA               [12] 2799 	mov	r2,a
      000909 09               [12] 2800 	inc	r1
      00090A E7               [12] 2801 	mov	a,@r1
      00090B 08               [12] 2802 	inc	r0
      00090C 36               [12] 2803 	addc	a,@r0
      00090D FB               [12] 2804 	mov	r3,a
      00090E 08               [12] 2805 	inc	r0
      00090F 86 04            [24] 2806 	mov	ar4,@r0
      000911 E5 81            [12] 2807 	mov	a,sp
      000913 24 F5            [12] 2808 	add	a,#0xf5
      000915 F8               [12] 2809 	mov	r0,a
      000916 E6               [12] 2810 	mov	a,@r0
      000917 C0 E0            [24] 2811 	push	acc
      000919 08               [12] 2812 	inc	r0
      00091A E6               [12] 2813 	mov	a,@r0
      00091B C0 E0            [24] 2814 	push	acc
      00091D C0 07            [24] 2815 	push	ar7
      00091F C0 06            [24] 2816 	push	ar6
      000921 C0 05            [24] 2817 	push	ar5
      000923 E5 81            [12] 2818 	mov	a,sp
      000925 24 E9            [12] 2819 	add	a,#0xe9
      000927 F8               [12] 2820 	mov	r0,a
      000928 E6               [12] 2821 	mov	a,@r0
      000929 C0 E0            [24] 2822 	push	acc
      00092B 08               [12] 2823 	inc	r0
      00092C E6               [12] 2824 	mov	a,@r0
      00092D C0 E0            [24] 2825 	push	acc
      00092F 8A 82            [24] 2826 	mov	dpl,r2
      000931 8B 83            [24] 2827 	mov	dph,r3
      000933 8C F0            [24] 2828 	mov	b,r4
      000935 12r04r19         [24] 2829 	lcall	_set_bits
      000938 E5 81            [12] 2830 	mov	a,sp
      00093A 24 F9            [12] 2831 	add	a,#0xf9
      00093C F5 81            [12] 2832 	mov	sp,a
      00093E                       2833 00105$:
                                   2834 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:291: bitptr += len;
      00093E E5 81            [12] 2835 	mov	a,sp
      000940 24 F3            [12] 2836 	add	a,#0xf3
      000942 F8               [12] 2837 	mov	r0,a
      000943 E5 81            [12] 2838 	mov	a,sp
      000945 24 F5            [12] 2839 	add	a,#0xf5
      000947 F9               [12] 2840 	mov	r1,a
      000948 E7               [12] 2841 	mov	a,@r1
      000949 26               [12] 2842 	add	a,@r0
      00094A F6               [12] 2843 	mov	@r0,a
      00094B 09               [12] 2844 	inc	r1
      00094C E7               [12] 2845 	mov	a,@r1
      00094D 08               [12] 2846 	inc	r0
      00094E 36               [12] 2847 	addc	a,@r0
      00094F F6               [12] 2848 	mov	@r0,a
                                   2849 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:259: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000950 E5 81            [12] 2850 	mov	a,sp
      000952 24 E9            [12] 2851 	add	a,#0xe9
      000954 F8               [12] 2852 	mov	r0,a
      000955 74 02            [12] 2853 	mov	a,#0x02
      000957 26               [12] 2854 	add	a,@r0
      000958 F6               [12] 2855 	mov	@r0,a
      000959 E4               [12] 2856 	clr	a
      00095A 08               [12] 2857 	inc	r0
      00095B 36               [12] 2858 	addc	a,@r0
      00095C F6               [12] 2859 	mov	@r0,a
      00095D 02r08r07         [24] 2860 	ljmp	00108$
      000960                       2861 00106$:
                                   2862 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:295: return 1; /* Send out packet */
      000960 90 00 01         [24] 2863 	mov	dptr,#0x0001
      000963                       2864 00110$:
      000963 E5 81            [12] 2865 	mov	a,sp
      000965 24 E5            [12] 2866 	add	a,#0xE5
      000967 F5 81            [12] 2867 	mov	sp,a
      000969 22               [24] 2868 	ret
                                   2869 ;------------------------------------------------------------
                                   2870 ;Allocation info for local variables in function 'unpack_header'
                                   2871 ;------------------------------------------------------------
                                   2872 ;a                         Allocated to registers 
                                   2873 ;byteptr                   Allocated to stack - sp -11
                                   2874 ;bitptr                    Allocated to registers r6 r7 
                                   2875 ;len                       Allocated to stack - sp -9
                                   2876 ;hdrbytesize               Allocated to registers r6 r7 
                                   2877 ;hdrptr                    Allocated to stack - sp -7
                                   2878 ;hdr                       Allocated to registers r5 r6 r7 
                                   2879 ;c                         Allocated to stack - sp -4
                                   2880 ;addr                      Allocated to stack - sp -1
                                   2881 ;val                       Allocated to stack - sp -1
                                   2882 ;sloc0                     Allocated to stack - sp -18
                                   2883 ;sloc1                     Allocated to stack - sp -15
                                   2884 ;sloc2                     Allocated to stack - sp -14
                                   2885 ;sloc3                     Allocated to stack - sp -13
                                   2886 ;------------------------------------------------------------
                                   2887 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:299: unpack_header(void)
                                   2888 ;	-----------------------------------------
                                   2889 ;	 function unpack_header
                                   2890 ;	-----------------------------------------
      00096A                       2891 _unpack_header:
      00096A E5 81            [12] 2892 	mov	a,sp
      00096C 24 13            [12] 2893 	add	a,#0x13
      00096E F5 81            [12] 2894 	mov	sp,a
                                   2895 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:311: hdr = (struct bitopt_hdr *)packetbuf_dataptr();
      000970 12r00r00         [24] 2896 	lcall	_packetbuf_dataptr
      000973 AD 82            [24] 2897 	mov	r5,dpl
      000975 AE 83            [24] 2898 	mov	r6,dph
      000977 AF F0            [24] 2899 	mov	r7,b
                                   2900 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:312: if(packetbuf_hdrreduce(sizeof(struct bitopt_hdr)) == 0) {
      000979 90 00 02         [24] 2901 	mov	dptr,#0x0002
      00097C C0 07            [24] 2902 	push	ar7
      00097E C0 06            [24] 2903 	push	ar6
      000980 C0 05            [24] 2904 	push	ar5
      000982 12r00r00         [24] 2905 	lcall	_packetbuf_hdrreduce
      000985 E5 82            [12] 2906 	mov	a,dpl
      000987 85 83 F0         [24] 2907 	mov	b,dph
      00098A D0 05            [24] 2908 	pop	ar5
      00098C D0 06            [24] 2909 	pop	ar6
      00098E D0 07            [24] 2910 	pop	ar7
      000990 45 F0            [12] 2911 	orl	a,b
                                   2912 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:314: return NULL;
      000992 70 08            [24] 2913 	jnz	00102$
      000994 90 00 00         [24] 2914 	mov	dptr,#0x0000
      000997 F5 F0            [12] 2915 	mov	b,a
      000999 02r0Cr71         [24] 2916 	ljmp	00114$
      00099C                       2917 00102$:
                                   2918 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:316: c = channel_lookup((hdr->channel[1] << 8) + hdr->channel[0]);
      00099C 74 01            [12] 2919 	mov	a,#0x01
      00099E 2D               [12] 2920 	add	a,r5
      00099F FA               [12] 2921 	mov	r2,a
      0009A0 E4               [12] 2922 	clr	a
      0009A1 3E               [12] 2923 	addc	a,r6
      0009A2 FB               [12] 2924 	mov	r3,a
      0009A3 8F 04            [24] 2925 	mov	ar4,r7
      0009A5 8A 82            [24] 2926 	mov	dpl,r2
      0009A7 8B 83            [24] 2927 	mov	dph,r3
      0009A9 8C F0            [24] 2928 	mov	b,r4
      0009AB 12r00r00         [24] 2929 	lcall	__gptrget
      0009AE FC               [12] 2930 	mov	r4,a
      0009AF 7A 00            [12] 2931 	mov	r2,#0x00
      0009B1 8D 82            [24] 2932 	mov	dpl,r5
      0009B3 8E 83            [24] 2933 	mov	dph,r6
      0009B5 8F F0            [24] 2934 	mov	b,r7
      0009B7 12r00r00         [24] 2935 	lcall	__gptrget
      0009BA 7F 00            [12] 2936 	mov	r7,#0x00
      0009BC 2A               [12] 2937 	add	a,r2
      0009BD FA               [12] 2938 	mov	r2,a
      0009BE EF               [12] 2939 	mov	a,r7
      0009BF 3C               [12] 2940 	addc	a,r4
      0009C0 FC               [12] 2941 	mov	r4,a
      0009C1 8A 82            [24] 2942 	mov	dpl,r2
      0009C3 8C 83            [24] 2943 	mov	dph,r4
      0009C5 12r00r00         [24] 2944 	lcall	_channel_lookup
      0009C8 AD 82            [24] 2945 	mov	r5,dpl
      0009CA AE 83            [24] 2946 	mov	r6,dph
      0009CC AF F0            [24] 2947 	mov	r7,b
      0009CE E5 81            [12] 2948 	mov	a,sp
      0009D0 24 FC            [12] 2949 	add	a,#0xfc
      0009D2 F8               [12] 2950 	mov	r0,a
      0009D3 A6 05            [24] 2951 	mov	@r0,ar5
      0009D5 08               [12] 2952 	inc	r0
      0009D6 A6 06            [24] 2953 	mov	@r0,ar6
      0009D8 08               [12] 2954 	inc	r0
      0009D9 A6 07            [24] 2955 	mov	@r0,ar7
                                   2956 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:317: if(c == NULL) {
      0009DB E5 81            [12] 2957 	mov	a,sp
      0009DD 24 FC            [12] 2958 	add	a,#0xfc
      0009DF F8               [12] 2959 	mov	r0,a
      0009E0 E6               [12] 2960 	mov	a,@r0
      0009E1 08               [12] 2961 	inc	r0
      0009E2 46               [12] 2962 	orl	a,@r0
                                   2963 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:320: return NULL;
      0009E3 70 08            [24] 2964 	jnz	00104$
      0009E5 90 00 00         [24] 2965 	mov	dptr,#0x0000
      0009E8 F5 F0            [12] 2966 	mov	b,a
      0009EA 02r0Cr71         [24] 2967 	ljmp	00114$
      0009ED                       2968 00104$:
                                   2969 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:323: hdrptr = packetbuf_dataptr();
      0009ED 12r00r00         [24] 2970 	lcall	_packetbuf_dataptr
      0009F0 AA 82            [24] 2971 	mov	r2,dpl
      0009F2 AB 83            [24] 2972 	mov	r3,dph
      0009F4 AC F0            [24] 2973 	mov	r4,b
      0009F6 E5 81            [12] 2974 	mov	a,sp
      0009F8 24 F9            [12] 2975 	add	a,#0xf9
      0009FA F8               [12] 2976 	mov	r0,a
      0009FB A6 02            [24] 2977 	mov	@r0,ar2
      0009FD 08               [12] 2978 	inc	r0
      0009FE A6 03            [24] 2979 	mov	@r0,ar3
      000A00 08               [12] 2980 	inc	r0
      000A01 A6 04            [24] 2981 	mov	@r0,ar4
                                   2982 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:324: hdrbytesize = c->hdrsize / 8 + ((c->hdrsize & 7) == 0? 0: 1);
      000A03 E5 81            [12] 2983 	mov	a,sp
      000A05 24 FC            [12] 2984 	add	a,#0xfc
      000A07 F8               [12] 2985 	mov	r0,a
      000A08 74 08            [12] 2986 	mov	a,#0x08
      000A0A 26               [12] 2987 	add	a,@r0
      000A0B FD               [12] 2988 	mov	r5,a
      000A0C E4               [12] 2989 	clr	a
      000A0D 08               [12] 2990 	inc	r0
      000A0E 36               [12] 2991 	addc	a,@r0
      000A0F FE               [12] 2992 	mov	r6,a
      000A10 08               [12] 2993 	inc	r0
      000A11 86 07            [24] 2994 	mov	ar7,@r0
      000A13 8D 82            [24] 2995 	mov	dpl,r5
      000A15 8E 83            [24] 2996 	mov	dph,r6
      000A17 8F F0            [24] 2997 	mov	b,r7
      000A19 12r00r00         [24] 2998 	lcall	__gptrget
      000A1C FD               [12] 2999 	mov	r5,a
      000A1D C4               [12] 3000 	swap	a
      000A1E 23               [12] 3001 	rl	a
      000A1F 54 1F            [12] 3002 	anl	a,#0x1F
      000A21 FE               [12] 3003 	mov	r6,a
      000A22 7F 00            [12] 3004 	mov	r7,#0x00
      000A24 53 05 07         [24] 3005 	anl	ar5,#0x07
      000A27 ED               [12] 3006 	mov	a,r5
      000A28 B4 01 00         [24] 3007 	cjne	a,#0x01,00142$
      000A2B                       3008 00142$:
      000A2B E4               [12] 3009 	clr	a
      000A2C 33               [12] 3010 	rlc	a
      000A2D FD               [12] 3011 	mov	r5,a
      000A2E 60 04            [24] 3012 	jz	00116$
      000A30 7D 00            [12] 3013 	mov	r5,#0x00
      000A32 80 02            [24] 3014 	sjmp	00117$
      000A34                       3015 00116$:
      000A34 7D 01            [12] 3016 	mov	r5,#0x01
      000A36                       3017 00117$:
      000A36 8D 04            [24] 3018 	mov	ar4,r5
      000A38 7D 00            [12] 3019 	mov	r5,#0x00
      000A3A EC               [12] 3020 	mov	a,r4
      000A3B 2E               [12] 3021 	add	a,r6
      000A3C FE               [12] 3022 	mov	r6,a
      000A3D ED               [12] 3023 	mov	a,r5
      000A3E 3F               [12] 3024 	addc	a,r7
      000A3F FF               [12] 3025 	mov	r7,a
                                   3026 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:325: if(packetbuf_hdrreduce(hdrbytesize) == 0) {
      000A40 8E 82            [24] 3027 	mov	dpl,r6
      000A42 8F 83            [24] 3028 	mov	dph,r7
      000A44 12r00r00         [24] 3029 	lcall	_packetbuf_hdrreduce
      000A47 E5 82            [12] 3030 	mov	a,dpl
      000A49 85 83 F0         [24] 3031 	mov	b,dph
      000A4C 45 F0            [12] 3032 	orl	a,b
                                   3033 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:327: return NULL;
      000A4E 70 08            [24] 3034 	jnz	00106$
      000A50 90 00 00         [24] 3035 	mov	dptr,#0x0000
      000A53 F5 F0            [12] 3036 	mov	b,a
      000A55 02r0Cr71         [24] 3037 	ljmp	00114$
      000A58                       3038 00106$:
                                   3039 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:329: byteptr = bitptr = 0;
                                   3040 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:330: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000A58 E4               [12] 3041 	clr	a
      000A59 FE               [12] 3042 	mov	r6,a
      000A5A FF               [12] 3043 	mov	r7,a
      000A5B E5 81            [12] 3044 	mov	a,sp
      000A5D 24 FC            [12] 3045 	add	a,#0xfc
      000A5F F8               [12] 3046 	mov	r0,a
      000A60 74 05            [12] 3047 	mov	a,#0x05
      000A62 26               [12] 3048 	add	a,@r0
      000A63 FB               [12] 3049 	mov	r3,a
      000A64 E4               [12] 3050 	clr	a
      000A65 08               [12] 3051 	inc	r0
      000A66 36               [12] 3052 	addc	a,@r0
      000A67 FC               [12] 3053 	mov	r4,a
      000A68 08               [12] 3054 	inc	r0
      000A69 86 05            [24] 3055 	mov	ar5,@r0
      000A6B 8B 82            [24] 3056 	mov	dpl,r3
      000A6D 8C 83            [24] 3057 	mov	dph,r4
      000A6F 8D F0            [24] 3058 	mov	b,r5
      000A71 E5 81            [12] 3059 	mov	a,sp
      000A73 24 EE            [12] 3060 	add	a,#0xee
      000A75 F8               [12] 3061 	mov	r0,a
      000A76 12r00r00         [24] 3062 	lcall	__gptrget
      000A79 F6               [12] 3063 	mov	@r0,a
      000A7A A3               [24] 3064 	inc	dptr
      000A7B 12r00r00         [24] 3065 	lcall	__gptrget
      000A7E 08               [12] 3066 	inc	r0
      000A7F F6               [12] 3067 	mov	@r0,a
      000A80 A3               [24] 3068 	inc	dptr
      000A81 12r00r00         [24] 3069 	lcall	__gptrget
      000A84 08               [12] 3070 	inc	r0
      000A85 F6               [12] 3071 	mov	@r0,a
      000A86 E5 81            [12] 3072 	mov	a,sp
      000A88 24 F1            [12] 3073 	add	a,#0xf1
      000A8A F8               [12] 3074 	mov	r0,a
      000A8B A6 81            [24] 3075 	mov	@r0,sp
      000A8D 16               [12] 3076 	dec	@r0
      000A8E E5 81            [12] 3077 	mov	a,sp
      000A90 24 F1            [12] 3078 	add	a,#0xf1
      000A92 F8               [12] 3079 	mov	r0,a
      000A93 E5 81            [12] 3080 	mov	a,sp
      000A95 24 F2            [12] 3081 	add	a,#0xf2
      000A97 F9               [12] 3082 	mov	r1,a
      000A98 E6               [12] 3083 	mov	a,@r0
      000A99 F7               [12] 3084 	mov	@r1,a
                                   3085 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:363: return c;
                                   3086 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:330: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000A9A                       3087 00112$:
      000A9A E5 81            [12] 3088 	mov	a,sp
      000A9C 24 EE            [12] 3089 	add	a,#0xee
      000A9E F8               [12] 3090 	mov	r0,a
      000A9F 86 82            [24] 3091 	mov	dpl,@r0
      000AA1 08               [12] 3092 	inc	r0
      000AA2 86 83            [24] 3093 	mov	dph,@r0
      000AA4 08               [12] 3094 	inc	r0
      000AA5 86 F0            [24] 3095 	mov	b,@r0
      000AA7 12r00r00         [24] 3096 	lcall	__gptrget
      000AAA FD               [12] 3097 	mov	r5,a
      000AAB BD 00 03         [24] 3098 	cjne	r5,#0x00,00145$
      000AAE 02r0Cr64         [24] 3099 	ljmp	00110$
      000AB1                       3100 00145$:
                                   3101 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:342: len = a->len;
      000AB1 E5 81            [12] 3102 	mov	a,sp
      000AB3 24 EE            [12] 3103 	add	a,#0xee
      000AB5 F8               [12] 3104 	mov	r0,a
      000AB6 74 01            [12] 3105 	mov	a,#0x01
      000AB8 26               [12] 3106 	add	a,@r0
      000AB9 FA               [12] 3107 	mov	r2,a
      000ABA E4               [12] 3108 	clr	a
      000ABB 08               [12] 3109 	inc	r0
      000ABC 36               [12] 3110 	addc	a,@r0
      000ABD FB               [12] 3111 	mov	r3,a
      000ABE 08               [12] 3112 	inc	r0
      000ABF 86 04            [24] 3113 	mov	ar4,@r0
      000AC1 8A 82            [24] 3114 	mov	dpl,r2
      000AC3 8B 83            [24] 3115 	mov	dph,r3
      000AC5 8C F0            [24] 3116 	mov	b,r4
      000AC7 12r00r00         [24] 3117 	lcall	__gptrget
      000ACA FA               [12] 3118 	mov	r2,a
      000ACB E5 81            [12] 3119 	mov	a,sp
      000ACD 24 F7            [12] 3120 	add	a,#0xf7
      000ACF F8               [12] 3121 	mov	r0,a
      000AD0 A6 02            [24] 3122 	mov	@r0,ar2
      000AD2 08               [12] 3123 	inc	r0
      000AD3 76 00            [12] 3124 	mov	@r0,#0x00
                                   3125 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:343: byteptr = bitptr / 8;
      000AD5 C0 07            [24] 3126 	push	ar7
      000AD7 C0 06            [24] 3127 	push	ar6
      000AD9 C0 05            [24] 3128 	push	ar5
      000ADB 74 08            [12] 3129 	mov	a,#0x08
      000ADD C0 E0            [24] 3130 	push	acc
      000ADF E4               [12] 3131 	clr	a
      000AE0 C0 E0            [24] 3132 	push	acc
      000AE2 8E 82            [24] 3133 	mov	dpl,r6
      000AE4 8F 83            [24] 3134 	mov	dph,r7
      000AE6 12r00r00         [24] 3135 	lcall	__divsint
      000AE9 AB 82            [24] 3136 	mov	r3,dpl
      000AEB AC 83            [24] 3137 	mov	r4,dph
      000AED 15 81            [12] 3138 	dec	sp
      000AEF 15 81            [12] 3139 	dec	sp
      000AF1 D0 05            [24] 3140 	pop	ar5
      000AF3 D0 06            [24] 3141 	pop	ar6
      000AF5 D0 07            [24] 3142 	pop	ar7
      000AF7 E5 81            [12] 3143 	mov	a,sp
      000AF9 24 F5            [12] 3144 	add	a,#0xf5
      000AFB F8               [12] 3145 	mov	r0,a
      000AFC A6 03            [24] 3146 	mov	@r0,ar3
      000AFE 08               [12] 3147 	inc	r0
      000AFF A6 04            [24] 3148 	mov	@r0,ar4
                                   3149 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:344: if(PACKETBUF_IS_ADDR(a->type)) {
      000B01 BD 18 00         [24] 3150 	cjne	r5,#0x18,00146$
      000B04                       3151 00146$:
      000B04 50 03            [24] 3152 	jnc	00147$
      000B06 02r0BrAC         [24] 3153 	ljmp	00108$
      000B09                       3154 00147$:
                                   3155 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:346: get_bits((uint8_t *)&addr, &hdrptr[byteptr], bitptr & 7, len);
      000B09 E5 81            [12] 3156 	mov	a,sp
      000B0B 24 F3            [12] 3157 	add	a,#0xf3
      000B0D F8               [12] 3158 	mov	r0,a
      000B0E 74 07            [12] 3159 	mov	a,#0x07
      000B10 5E               [12] 3160 	anl	a,r6
      000B11 F6               [12] 3161 	mov	@r0,a
      000B12 08               [12] 3162 	inc	r0
      000B13 76 00            [12] 3163 	mov	@r0,#0x00
      000B15 C0 06            [24] 3164 	push	ar6
      000B17 C0 07            [24] 3165 	push	ar7
      000B19 E5 81            [12] 3166 	mov	a,sp
      000B1B 24 F7            [12] 3167 	add	a,#0xf7
      000B1D F8               [12] 3168 	mov	r0,a
      000B1E E5 81            [12] 3169 	mov	a,sp
      000B20 24 F3            [12] 3170 	add	a,#0xf3
      000B22 F9               [12] 3171 	mov	r1,a
      000B23 E7               [12] 3172 	mov	a,@r1
      000B24 26               [12] 3173 	add	a,@r0
      000B25 FA               [12] 3174 	mov	r2,a
      000B26 09               [12] 3175 	inc	r1
      000B27 E7               [12] 3176 	mov	a,@r1
      000B28 08               [12] 3177 	inc	r0
      000B29 36               [12] 3178 	addc	a,@r0
      000B2A FB               [12] 3179 	mov	r3,a
      000B2B 08               [12] 3180 	inc	r0
      000B2C 86 07            [24] 3181 	mov	ar7,@r0
      000B2E E5 81            [12] 3182 	mov	a,sp
      000B30 24 EF            [12] 3183 	add	a,#0xef
      000B32 F8               [12] 3184 	mov	r0,a
      000B33 86 06            [24] 3185 	mov	ar6,@r0
      000B35 8E 04            [24] 3186 	mov	ar4,r6
      000B37 7D 00            [12] 3187 	mov	r5,#0x00
      000B39 7E 40            [12] 3188 	mov	r6,#0x40
      000B3B C0 07            [24] 3189 	push	ar7
      000B3D C0 06            [24] 3190 	push	ar6
      000B3F E5 81            [12] 3191 	mov	a,sp
      000B41 24 F3            [12] 3192 	add	a,#0xf3
      000B43 F8               [12] 3193 	mov	r0,a
      000B44 E6               [12] 3194 	mov	a,@r0
      000B45 C0 E0            [24] 3195 	push	acc
      000B47 08               [12] 3196 	inc	r0
      000B48 E6               [12] 3197 	mov	a,@r0
      000B49 C0 E0            [24] 3198 	push	acc
      000B4B E5 81            [12] 3199 	mov	a,sp
      000B4D 24 ED            [12] 3200 	add	a,#0xed
      000B4F F8               [12] 3201 	mov	r0,a
      000B50 E6               [12] 3202 	mov	a,@r0
      000B51 C0 E0            [24] 3203 	push	acc
      000B53 08               [12] 3204 	inc	r0
      000B54 E6               [12] 3205 	mov	a,@r0
      000B55 C0 E0            [24] 3206 	push	acc
      000B57 C0 02            [24] 3207 	push	ar2
      000B59 C0 03            [24] 3208 	push	ar3
      000B5B C0 07            [24] 3209 	push	ar7
      000B5D 8C 82            [24] 3210 	mov	dpl,r4
      000B5F 8D 83            [24] 3211 	mov	dph,r5
      000B61 8E F0            [24] 3212 	mov	b,r6
      000B63 12r00r74         [24] 3213 	lcall	_get_bits
      000B66 E5 81            [12] 3214 	mov	a,sp
      000B68 24 F9            [12] 3215 	add	a,#0xf9
      000B6A F5 81            [12] 3216 	mov	sp,a
      000B6C D0 06            [24] 3217 	pop	ar6
      000B6E D0 07            [24] 3218 	pop	ar7
                                   3219 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:350: packetbuf_set_addr(a->type, &addr);
      000B70 E5 81            [12] 3220 	mov	a,sp
      000B72 24 F0            [12] 3221 	add	a,#0xf0
      000B74 F8               [12] 3222 	mov	r0,a
      000B75 86 05            [24] 3223 	mov	ar5,@r0
      000B77 7E 00            [12] 3224 	mov	r6,#0x00
      000B79 7F 40            [12] 3225 	mov	r7,#0x40
      000B7B E5 81            [12] 3226 	mov	a,sp
      000B7D 24 EC            [12] 3227 	add	a,#0xec
      000B7F F8               [12] 3228 	mov	r0,a
      000B80 86 82            [24] 3229 	mov	dpl,@r0
      000B82 08               [12] 3230 	inc	r0
      000B83 86 83            [24] 3231 	mov	dph,@r0
      000B85 08               [12] 3232 	inc	r0
      000B86 86 F0            [24] 3233 	mov	b,@r0
      000B88 12r00r00         [24] 3234 	lcall	__gptrget
      000B8B FC               [12] 3235 	mov	r4,a
      000B8C C0 07            [24] 3236 	push	ar7
      000B8E C0 06            [24] 3237 	push	ar6
      000B90 C0 05            [24] 3238 	push	ar5
      000B92 C0 06            [24] 3239 	push	ar6
      000B94 C0 07            [24] 3240 	push	ar7
      000B96 8C 82            [24] 3241 	mov	dpl,r4
      000B98 12r00r00         [24] 3242 	lcall	_packetbuf_set_addr
      000B9B 15 81            [12] 3243 	dec	sp
      000B9D 15 81            [12] 3244 	dec	sp
      000B9F 15 81            [12] 3245 	dec	sp
      000BA1 D0 06            [24] 3246 	pop	ar6
      000BA3 D0 07            [24] 3247 	pop	ar7
      000BA5 D0 07            [24] 3248 	pop	ar7
      000BA7 D0 06            [24] 3249 	pop	ar6
      000BA9 02r0Cr48         [24] 3250 	ljmp	00109$
      000BAC                       3251 00108$:
                                   3252 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:352: packetbuf_attr_t val = 0;
      000BAC A8 81            [24] 3253 	mov	r0,sp
      000BAE 18               [12] 3254 	dec	r0
      000BAF E4               [12] 3255 	clr	a
      000BB0 F6               [12] 3256 	mov	@r0,a
      000BB1 08               [12] 3257 	inc	r0
      000BB2 F6               [12] 3258 	mov	@r0,a
                                   3259 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:353: get_bits((uint8_t *)&val, &hdrptr[byteptr], bitptr & 7, len);
      000BB3 E5 81            [12] 3260 	mov	a,sp
      000BB5 24 F3            [12] 3261 	add	a,#0xf3
      000BB7 F8               [12] 3262 	mov	r0,a
      000BB8 74 07            [12] 3263 	mov	a,#0x07
      000BBA 5E               [12] 3264 	anl	a,r6
      000BBB F6               [12] 3265 	mov	@r0,a
      000BBC 08               [12] 3266 	inc	r0
      000BBD 76 00            [12] 3267 	mov	@r0,#0x00
      000BBF C0 06            [24] 3268 	push	ar6
      000BC1 C0 07            [24] 3269 	push	ar7
      000BC3 E5 81            [12] 3270 	mov	a,sp
      000BC5 24 F7            [12] 3271 	add	a,#0xf7
      000BC7 F8               [12] 3272 	mov	r0,a
      000BC8 E5 81            [12] 3273 	mov	a,sp
      000BCA 24 F3            [12] 3274 	add	a,#0xf3
      000BCC F9               [12] 3275 	mov	r1,a
      000BCD E7               [12] 3276 	mov	a,@r1
      000BCE 26               [12] 3277 	add	a,@r0
      000BCF FA               [12] 3278 	mov	r2,a
      000BD0 09               [12] 3279 	inc	r1
      000BD1 E7               [12] 3280 	mov	a,@r1
      000BD2 08               [12] 3281 	inc	r0
      000BD3 36               [12] 3282 	addc	a,@r0
      000BD4 FB               [12] 3283 	mov	r3,a
      000BD5 08               [12] 3284 	inc	r0
      000BD6 86 07            [24] 3285 	mov	ar7,@r0
      000BD8 E5 81            [12] 3286 	mov	a,sp
      000BDA 24 FD            [12] 3287 	add	a,#0xFD
      000BDC FC               [12] 3288 	mov	r4,a
      000BDD 7D 00            [12] 3289 	mov	r5,#0x00
      000BDF 7E 40            [12] 3290 	mov	r6,#0x40
      000BE1 C0 07            [24] 3291 	push	ar7
      000BE3 C0 06            [24] 3292 	push	ar6
      000BE5 E5 81            [12] 3293 	mov	a,sp
      000BE7 24 F3            [12] 3294 	add	a,#0xf3
      000BE9 F8               [12] 3295 	mov	r0,a
      000BEA E6               [12] 3296 	mov	a,@r0
      000BEB C0 E0            [24] 3297 	push	acc
      000BED 08               [12] 3298 	inc	r0
      000BEE E6               [12] 3299 	mov	a,@r0
      000BEF C0 E0            [24] 3300 	push	acc
      000BF1 E5 81            [12] 3301 	mov	a,sp
      000BF3 24 ED            [12] 3302 	add	a,#0xed
      000BF5 F8               [12] 3303 	mov	r0,a
      000BF6 E6               [12] 3304 	mov	a,@r0
      000BF7 C0 E0            [24] 3305 	push	acc
      000BF9 08               [12] 3306 	inc	r0
      000BFA E6               [12] 3307 	mov	a,@r0
      000BFB C0 E0            [24] 3308 	push	acc
      000BFD C0 02            [24] 3309 	push	ar2
      000BFF C0 03            [24] 3310 	push	ar3
      000C01 C0 07            [24] 3311 	push	ar7
      000C03 8C 82            [24] 3312 	mov	dpl,r4
      000C05 8D 83            [24] 3313 	mov	dph,r5
      000C07 8E F0            [24] 3314 	mov	b,r6
      000C09 12r00r74         [24] 3315 	lcall	_get_bits
      000C0C E5 81            [12] 3316 	mov	a,sp
      000C0E 24 F9            [12] 3317 	add	a,#0xf9
      000C10 F5 81            [12] 3318 	mov	sp,a
      000C12 D0 06            [24] 3319 	pop	ar6
      000C14 D0 07            [24] 3320 	pop	ar7
                                   3321 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:355: packetbuf_set_attr(a->type, val);
      000C16 E5 81            [12] 3322 	mov	a,sp
      000C18 24 EC            [12] 3323 	add	a,#0xec
      000C1A F8               [12] 3324 	mov	r0,a
      000C1B 86 82            [24] 3325 	mov	dpl,@r0
      000C1D 08               [12] 3326 	inc	r0
      000C1E 86 83            [24] 3327 	mov	dph,@r0
      000C20 08               [12] 3328 	inc	r0
      000C21 86 F0            [24] 3329 	mov	b,@r0
      000C23 12r00r00         [24] 3330 	lcall	__gptrget
      000C26 FF               [12] 3331 	mov	r7,a
      000C27 C0 07            [24] 3332 	push	ar7
      000C29 C0 06            [24] 3333 	push	ar6
      000C2B E5 81            [12] 3334 	mov	a,sp
      000C2D 24 FB            [12] 3335 	add	a,#0xfb
      000C2F F8               [12] 3336 	mov	r0,a
      000C30 E6               [12] 3337 	mov	a,@r0
      000C31 C0 E0            [24] 3338 	push	acc
      000C33 08               [12] 3339 	inc	r0
      000C34 E6               [12] 3340 	mov	a,@r0
      000C35 C0 E0            [24] 3341 	push	acc
      000C37 8F 82            [24] 3342 	mov	dpl,r7
      000C39 12r00r00         [24] 3343 	lcall	_packetbuf_set_attr
      000C3C 15 81            [12] 3344 	dec	sp
      000C3E 15 81            [12] 3345 	dec	sp
      000C40 D0 06            [24] 3346 	pop	ar6
      000C42 D0 07            [24] 3347 	pop	ar7
                                   3348 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:363: return c;
      000C44 D0 07            [24] 3349 	pop	ar7
      000C46 D0 06            [24] 3350 	pop	ar6
                                   3351 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:355: packetbuf_set_attr(a->type, val);
      000C48                       3352 00109$:
                                   3353 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:361: bitptr += len;
      000C48 E5 81            [12] 3354 	mov	a,sp
      000C4A 24 F7            [12] 3355 	add	a,#0xf7
      000C4C F8               [12] 3356 	mov	r0,a
      000C4D E6               [12] 3357 	mov	a,@r0
      000C4E 2E               [12] 3358 	add	a,r6
      000C4F FE               [12] 3359 	mov	r6,a
      000C50 08               [12] 3360 	inc	r0
      000C51 E6               [12] 3361 	mov	a,@r0
      000C52 3F               [12] 3362 	addc	a,r7
      000C53 FF               [12] 3363 	mov	r7,a
                                   3364 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:330: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000C54 E5 81            [12] 3365 	mov	a,sp
      000C56 24 EE            [12] 3366 	add	a,#0xee
      000C58 F8               [12] 3367 	mov	r0,a
      000C59 74 02            [12] 3368 	mov	a,#0x02
      000C5B 26               [12] 3369 	add	a,@r0
      000C5C F6               [12] 3370 	mov	@r0,a
      000C5D E4               [12] 3371 	clr	a
      000C5E 08               [12] 3372 	inc	r0
      000C5F 36               [12] 3373 	addc	a,@r0
      000C60 F6               [12] 3374 	mov	@r0,a
      000C61 02r0Ar9A         [24] 3375 	ljmp	00112$
      000C64                       3376 00110$:
                                   3377 ;	/home/user/contiki/core/net/rime/chameleon-bitopt.c:363: return c;
      000C64 E5 81            [12] 3378 	mov	a,sp
      000C66 24 FC            [12] 3379 	add	a,#0xfc
      000C68 F8               [12] 3380 	mov	r0,a
      000C69 86 82            [24] 3381 	mov	dpl,@r0
      000C6B 08               [12] 3382 	inc	r0
      000C6C 86 83            [24] 3383 	mov	dph,@r0
      000C6E 08               [12] 3384 	inc	r0
      000C6F 86 F0            [24] 3385 	mov	b,@r0
      000C71                       3386 00114$:
      000C71 C8               [12] 3387 	xch	a,r0
      000C72 E5 81            [12] 3388 	mov	a,sp
      000C74 24 ED            [12] 3389 	add	a,#0xED
      000C76 F5 81            [12] 3390 	mov	sp,a
      000C78 C8               [12] 3391 	xch	a,r0
      000C79 22               [24] 3392 	ret
                                   3393 	.area CSEG    (CODE)
                                   3394 	.area CONST   (CODE)
      000000                       3395 _bitmask:
      000000 00                    3396 	.db #0x00	; 0
      000001 80                    3397 	.db #0x80	; 128
      000002 C0                    3398 	.db #0xC0	; 192
      000003 E0                    3399 	.db #0xE0	; 224
      000004 F0                    3400 	.db #0xF0	; 240
      000005 F8                    3401 	.db #0xF8	; 248
      000006 FC                    3402 	.db #0xFC	; 252
      000007 FE                    3403 	.db #0xFE	; 254
      000008 FF                    3404 	.db #0xFF	; 255
      000009                       3405 _chameleon_bitopt:
      000009r6As09                 3406 	.byte _unpack_header,(_unpack_header >> 8)
      00000BrB2s06                 3407 	.byte _pack_header,(_pack_header >> 8)
      00000Dr24s03                 3408 	.byte _header_size,(_header_size >> 8)
                                   3409 	.area XINIT   (CODE)
                                   3410 	.area CABS    (ABS,CODE)
