                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Tue Feb 10 06:19:33 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module rudolph0
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _stbroadcast_set_timer
                                     13 	.globl _stbroadcast_cancel
                                     14 	.globl _stbroadcast_send_stubborn
                                     15 	.globl _stbroadcast_close
                                     16 	.globl _stbroadcast_open
                                     17 	.globl _polite_send
                                     18 	.globl _polite_close
                                     19 	.globl _polite_open
                                     20 	.globl _packetbuf_hdralloc
                                     21 	.globl _packetbuf_reference
                                     22 	.globl _packetbuf_hdrptr
                                     23 	.globl _packetbuf_dataptr
                                     24 	.globl _packetbuf_clear
                                     25 	.globl _ACTIVE
                                     26 	.globl _TX_BYTE
                                     27 	.globl _RX_BYTE
                                     28 	.globl _ERR
                                     29 	.globl _FE
                                     30 	.globl _SLAVE
                                     31 	.globl _RE
                                     32 	.globl _MODE
                                     33 	.globl _T3OVFIF
                                     34 	.globl _T3CH0IF
                                     35 	.globl _T3CH1IF
                                     36 	.globl _T4OVFIF
                                     37 	.globl _T4CH0IF
                                     38 	.globl _T4CH1IF
                                     39 	.globl _OVFIM
                                     40 	.globl _B_0
                                     41 	.globl _B_1
                                     42 	.globl _B_2
                                     43 	.globl _B_3
                                     44 	.globl _B_4
                                     45 	.globl _B_5
                                     46 	.globl _B_6
                                     47 	.globl _B_7
                                     48 	.globl _P2IF
                                     49 	.globl _UTX0IF
                                     50 	.globl _UTX1IF
                                     51 	.globl _P1IF
                                     52 	.globl _WDTIF
                                     53 	.globl _ACC_0
                                     54 	.globl _ACC_1
                                     55 	.globl _ACC_2
                                     56 	.globl _ACC_3
                                     57 	.globl _ACC_4
                                     58 	.globl _ACC_5
                                     59 	.globl _ACC_6
                                     60 	.globl _ACC_7
                                     61 	.globl _P
                                     62 	.globl _F1
                                     63 	.globl _OV
                                     64 	.globl _RS0
                                     65 	.globl _RS1
                                     66 	.globl _F0
                                     67 	.globl _AC
                                     68 	.globl _CY
                                     69 	.globl _DMAIF
                                     70 	.globl _T1IF
                                     71 	.globl _T2IF
                                     72 	.globl _T3IF
                                     73 	.globl _T4IF
                                     74 	.globl _P0IF
                                     75 	.globl _STIF
                                     76 	.globl _DMAIE
                                     77 	.globl _T1IE
                                     78 	.globl _T2IE
                                     79 	.globl _T3IE
                                     80 	.globl _T4IE
                                     81 	.globl _P0IE
                                     82 	.globl _RFERRIE
                                     83 	.globl _ADCIE
                                     84 	.globl _URX0IE
                                     85 	.globl _URX1IE
                                     86 	.globl _ENCIE
                                     87 	.globl _STIE
                                     88 	.globl _EA
                                     89 	.globl _P2_0
                                     90 	.globl _P2_1
                                     91 	.globl _P2_2
                                     92 	.globl _P2_3
                                     93 	.globl _P2_4
                                     94 	.globl _P2_5
                                     95 	.globl _P2_6
                                     96 	.globl _P2_7
                                     97 	.globl _ENCIF_0
                                     98 	.globl _ENCIF_1
                                     99 	.globl _P1_0
                                    100 	.globl _P1_1
                                    101 	.globl _P1_2
                                    102 	.globl _P1_3
                                    103 	.globl _P1_4
                                    104 	.globl _P1_5
                                    105 	.globl _P1_6
                                    106 	.globl _P1_7
                                    107 	.globl _IT0
                                    108 	.globl _RFERRIF
                                    109 	.globl _IT1
                                    110 	.globl _URX0IF
                                    111 	.globl _ADCIF
                                    112 	.globl _URX1IF
                                    113 	.globl _P0_0
                                    114 	.globl _P0_1
                                    115 	.globl _P0_2
                                    116 	.globl _P0_3
                                    117 	.globl _P0_4
                                    118 	.globl _P0_5
                                    119 	.globl _P0_6
                                    120 	.globl _P0_7
                                    121 	.globl _WDCTL
                                    122 	.globl _U1GCR
                                    123 	.globl _U1UCR
                                    124 	.globl _U1BAUD
                                    125 	.globl _U1DBUF
                                    126 	.globl _U1CSR
                                    127 	.globl _U0GCR
                                    128 	.globl _U0UCR
                                    129 	.globl _U0BAUD
                                    130 	.globl _U0DBUF
                                    131 	.globl _U0CSR
                                    132 	.globl _TIMIF
                                    133 	.globl _T4CC1
                                    134 	.globl _T4CCTL1
                                    135 	.globl _T4CC0
                                    136 	.globl _T4CCTL0
                                    137 	.globl _T4CTL
                                    138 	.globl _T4CNT
                                    139 	.globl _T3CC1
                                    140 	.globl _T3CCTL1
                                    141 	.globl _T3CC0
                                    142 	.globl _T3CCTL0
                                    143 	.globl _T3CTL
                                    144 	.globl _T3CNT
                                    145 	.globl _T2MSEL
                                    146 	.globl _T2IRQM
                                    147 	.globl _T2MOVF2
                                    148 	.globl _T2MOVF1
                                    149 	.globl _T2MOVF0
                                    150 	.globl _T2M1
                                    151 	.globl _T2M0
                                    152 	.globl _T2IRQF
                                    153 	.globl _T2EVTCFG
                                    154 	.globl _T2CTRL
                                    155 	.globl _T1STAT
                                    156 	.globl _T1CCTL2
                                    157 	.globl _T1CCTL1
                                    158 	.globl _T1CCTL0
                                    159 	.globl _T1CTL
                                    160 	.globl _T1CNTH
                                    161 	.globl _T1CNTL
                                    162 	.globl _T1CC2H
                                    163 	.globl _T1CC2L
                                    164 	.globl _T1CC1H
                                    165 	.globl _T1CC1L
                                    166 	.globl _T1CC0H
                                    167 	.globl _T1CC0L
                                    168 	.globl _CLKCONSTA
                                    169 	.globl _CLKCONCMD
                                    170 	.globl _SLEEPSTA
                                    171 	.globl _SLEEPCMD
                                    172 	.globl _STLOAD
                                    173 	.globl _ST2
                                    174 	.globl _ST1
                                    175 	.globl _ST0
                                    176 	.globl _RFERRF
                                    177 	.globl _RFIRQF0
                                    178 	.globl _RFST
                                    179 	.globl _RFD
                                    180 	.globl _RFIRQF1
                                    181 	.globl _PSBANK
                                    182 	.globl _FMAP
                                    183 	.globl _MEMCTR
                                    184 	.globl __XPAGE
                                    185 	.globl _MPAGE
                                    186 	.globl _PMUX
                                    187 	.globl _P2DIR
                                    188 	.globl _P1DIR
                                    189 	.globl _P0DIR
                                    190 	.globl _P2INP
                                    191 	.globl _P1INP
                                    192 	.globl _P2SEL
                                    193 	.globl _P1SEL
                                    194 	.globl _P0SEL
                                    195 	.globl _APCFG
                                    196 	.globl _PERCFG
                                    197 	.globl _P0INP
                                    198 	.globl _P2IEN
                                    199 	.globl _P1IEN
                                    200 	.globl _P0IEN
                                    201 	.globl _PICTL
                                    202 	.globl _P2IFG
                                    203 	.globl _P1IFG
                                    204 	.globl _P0IFG
                                    205 	.globl _DMAREQ
                                    206 	.globl _DMAARM
                                    207 	.globl _DMA0CFGH
                                    208 	.globl _DMA0CFGL
                                    209 	.globl _DMA1CFGH
                                    210 	.globl _DMA1CFGL
                                    211 	.globl _DMAIRQ
                                    212 	.globl _ENCCS
                                    213 	.globl _ENCDO
                                    214 	.globl _ENCDI
                                    215 	.globl _RNDH
                                    216 	.globl _RNDL
                                    217 	.globl _ADCH
                                    218 	.globl _ADCL
                                    219 	.globl _ADCCON3
                                    220 	.globl _ADCCON2
                                    221 	.globl _ADCCON1
                                    222 	.globl _B
                                    223 	.globl _IRCON2
                                    224 	.globl _ACC
                                    225 	.globl _PSW
                                    226 	.globl _IRCON
                                    227 	.globl _IP1
                                    228 	.globl _IEN1
                                    229 	.globl _IP0
                                    230 	.globl _IEN0
                                    231 	.globl _P2
                                    232 	.globl _S1CON
                                    233 	.globl _IEN2
                                    234 	.globl _S0CON
                                    235 	.globl _DPS
                                    236 	.globl _P1
                                    237 	.globl _TCON
                                    238 	.globl _PCON
                                    239 	.globl _DPH1
                                    240 	.globl _DPL1
                                    241 	.globl _DPH0
                                    242 	.globl _DPL0
                                    243 	.globl _SP
                                    244 	.globl _P0
                                    245 	.globl _X_IEEE_ADDR
                                    246 	.globl _X_INFOPAGE
                                    247 	.globl _X_P2DIR
                                    248 	.globl _X_P1DIR
                                    249 	.globl _X_P0DIR
                                    250 	.globl _X_U1GCR
                                    251 	.globl _X_U1UCR
                                    252 	.globl _X_U1BAUD
                                    253 	.globl _X_U1DBUF
                                    254 	.globl _X_U1CSR
                                    255 	.globl _X_P2INP
                                    256 	.globl _X_P1INP
                                    257 	.globl _X_P2SEL
                                    258 	.globl _X_P1SEL
                                    259 	.globl _X_P0SEL
                                    260 	.globl _X_APCFG
                                    261 	.globl _X_PERCFG
                                    262 	.globl _X_T4CC1
                                    263 	.globl _X_T4CCTL1
                                    264 	.globl _X_T4CC0
                                    265 	.globl _X_T4CCTL0
                                    266 	.globl _X_T4CTL
                                    267 	.globl _X_T4CNT
                                    268 	.globl _X_RFIRQF0
                                    269 	.globl _X_T1CCTL2
                                    270 	.globl _X_T1CCTL1
                                    271 	.globl _X_T1CCTL0
                                    272 	.globl _X_T1CTL
                                    273 	.globl _X_T1CNTH
                                    274 	.globl _X_T1CNTL
                                    275 	.globl _X_RFST
                                    276 	.globl _X_T1CC2H
                                    277 	.globl _X_T1CC2L
                                    278 	.globl _X_T1CC1H
                                    279 	.globl _X_T1CC1L
                                    280 	.globl _X_T1CC0H
                                    281 	.globl _X_T1CC0L
                                    282 	.globl _X_RFD
                                    283 	.globl _X_TIMIF
                                    284 	.globl _X_DMAREQ
                                    285 	.globl _X_DMAARM
                                    286 	.globl _X_DMA0CFGH
                                    287 	.globl _X_DMA0CFGL
                                    288 	.globl _X_DMA1CFGH
                                    289 	.globl _X_DMA1CFGL
                                    290 	.globl _X_DMAIRQ
                                    291 	.globl _X_T3CC1
                                    292 	.globl _X_T3CCTL1
                                    293 	.globl _X_T3CC0
                                    294 	.globl _X_T3CCTL0
                                    295 	.globl _X_T3CTL
                                    296 	.globl _X_T3CNT
                                    297 	.globl _X_WDCTL
                                    298 	.globl _X_MEMCTR
                                    299 	.globl _X_CLKCONCMD
                                    300 	.globl _X_U0GCR
                                    301 	.globl _X_U0UCR
                                    302 	.globl _X_T2MSEL
                                    303 	.globl _X_U0BAUD
                                    304 	.globl _X_U0DBUF
                                    305 	.globl _X_RFERRF
                                    306 	.globl _X_SLEEPCMD
                                    307 	.globl _X_RNDH
                                    308 	.globl _X_RNDL
                                    309 	.globl _X_ADCH
                                    310 	.globl _X_ADCL
                                    311 	.globl _X_ADCCON3
                                    312 	.globl _X_ADCCON2
                                    313 	.globl _X_ADCCON1
                                    314 	.globl _X_ENCCS
                                    315 	.globl _X_ENCDO
                                    316 	.globl _X_ENCDI
                                    317 	.globl _X_T1STAT
                                    318 	.globl _X_PMUX
                                    319 	.globl _X_STLOAD
                                    320 	.globl _X_P2IEN
                                    321 	.globl _X_P0IEN
                                    322 	.globl _X_T2IRQM
                                    323 	.globl _X_T2MOVF2
                                    324 	.globl _X_T2MOVF1
                                    325 	.globl _X_T2MOVF0
                                    326 	.globl _X_T2M1
                                    327 	.globl _X_T2M0
                                    328 	.globl _X_T2IRQF
                                    329 	.globl _X_P2
                                    330 	.globl _X_PSBANK
                                    331 	.globl _X_FMAP
                                    332 	.globl _X_CLKCONSTA
                                    333 	.globl _X_SLEEPSTA
                                    334 	.globl _X_T2EVTCFG
                                    335 	.globl _X_ST2
                                    336 	.globl _X_ST1
                                    337 	.globl _X_ST0
                                    338 	.globl _X_T2CTRL
                                    339 	.globl _X__XPAGE
                                    340 	.globl _X_MPAGE
                                    341 	.globl _X_RFIRQF1
                                    342 	.globl _X_P1
                                    343 	.globl _X_P0INP
                                    344 	.globl _X_P1IEN
                                    345 	.globl _X_PICTL
                                    346 	.globl _X_P2IFG
                                    347 	.globl _X_P1IFG
                                    348 	.globl _X_P0IFG
                                    349 	.globl _X_U0CSR
                                    350 	.globl _X_P0
                                    351 	.globl _USBF5
                                    352 	.globl _USBF4
                                    353 	.globl _USBF3
                                    354 	.globl _USBF2
                                    355 	.globl _USBF1
                                    356 	.globl _USBF0
                                    357 	.globl _USBCNTH
                                    358 	.globl _USBCNTL
                                    359 	.globl _USBCNT0
                                    360 	.globl _USBCSOH
                                    361 	.globl _USBCSOL
                                    362 	.globl _USBMAXO
                                    363 	.globl _USBCSIH
                                    364 	.globl _USBCSIL
                                    365 	.globl _USBCS0
                                    366 	.globl _USBMAXI
                                    367 	.globl _USBCTRL
                                    368 	.globl _USBINDEX
                                    369 	.globl _USBFRMH
                                    370 	.globl _USBFRML
                                    371 	.globl _USBCIE
                                    372 	.globl _USBOIE
                                    373 	.globl _USBIIE
                                    374 	.globl _USBCIF
                                    375 	.globl _USBOIF
                                    376 	.globl _USBIIF
                                    377 	.globl _USBPOW
                                    378 	.globl _USBADDR
                                    379 	.globl _CSPT
                                    380 	.globl _CSPZ
                                    381 	.globl _CSPY
                                    382 	.globl _CSPX
                                    383 	.globl _CSPSTAT
                                    384 	.globl _CSPCTRL
                                    385 	.globl _CSPPROG23
                                    386 	.globl _CSPPROG22
                                    387 	.globl _CSPPROG21
                                    388 	.globl _CSPPROG20
                                    389 	.globl _CSPPROG19
                                    390 	.globl _CSPPROG18
                                    391 	.globl _CSPPROG17
                                    392 	.globl _CSPPROG16
                                    393 	.globl _CSPPROG15
                                    394 	.globl _CSPPROG14
                                    395 	.globl _CSPPROG13
                                    396 	.globl _CSPPROG12
                                    397 	.globl _CSPPROG11
                                    398 	.globl _CSPPROG10
                                    399 	.globl _CSPPROG9
                                    400 	.globl _CSPPROG8
                                    401 	.globl _CSPPROG7
                                    402 	.globl _CSPPROG6
                                    403 	.globl _CSPPROG5
                                    404 	.globl _CSPPROG4
                                    405 	.globl _CSPPROG3
                                    406 	.globl _CSPPROG2
                                    407 	.globl _CSPPROG1
                                    408 	.globl _CSPPROG0
                                    409 	.globl _RFC_OBS_CTRL2
                                    410 	.globl _RFC_OBS_CTRL1
                                    411 	.globl _RFC_OBS_CTRL0
                                    412 	.globl _TXFILTCFG
                                    413 	.globl _PTEST1
                                    414 	.globl _PTEST0
                                    415 	.globl _ATEST
                                    416 	.globl _DACTEST2
                                    417 	.globl _DACTEST1
                                    418 	.globl _DACTEST0
                                    419 	.globl _MDMTEST1
                                    420 	.globl _MDMTEST0
                                    421 	.globl _ADCTEST2
                                    422 	.globl _ADCTEST1
                                    423 	.globl _ADCTEST0
                                    424 	.globl _AGCCTRL3
                                    425 	.globl _AGCCTRL2
                                    426 	.globl _AGCCTRL1
                                    427 	.globl _AGCCTRL0
                                    428 	.globl _FSCAL3
                                    429 	.globl _FSCAL2
                                    430 	.globl _FSCAL1
                                    431 	.globl _FSCAL0
                                    432 	.globl _FSCTRL
                                    433 	.globl _RXCTRL
                                    434 	.globl _FREQEST
                                    435 	.globl _MDMCTRL1
                                    436 	.globl _MDMCTRL0
                                    437 	.globl _RFRND
                                    438 	.globl _RFERRM
                                    439 	.globl _RFIRQM1
                                    440 	.globl _RFIRQM0
                                    441 	.globl _TXLAST_PTR
                                    442 	.globl _TXFIRST_PTR
                                    443 	.globl _RXP1_PTR
                                    444 	.globl _RXLAST_PTR
                                    445 	.globl _RXFIRST_PTR
                                    446 	.globl _TXFIFOCNT
                                    447 	.globl _RXFIFOCNT
                                    448 	.globl _RXFIRST
                                    449 	.globl _RSSISTAT
                                    450 	.globl _RSSI
                                    451 	.globl _CCACTRL1
                                    452 	.globl _CCACTRL0
                                    453 	.globl _FSMCTRL
                                    454 	.globl _FIFOPCTRL
                                    455 	.globl _FSMSTAT1
                                    456 	.globl _FSMSTAT0
                                    457 	.globl _TXCTRL
                                    458 	.globl _TXPOWER
                                    459 	.globl _FREQCTRL
                                    460 	.globl _FREQTUNE
                                    461 	.globl _RXMASKCLR
                                    462 	.globl _RXMASKSET
                                    463 	.globl _RXENABLE
                                    464 	.globl _FRMCTRL1
                                    465 	.globl _FRMCTRL0
                                    466 	.globl _SRCEXTEN2
                                    467 	.globl _SRCEXTEN1
                                    468 	.globl _SRCEXTEN0
                                    469 	.globl _SRCSHORTEN2
                                    470 	.globl _SRCSHORTEN1
                                    471 	.globl _SRCSHORTEN0
                                    472 	.globl _SRCMATCH
                                    473 	.globl _FRMFILT1
                                    474 	.globl _FRMFILT0
                                    475 	.globl _SHORT_ADDR1
                                    476 	.globl _SHORT_ADDR0
                                    477 	.globl _PAN_ID1
                                    478 	.globl _PAN_ID0
                                    479 	.globl _EXT_ADDR7
                                    480 	.globl _EXT_ADDR6
                                    481 	.globl _EXT_ADDR5
                                    482 	.globl _EXT_ADDR4
                                    483 	.globl _EXT_ADDR3
                                    484 	.globl _EXT_ADDR2
                                    485 	.globl _EXT_ADDR1
                                    486 	.globl _EXT_ADDR0
                                    487 	.globl _SRCSHORTPENDEN2
                                    488 	.globl _SRCSHORTPENDEN1
                                    489 	.globl _SRCSHORTPENDEN0
                                    490 	.globl _SRCEXTPENDEN2
                                    491 	.globl _SRCEXTPENDEN1
                                    492 	.globl _SRCEXTPENDEN0
                                    493 	.globl _SRCRESINDEX
                                    494 	.globl _SRCRESMASK2
                                    495 	.globl _SRCRESMASK1
                                    496 	.globl _SRCRESMASK0
                                    497 	.globl _SRC_ADDR_TABLE
                                    498 	.globl _TXFIFO
                                    499 	.globl _RXFIFO
                                    500 	.globl _RFCORE_RAM
                                    501 	.globl _CMPCTL
                                    502 	.globl _OPAMPS
                                    503 	.globl _OPAMPC
                                    504 	.globl _STCV2
                                    505 	.globl _STCV1
                                    506 	.globl _STCV0
                                    507 	.globl _STCS
                                    508 	.globl _STCC
                                    509 	.globl _T1CC4H
                                    510 	.globl _T1CC4L
                                    511 	.globl _T1CC3H
                                    512 	.globl _T1CC3L
                                    513 	.globl _XX_T1CC2H
                                    514 	.globl _XX_T1CC2L
                                    515 	.globl _XX_T1CC1H
                                    516 	.globl _XX_T1CC1L
                                    517 	.globl _XX_T1CC0H
                                    518 	.globl _XX_T1CC0L
                                    519 	.globl _T1CCTL4
                                    520 	.globl _T1CCTL3
                                    521 	.globl _XX_T1CCTL2
                                    522 	.globl _XX_T1CCTL1
                                    523 	.globl _XX_T1CCTL0
                                    524 	.globl _CLD
                                    525 	.globl _IRCTL
                                    526 	.globl _CHIPINFO1
                                    527 	.globl _CHIPINFO0
                                    528 	.globl _FWDATA
                                    529 	.globl _FADDRH
                                    530 	.globl _FADDRL
                                    531 	.globl _FCTL
                                    532 	.globl _IVCTRL
                                    533 	.globl _BATTMON
                                    534 	.globl _SRCRC
                                    535 	.globl _DBGDATA
                                    536 	.globl _TESTREG0
                                    537 	.globl _CHIPID
                                    538 	.globl _CHVER
                                    539 	.globl _OBSSEL5
                                    540 	.globl _OBSSEL4
                                    541 	.globl _OBSSEL3
                                    542 	.globl _OBSSEL2
                                    543 	.globl _OBSSEL1
                                    544 	.globl _OBSSEL0
                                    545 	.globl _I2CIO
                                    546 	.globl _I2CWC
                                    547 	.globl _I2CADDR
                                    548 	.globl _I2CDATA
                                    549 	.globl _I2CSTAT
                                    550 	.globl _I2CCFG
                                    551 	.globl _OPAMPMC
                                    552 	.globl _MONMUX
                                    553 	.globl _rudolph0_open
                                    554 	.globl _rudolph0_close
                                    555 	.globl _rudolph0_send
                                    556 	.globl _rudolph0_force_restart
                                    557 	.globl _rudolph0_stop
                                    558 	.globl _rudolph0_version
                                    559 	.globl _rudolph0_set_version
                                    560 ;--------------------------------------------------------
                                    561 ; special function registers
                                    562 ;--------------------------------------------------------
                                    563 	.area RSEG    (ABS,DATA)
      000000                        564 	.org 0x0000
                           000080   565 _P0	=	0x0080
                           000081   566 _SP	=	0x0081
                           000082   567 _DPL0	=	0x0082
                           000083   568 _DPH0	=	0x0083
                           000084   569 _DPL1	=	0x0084
                           000085   570 _DPH1	=	0x0085
                           000087   571 _PCON	=	0x0087
                           000088   572 _TCON	=	0x0088
                           000090   573 _P1	=	0x0090
                           000092   574 _DPS	=	0x0092
                           000098   575 _S0CON	=	0x0098
                           00009A   576 _IEN2	=	0x009a
                           00009B   577 _S1CON	=	0x009b
                           0000A0   578 _P2	=	0x00a0
                           0000A8   579 _IEN0	=	0x00a8
                           0000A9   580 _IP0	=	0x00a9
                           0000B8   581 _IEN1	=	0x00b8
                           0000B9   582 _IP1	=	0x00b9
                           0000C0   583 _IRCON	=	0x00c0
                           0000D0   584 _PSW	=	0x00d0
                           0000E0   585 _ACC	=	0x00e0
                           0000E8   586 _IRCON2	=	0x00e8
                           0000F0   587 _B	=	0x00f0
                           0000B4   588 _ADCCON1	=	0x00b4
                           0000B5   589 _ADCCON2	=	0x00b5
                           0000B6   590 _ADCCON3	=	0x00b6
                           0000BA   591 _ADCL	=	0x00ba
                           0000BB   592 _ADCH	=	0x00bb
                           0000BC   593 _RNDL	=	0x00bc
                           0000BD   594 _RNDH	=	0x00bd
                           0000B1   595 _ENCDI	=	0x00b1
                           0000B2   596 _ENCDO	=	0x00b2
                           0000B3   597 _ENCCS	=	0x00b3
                           0000D1   598 _DMAIRQ	=	0x00d1
                           0000D2   599 _DMA1CFGL	=	0x00d2
                           0000D3   600 _DMA1CFGH	=	0x00d3
                           0000D4   601 _DMA0CFGL	=	0x00d4
                           0000D5   602 _DMA0CFGH	=	0x00d5
                           0000D6   603 _DMAARM	=	0x00d6
                           0000D7   604 _DMAREQ	=	0x00d7
                           000089   605 _P0IFG	=	0x0089
                           00008A   606 _P1IFG	=	0x008a
                           00008B   607 _P2IFG	=	0x008b
                           00008C   608 _PICTL	=	0x008c
                           0000AB   609 _P0IEN	=	0x00ab
                           00008D   610 _P1IEN	=	0x008d
                           0000AC   611 _P2IEN	=	0x00ac
                           00008F   612 _P0INP	=	0x008f
                           0000F1   613 _PERCFG	=	0x00f1
                           0000F2   614 _APCFG	=	0x00f2
                           0000F3   615 _P0SEL	=	0x00f3
                           0000F4   616 _P1SEL	=	0x00f4
                           0000F5   617 _P2SEL	=	0x00f5
                           0000F6   618 _P1INP	=	0x00f6
                           0000F7   619 _P2INP	=	0x00f7
                           0000FD   620 _P0DIR	=	0x00fd
                           0000FE   621 _P1DIR	=	0x00fe
                           0000FF   622 _P2DIR	=	0x00ff
                           0000AE   623 _PMUX	=	0x00ae
                           000093   624 _MPAGE	=	0x0093
                           000093   625 __XPAGE	=	0x0093
                           0000C7   626 _MEMCTR	=	0x00c7
                           00009F   627 _FMAP	=	0x009f
                           00009F   628 _PSBANK	=	0x009f
                           000091   629 _RFIRQF1	=	0x0091
                           0000D9   630 _RFD	=	0x00d9
                           0000E1   631 _RFST	=	0x00e1
                           0000E9   632 _RFIRQF0	=	0x00e9
                           0000BF   633 _RFERRF	=	0x00bf
                           000095   634 _ST0	=	0x0095
                           000096   635 _ST1	=	0x0096
                           000097   636 _ST2	=	0x0097
                           0000AD   637 _STLOAD	=	0x00ad
                           0000BE   638 _SLEEPCMD	=	0x00be
                           00009D   639 _SLEEPSTA	=	0x009d
                           0000C6   640 _CLKCONCMD	=	0x00c6
                           00009E   641 _CLKCONSTA	=	0x009e
                           0000DA   642 _T1CC0L	=	0x00da
                           0000DB   643 _T1CC0H	=	0x00db
                           0000DC   644 _T1CC1L	=	0x00dc
                           0000DD   645 _T1CC1H	=	0x00dd
                           0000DE   646 _T1CC2L	=	0x00de
                           0000DF   647 _T1CC2H	=	0x00df
                           0000E2   648 _T1CNTL	=	0x00e2
                           0000E3   649 _T1CNTH	=	0x00e3
                           0000E4   650 _T1CTL	=	0x00e4
                           0000E5   651 _T1CCTL0	=	0x00e5
                           0000E6   652 _T1CCTL1	=	0x00e6
                           0000E7   653 _T1CCTL2	=	0x00e7
                           0000AF   654 _T1STAT	=	0x00af
                           000094   655 _T2CTRL	=	0x0094
                           00009C   656 _T2EVTCFG	=	0x009c
                           0000A1   657 _T2IRQF	=	0x00a1
                           0000A2   658 _T2M0	=	0x00a2
                           0000A3   659 _T2M1	=	0x00a3
                           0000A4   660 _T2MOVF0	=	0x00a4
                           0000A5   661 _T2MOVF1	=	0x00a5
                           0000A6   662 _T2MOVF2	=	0x00a6
                           0000A7   663 _T2IRQM	=	0x00a7
                           0000C3   664 _T2MSEL	=	0x00c3
                           0000CA   665 _T3CNT	=	0x00ca
                           0000CB   666 _T3CTL	=	0x00cb
                           0000CC   667 _T3CCTL0	=	0x00cc
                           0000CD   668 _T3CC0	=	0x00cd
                           0000CE   669 _T3CCTL1	=	0x00ce
                           0000CF   670 _T3CC1	=	0x00cf
                           0000EA   671 _T4CNT	=	0x00ea
                           0000EB   672 _T4CTL	=	0x00eb
                           0000EC   673 _T4CCTL0	=	0x00ec
                           0000ED   674 _T4CC0	=	0x00ed
                           0000EE   675 _T4CCTL1	=	0x00ee
                           0000EF   676 _T4CC1	=	0x00ef
                           0000D8   677 _TIMIF	=	0x00d8
                           000086   678 _U0CSR	=	0x0086
                           0000C1   679 _U0DBUF	=	0x00c1
                           0000C2   680 _U0BAUD	=	0x00c2
                           0000C4   681 _U0UCR	=	0x00c4
                           0000C5   682 _U0GCR	=	0x00c5
                           0000F8   683 _U1CSR	=	0x00f8
                           0000F9   684 _U1DBUF	=	0x00f9
                           0000FA   685 _U1BAUD	=	0x00fa
                           0000FB   686 _U1UCR	=	0x00fb
                           0000FC   687 _U1GCR	=	0x00fc
                           0000C9   688 _WDCTL	=	0x00c9
                                    689 ;--------------------------------------------------------
                                    690 ; special function bits
                                    691 ;--------------------------------------------------------
                                    692 	.area RSEG    (ABS,DATA)
      000000                        693 	.org 0x0000
                           000087   694 _P0_7	=	0x0087
                           000086   695 _P0_6	=	0x0086
                           000085   696 _P0_5	=	0x0085
                           000084   697 _P0_4	=	0x0084
                           000083   698 _P0_3	=	0x0083
                           000082   699 _P0_2	=	0x0082
                           000081   700 _P0_1	=	0x0081
                           000080   701 _P0_0	=	0x0080
                           00008F   702 _URX1IF	=	0x008f
                           00008D   703 _ADCIF	=	0x008d
                           00008B   704 _URX0IF	=	0x008b
                           00008A   705 _IT1	=	0x008a
                           000089   706 _RFERRIF	=	0x0089
                           000088   707 _IT0	=	0x0088
                           000097   708 _P1_7	=	0x0097
                           000096   709 _P1_6	=	0x0096
                           000095   710 _P1_5	=	0x0095
                           000094   711 _P1_4	=	0x0094
                           000093   712 _P1_3	=	0x0093
                           000092   713 _P1_2	=	0x0092
                           000091   714 _P1_1	=	0x0091
                           000090   715 _P1_0	=	0x0090
                           000099   716 _ENCIF_1	=	0x0099
                           000098   717 _ENCIF_0	=	0x0098
                           0000A7   718 _P2_7	=	0x00a7
                           0000A6   719 _P2_6	=	0x00a6
                           0000A5   720 _P2_5	=	0x00a5
                           0000A4   721 _P2_4	=	0x00a4
                           0000A3   722 _P2_3	=	0x00a3
                           0000A2   723 _P2_2	=	0x00a2
                           0000A1   724 _P2_1	=	0x00a1
                           0000A0   725 _P2_0	=	0x00a0
                           0000AF   726 _EA	=	0x00af
                           0000AD   727 _STIE	=	0x00ad
                           0000AC   728 _ENCIE	=	0x00ac
                           0000AB   729 _URX1IE	=	0x00ab
                           0000AA   730 _URX0IE	=	0x00aa
                           0000A9   731 _ADCIE	=	0x00a9
                           0000A8   732 _RFERRIE	=	0x00a8
                           0000BD   733 _P0IE	=	0x00bd
                           0000BC   734 _T4IE	=	0x00bc
                           0000BB   735 _T3IE	=	0x00bb
                           0000BA   736 _T2IE	=	0x00ba
                           0000B9   737 _T1IE	=	0x00b9
                           0000B8   738 _DMAIE	=	0x00b8
                           0000C7   739 _STIF	=	0x00c7
                           0000C5   740 _P0IF	=	0x00c5
                           0000C4   741 _T4IF	=	0x00c4
                           0000C3   742 _T3IF	=	0x00c3
                           0000C2   743 _T2IF	=	0x00c2
                           0000C1   744 _T1IF	=	0x00c1
                           0000C0   745 _DMAIF	=	0x00c0
                           0000D7   746 _CY	=	0x00d7
                           0000D6   747 _AC	=	0x00d6
                           0000D5   748 _F0	=	0x00d5
                           0000D4   749 _RS1	=	0x00d4
                           0000D3   750 _RS0	=	0x00d3
                           0000D2   751 _OV	=	0x00d2
                           0000D1   752 _F1	=	0x00d1
                           0000D0   753 _P	=	0x00d0
                           0000E7   754 _ACC_7	=	0x00e7
                           0000E6   755 _ACC_6	=	0x00e6
                           0000E5   756 _ACC_5	=	0x00e5
                           0000E4   757 _ACC_4	=	0x00e4
                           0000E3   758 _ACC_3	=	0x00e3
                           0000E2   759 _ACC_2	=	0x00e2
                           0000E1   760 _ACC_1	=	0x00e1
                           0000E0   761 _ACC_0	=	0x00e0
                           0000EC   762 _WDTIF	=	0x00ec
                           0000EB   763 _P1IF	=	0x00eb
                           0000EA   764 _UTX1IF	=	0x00ea
                           0000E9   765 _UTX0IF	=	0x00e9
                           0000E8   766 _P2IF	=	0x00e8
                           0000F7   767 _B_7	=	0x00f7
                           0000F6   768 _B_6	=	0x00f6
                           0000F5   769 _B_5	=	0x00f5
                           0000F4   770 _B_4	=	0x00f4
                           0000F3   771 _B_3	=	0x00f3
                           0000F2   772 _B_2	=	0x00f2
                           0000F1   773 _B_1	=	0x00f1
                           0000F0   774 _B_0	=	0x00f0
                           0000DE   775 _OVFIM	=	0x00de
                           0000DD   776 _T4CH1IF	=	0x00dd
                           0000DC   777 _T4CH0IF	=	0x00dc
                           0000DB   778 _T4OVFIF	=	0x00db
                           0000DA   779 _T3CH1IF	=	0x00da
                           0000D9   780 _T3CH0IF	=	0x00d9
                           0000D8   781 _T3OVFIF	=	0x00d8
                           0000FF   782 _MODE	=	0x00ff
                           0000FE   783 _RE	=	0x00fe
                           0000FD   784 _SLAVE	=	0x00fd
                           0000FC   785 _FE	=	0x00fc
                           0000FB   786 _ERR	=	0x00fb
                           0000FA   787 _RX_BYTE	=	0x00fa
                           0000F9   788 _TX_BYTE	=	0x00f9
                           0000F8   789 _ACTIVE	=	0x00f8
                                    790 ;--------------------------------------------------------
                                    791 ; overlayable register banks
                                    792 ;--------------------------------------------------------
                                    793 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        794 	.ds 8
                                    795 ;--------------------------------------------------------
                                    796 ; internal ram data
                                    797 ;--------------------------------------------------------
                                    798 	.area DSEG    (DATA)
                                    799 ;--------------------------------------------------------
                                    800 ; overlayable items in internal ram 
                                    801 ;--------------------------------------------------------
                                    802 ;--------------------------------------------------------
                                    803 ; indirectly addressable internal ram data
                                    804 ;--------------------------------------------------------
                                    805 	.area ISEG    (DATA)
                                    806 ;--------------------------------------------------------
                                    807 ; absolute internal ram data
                                    808 ;--------------------------------------------------------
                                    809 	.area IABS    (ABS,DATA)
                                    810 	.area IABS    (ABS,DATA)
                                    811 ;--------------------------------------------------------
                                    812 ; bit data
                                    813 ;--------------------------------------------------------
                                    814 	.area BSEG    (BIT)
                                    815 ;--------------------------------------------------------
                                    816 ; paged external ram data
                                    817 ;--------------------------------------------------------
                                    818 	.area PSEG    (PAG,XDATA)
                                    819 ;--------------------------------------------------------
                                    820 ; external ram data
                                    821 ;--------------------------------------------------------
                                    822 	.area XSEG    (XDATA)
                           0061A6   823 _MONMUX	=	0x61a6
                           0061A6   824 _OPAMPMC	=	0x61a6
                           006230   825 _I2CCFG	=	0x6230
                           006231   826 _I2CSTAT	=	0x6231
                           006232   827 _I2CDATA	=	0x6232
                           006233   828 _I2CADDR	=	0x6233
                           006234   829 _I2CWC	=	0x6234
                           006235   830 _I2CIO	=	0x6235
                           006243   831 _OBSSEL0	=	0x6243
                           006244   832 _OBSSEL1	=	0x6244
                           006245   833 _OBSSEL2	=	0x6245
                           006246   834 _OBSSEL3	=	0x6246
                           006247   835 _OBSSEL4	=	0x6247
                           006248   836 _OBSSEL5	=	0x6248
                           006249   837 _CHVER	=	0x6249
                           00624A   838 _CHIPID	=	0x624a
                           00624B   839 _TESTREG0	=	0x624b
                           006260   840 _DBGDATA	=	0x6260
                           006262   841 _SRCRC	=	0x6262
                           006264   842 _BATTMON	=	0x6264
                           006265   843 _IVCTRL	=	0x6265
                           006270   844 _FCTL	=	0x6270
                           006271   845 _FADDRL	=	0x6271
                           006272   846 _FADDRH	=	0x6272
                           006273   847 _FWDATA	=	0x6273
                           006276   848 _CHIPINFO0	=	0x6276
                           006277   849 _CHIPINFO1	=	0x6277
                           006281   850 _IRCTL	=	0x6281
                           006290   851 _CLD	=	0x6290
                           0062A0   852 _XX_T1CCTL0	=	0x62a0
                           0062A1   853 _XX_T1CCTL1	=	0x62a1
                           0062A2   854 _XX_T1CCTL2	=	0x62a2
                           0062A3   855 _T1CCTL3	=	0x62a3
                           0062A4   856 _T1CCTL4	=	0x62a4
                           0062A6   857 _XX_T1CC0L	=	0x62a6
                           0062A7   858 _XX_T1CC0H	=	0x62a7
                           0062A8   859 _XX_T1CC1L	=	0x62a8
                           0062A9   860 _XX_T1CC1H	=	0x62a9
                           0062AA   861 _XX_T1CC2L	=	0x62aa
                           0062AB   862 _XX_T1CC2H	=	0x62ab
                           0062AC   863 _T1CC3L	=	0x62ac
                           0062AD   864 _T1CC3H	=	0x62ad
                           0062AE   865 _T1CC4L	=	0x62ae
                           0062AF   866 _T1CC4H	=	0x62af
                           0062B0   867 _STCC	=	0x62b0
                           0062B1   868 _STCS	=	0x62b1
                           0062B2   869 _STCV0	=	0x62b2
                           0062B3   870 _STCV1	=	0x62b3
                           0062B4   871 _STCV2	=	0x62b4
                           0062C0   872 _OPAMPC	=	0x62c0
                           0062C1   873 _OPAMPS	=	0x62c1
                           0062D0   874 _CMPCTL	=	0x62d0
                           006000   875 _RFCORE_RAM	=	0x6000
                           006000   876 _RXFIFO	=	0x6000
                           006080   877 _TXFIFO	=	0x6080
                           006100   878 _SRC_ADDR_TABLE	=	0x6100
                           006160   879 _SRCRESMASK0	=	0x6160
                           006161   880 _SRCRESMASK1	=	0x6161
                           006162   881 _SRCRESMASK2	=	0x6162
                           006163   882 _SRCRESINDEX	=	0x6163
                           006164   883 _SRCEXTPENDEN0	=	0x6164
                           006165   884 _SRCEXTPENDEN1	=	0x6165
                           006166   885 _SRCEXTPENDEN2	=	0x6166
                           006167   886 _SRCSHORTPENDEN0	=	0x6167
                           006168   887 _SRCSHORTPENDEN1	=	0x6168
                           006169   888 _SRCSHORTPENDEN2	=	0x6169
                           00616A   889 _EXT_ADDR0	=	0x616a
                           00616B   890 _EXT_ADDR1	=	0x616b
                           00616C   891 _EXT_ADDR2	=	0x616c
                           00616D   892 _EXT_ADDR3	=	0x616d
                           00616E   893 _EXT_ADDR4	=	0x616e
                           00616F   894 _EXT_ADDR5	=	0x616f
                           006170   895 _EXT_ADDR6	=	0x6170
                           006171   896 _EXT_ADDR7	=	0x6171
                           006172   897 _PAN_ID0	=	0x6172
                           006173   898 _PAN_ID1	=	0x6173
                           006174   899 _SHORT_ADDR0	=	0x6174
                           006175   900 _SHORT_ADDR1	=	0x6175
                           006180   901 _FRMFILT0	=	0x6180
                           006181   902 _FRMFILT1	=	0x6181
                           006182   903 _SRCMATCH	=	0x6182
                           006183   904 _SRCSHORTEN0	=	0x6183
                           006184   905 _SRCSHORTEN1	=	0x6184
                           006185   906 _SRCSHORTEN2	=	0x6185
                           006186   907 _SRCEXTEN0	=	0x6186
                           006187   908 _SRCEXTEN1	=	0x6187
                           006188   909 _SRCEXTEN2	=	0x6188
                           006189   910 _FRMCTRL0	=	0x6189
                           00618A   911 _FRMCTRL1	=	0x618a
                           00618B   912 _RXENABLE	=	0x618b
                           00618C   913 _RXMASKSET	=	0x618c
                           00618D   914 _RXMASKCLR	=	0x618d
                           00618E   915 _FREQTUNE	=	0x618e
                           00618F   916 _FREQCTRL	=	0x618f
                           006190   917 _TXPOWER	=	0x6190
                           006191   918 _TXCTRL	=	0x6191
                           006192   919 _FSMSTAT0	=	0x6192
                           006193   920 _FSMSTAT1	=	0x6193
                           006194   921 _FIFOPCTRL	=	0x6194
                           006195   922 _FSMCTRL	=	0x6195
                           006196   923 _CCACTRL0	=	0x6196
                           006197   924 _CCACTRL1	=	0x6197
                           006198   925 _RSSI	=	0x6198
                           006199   926 _RSSISTAT	=	0x6199
                           00619A   927 _RXFIRST	=	0x619a
                           00619B   928 _RXFIFOCNT	=	0x619b
                           00619C   929 _TXFIFOCNT	=	0x619c
                           00619D   930 _RXFIRST_PTR	=	0x619d
                           00619E   931 _RXLAST_PTR	=	0x619e
                           00619F   932 _RXP1_PTR	=	0x619f
                           0061A1   933 _TXFIRST_PTR	=	0x61a1
                           0061A2   934 _TXLAST_PTR	=	0x61a2
                           0061A3   935 _RFIRQM0	=	0x61a3
                           0061A4   936 _RFIRQM1	=	0x61a4
                           0061A5   937 _RFERRM	=	0x61a5
                           0061A7   938 _RFRND	=	0x61a7
                           0061A8   939 _MDMCTRL0	=	0x61a8
                           0061A9   940 _MDMCTRL1	=	0x61a9
                           0061AA   941 _FREQEST	=	0x61aa
                           0061AB   942 _RXCTRL	=	0x61ab
                           0061AC   943 _FSCTRL	=	0x61ac
                           0061AD   944 _FSCAL0	=	0x61ad
                           0061AE   945 _FSCAL1	=	0x61ae
                           0061AF   946 _FSCAL2	=	0x61af
                           0061B0   947 _FSCAL3	=	0x61b0
                           0061B1   948 _AGCCTRL0	=	0x61b1
                           0061B2   949 _AGCCTRL1	=	0x61b2
                           0061B3   950 _AGCCTRL2	=	0x61b3
                           0061B4   951 _AGCCTRL3	=	0x61b4
                           0061B5   952 _ADCTEST0	=	0x61b5
                           0061B6   953 _ADCTEST1	=	0x61b6
                           0061B7   954 _ADCTEST2	=	0x61b7
                           0061B8   955 _MDMTEST0	=	0x61b8
                           0061B9   956 _MDMTEST1	=	0x61b9
                           0061BA   957 _DACTEST0	=	0x61ba
                           0061BB   958 _DACTEST1	=	0x61bb
                           0061BC   959 _DACTEST2	=	0x61bc
                           0061BD   960 _ATEST	=	0x61bd
                           0061BE   961 _PTEST0	=	0x61be
                           0061BF   962 _PTEST1	=	0x61bf
                           0061FA   963 _TXFILTCFG	=	0x61fa
                           0061EB   964 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   965 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   966 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   967 _CSPPROG0	=	0x61c0
                           0061C1   968 _CSPPROG1	=	0x61c1
                           0061C2   969 _CSPPROG2	=	0x61c2
                           0061C3   970 _CSPPROG3	=	0x61c3
                           0061C4   971 _CSPPROG4	=	0x61c4
                           0061C5   972 _CSPPROG5	=	0x61c5
                           0061C6   973 _CSPPROG6	=	0x61c6
                           0061C7   974 _CSPPROG7	=	0x61c7
                           0061C8   975 _CSPPROG8	=	0x61c8
                           0061C9   976 _CSPPROG9	=	0x61c9
                           0061CA   977 _CSPPROG10	=	0x61ca
                           0061CB   978 _CSPPROG11	=	0x61cb
                           0061CC   979 _CSPPROG12	=	0x61cc
                           0061CD   980 _CSPPROG13	=	0x61cd
                           0061CE   981 _CSPPROG14	=	0x61ce
                           0061CF   982 _CSPPROG15	=	0x61cf
                           0061D0   983 _CSPPROG16	=	0x61d0
                           0061D1   984 _CSPPROG17	=	0x61d1
                           0061D2   985 _CSPPROG18	=	0x61d2
                           0061D3   986 _CSPPROG19	=	0x61d3
                           0061D4   987 _CSPPROG20	=	0x61d4
                           0061D5   988 _CSPPROG21	=	0x61d5
                           0061D6   989 _CSPPROG22	=	0x61d6
                           0061D7   990 _CSPPROG23	=	0x61d7
                           0061E0   991 _CSPCTRL	=	0x61e0
                           0061E1   992 _CSPSTAT	=	0x61e1
                           0061E2   993 _CSPX	=	0x61e2
                           0061E3   994 _CSPY	=	0x61e3
                           0061E4   995 _CSPZ	=	0x61e4
                           0061E5   996 _CSPT	=	0x61e5
                           006200   997 _USBADDR	=	0x6200
                           006201   998 _USBPOW	=	0x6201
                           006202   999 _USBIIF	=	0x6202
                           006204  1000 _USBOIF	=	0x6204
                           006206  1001 _USBCIF	=	0x6206
                           006207  1002 _USBIIE	=	0x6207
                           006209  1003 _USBOIE	=	0x6209
                           00620B  1004 _USBCIE	=	0x620b
                           00620C  1005 _USBFRML	=	0x620c
                           00620D  1006 _USBFRMH	=	0x620d
                           00620E  1007 _USBINDEX	=	0x620e
                           00620F  1008 _USBCTRL	=	0x620f
                           006210  1009 _USBMAXI	=	0x6210
                           006211  1010 _USBCS0	=	0x6211
                           006211  1011 _USBCSIL	=	0x6211
                           006212  1012 _USBCSIH	=	0x6212
                           006213  1013 _USBMAXO	=	0x6213
                           006214  1014 _USBCSOL	=	0x6214
                           006215  1015 _USBCSOH	=	0x6215
                           006216  1016 _USBCNT0	=	0x6216
                           006216  1017 _USBCNTL	=	0x6216
                           006217  1018 _USBCNTH	=	0x6217
                           006220  1019 _USBF0	=	0x6220
                           006222  1020 _USBF1	=	0x6222
                           006224  1021 _USBF2	=	0x6224
                           006226  1022 _USBF3	=	0x6226
                           006228  1023 _USBF4	=	0x6228
                           00622A  1024 _USBF5	=	0x622a
                           007080  1025 _X_P0	=	0x7080
                           007086  1026 _X_U0CSR	=	0x7086
                           007089  1027 _X_P0IFG	=	0x7089
                           00708A  1028 _X_P1IFG	=	0x708a
                           00708B  1029 _X_P2IFG	=	0x708b
                           00708C  1030 _X_PICTL	=	0x708c
                           00708D  1031 _X_P1IEN	=	0x708d
                           00708F  1032 _X_P0INP	=	0x708f
                           007090  1033 _X_P1	=	0x7090
                           007091  1034 _X_RFIRQF1	=	0x7091
                           007093  1035 _X_MPAGE	=	0x7093
                           007093  1036 _X__XPAGE	=	0x7093
                           007094  1037 _X_T2CTRL	=	0x7094
                           007095  1038 _X_ST0	=	0x7095
                           007096  1039 _X_ST1	=	0x7096
                           007097  1040 _X_ST2	=	0x7097
                           00709C  1041 _X_T2EVTCFG	=	0x709c
                           00709D  1042 _X_SLEEPSTA	=	0x709d
                           00709E  1043 _X_CLKCONSTA	=	0x709e
                           00709F  1044 _X_FMAP	=	0x709f
                           00709F  1045 _X_PSBANK	=	0x709f
                           0070A0  1046 _X_P2	=	0x70a0
                           0070A1  1047 _X_T2IRQF	=	0x70a1
                           0070A2  1048 _X_T2M0	=	0x70a2
                           0070A3  1049 _X_T2M1	=	0x70a3
                           0070A4  1050 _X_T2MOVF0	=	0x70a4
                           0070A5  1051 _X_T2MOVF1	=	0x70a5
                           0070A6  1052 _X_T2MOVF2	=	0x70a6
                           0070A7  1053 _X_T2IRQM	=	0x70a7
                           0070AB  1054 _X_P0IEN	=	0x70ab
                           0070AC  1055 _X_P2IEN	=	0x70ac
                           0070AD  1056 _X_STLOAD	=	0x70ad
                           0070AE  1057 _X_PMUX	=	0x70ae
                           0070AF  1058 _X_T1STAT	=	0x70af
                           0070B1  1059 _X_ENCDI	=	0x70b1
                           0070B2  1060 _X_ENCDO	=	0x70b2
                           0070B3  1061 _X_ENCCS	=	0x70b3
                           0070B4  1062 _X_ADCCON1	=	0x70b4
                           0070B5  1063 _X_ADCCON2	=	0x70b5
                           0070B6  1064 _X_ADCCON3	=	0x70b6
                           0070BA  1065 _X_ADCL	=	0x70ba
                           0070BB  1066 _X_ADCH	=	0x70bb
                           0070BC  1067 _X_RNDL	=	0x70bc
                           0070BD  1068 _X_RNDH	=	0x70bd
                           0070BE  1069 _X_SLEEPCMD	=	0x70be
                           0070BF  1070 _X_RFERRF	=	0x70bf
                           0070C1  1071 _X_U0DBUF	=	0x70c1
                           0070C2  1072 _X_U0BAUD	=	0x70c2
                           0070C3  1073 _X_T2MSEL	=	0x70c3
                           0070C4  1074 _X_U0UCR	=	0x70c4
                           0070C5  1075 _X_U0GCR	=	0x70c5
                           0070C6  1076 _X_CLKCONCMD	=	0x70c6
                           0070C7  1077 _X_MEMCTR	=	0x70c7
                           0070C9  1078 _X_WDCTL	=	0x70c9
                           0070CA  1079 _X_T3CNT	=	0x70ca
                           0070CB  1080 _X_T3CTL	=	0x70cb
                           0070CC  1081 _X_T3CCTL0	=	0x70cc
                           0070CD  1082 _X_T3CC0	=	0x70cd
                           0070CE  1083 _X_T3CCTL1	=	0x70ce
                           0070CF  1084 _X_T3CC1	=	0x70cf
                           0070D1  1085 _X_DMAIRQ	=	0x70d1
                           0070D2  1086 _X_DMA1CFGL	=	0x70d2
                           0070D3  1087 _X_DMA1CFGH	=	0x70d3
                           0070D4  1088 _X_DMA0CFGL	=	0x70d4
                           0070D5  1089 _X_DMA0CFGH	=	0x70d5
                           0070D6  1090 _X_DMAARM	=	0x70d6
                           0070D7  1091 _X_DMAREQ	=	0x70d7
                           0070D8  1092 _X_TIMIF	=	0x70d8
                           0070D9  1093 _X_RFD	=	0x70d9
                           0070DA  1094 _X_T1CC0L	=	0x70da
                           0070DB  1095 _X_T1CC0H	=	0x70db
                           0070DC  1096 _X_T1CC1L	=	0x70dc
                           0070DD  1097 _X_T1CC1H	=	0x70dd
                           0070DE  1098 _X_T1CC2L	=	0x70de
                           0070DF  1099 _X_T1CC2H	=	0x70df
                           0070E1  1100 _X_RFST	=	0x70e1
                           0070E2  1101 _X_T1CNTL	=	0x70e2
                           0070E3  1102 _X_T1CNTH	=	0x70e3
                           0070E4  1103 _X_T1CTL	=	0x70e4
                           0070E5  1104 _X_T1CCTL0	=	0x70e5
                           0070E6  1105 _X_T1CCTL1	=	0x70e6
                           0070E7  1106 _X_T1CCTL2	=	0x70e7
                           0070E9  1107 _X_RFIRQF0	=	0x70e9
                           0070EA  1108 _X_T4CNT	=	0x70ea
                           0070EB  1109 _X_T4CTL	=	0x70eb
                           0070EC  1110 _X_T4CCTL0	=	0x70ec
                           0070ED  1111 _X_T4CC0	=	0x70ed
                           0070EE  1112 _X_T4CCTL1	=	0x70ee
                           0070EF  1113 _X_T4CC1	=	0x70ef
                           0070F1  1114 _X_PERCFG	=	0x70f1
                           0070F2  1115 _X_APCFG	=	0x70f2
                           0070F3  1116 _X_P0SEL	=	0x70f3
                           0070F4  1117 _X_P1SEL	=	0x70f4
                           0070F5  1118 _X_P2SEL	=	0x70f5
                           0070F6  1119 _X_P1INP	=	0x70f6
                           0070F7  1120 _X_P2INP	=	0x70f7
                           0070F8  1121 _X_U1CSR	=	0x70f8
                           0070F9  1122 _X_U1DBUF	=	0x70f9
                           0070FA  1123 _X_U1BAUD	=	0x70fa
                           0070FB  1124 _X_U1UCR	=	0x70fb
                           0070FC  1125 _X_U1GCR	=	0x70fc
                           0070FD  1126 _X_P0DIR	=	0x70fd
                           0070FE  1127 _X_P1DIR	=	0x70fe
                           0070FF  1128 _X_P2DIR	=	0x70ff
                           007800  1129 _X_INFOPAGE	=	0x7800
                           00780C  1130 _X_IEEE_ADDR	=	0x780c
                                   1131 ;--------------------------------------------------------
                                   1132 ; absolute external ram data
                                   1133 ;--------------------------------------------------------
                                   1134 	.area XABS    (ABS,XDATA)
                                   1135 ;--------------------------------------------------------
                                   1136 ; external initialized ram data
                                   1137 ;--------------------------------------------------------
                                   1138 	.area XISEG   (XDATA)
                                   1139 	.area HOME    (CODE)
                                   1140 	.area GSINIT0 (CODE)
                                   1141 	.area GSINIT1 (CODE)
                                   1142 	.area GSINIT2 (CODE)
                                   1143 	.area GSINIT3 (CODE)
                                   1144 	.area GSINIT4 (CODE)
                                   1145 	.area GSINIT5 (CODE)
                                   1146 	.area GSINIT  (CODE)
                                   1147 	.area GSFINAL (CODE)
                                   1148 	.area CSEG    (CODE)
                                   1149 ;--------------------------------------------------------
                                   1150 ; global & static initialisations
                                   1151 ;--------------------------------------------------------
                                   1152 	.area HOME    (CODE)
                                   1153 	.area GSINIT  (CODE)
                                   1154 	.area GSFINAL (CODE)
                                   1155 	.area GSINIT  (CODE)
                                   1156 ;--------------------------------------------------------
                                   1157 ; Home
                                   1158 ;--------------------------------------------------------
                                   1159 	.area HOME    (CODE)
                                   1160 	.area HOME    (CODE)
                                   1161 ;--------------------------------------------------------
                                   1162 ; code
                                   1163 ;--------------------------------------------------------
                                   1164 	.area CSEG    (CODE)
                                   1165 ;------------------------------------------------------------
                                   1166 ;Allocation info for local variables in function 'read_new_datapacket'
                                   1167 ;------------------------------------------------------------
                                   1168 ;c                         Allocated to stack - sp -7
                                   1169 ;len                       Allocated to registers r3 r4 
                                   1170 ;sloc0                     Allocated to stack - sp -4
                                   1171 ;sloc1                     Allocated to stack - sp +0
                                   1172 ;sloc2                     Allocated to stack - sp -2
                                   1173 ;------------------------------------------------------------
                                   1174 ;	/home/user/contiki/core/net/rime/rudolph0.c:75: read_new_datapacket(struct rudolph0_conn *c)
                                   1175 ;	-----------------------------------------
                                   1176 ;	 function read_new_datapacket
                                   1177 ;	-----------------------------------------
      000000                       1178 _read_new_datapacket:
                           000007  1179 	ar7 = 0x07
                           000006  1180 	ar6 = 0x06
                           000005  1181 	ar5 = 0x05
                           000004  1182 	ar4 = 0x04
                           000003  1183 	ar3 = 0x03
                           000002  1184 	ar2 = 0x02
                           000001  1185 	ar1 = 0x01
                           000000  1186 	ar0 = 0x00
      000000 C0 82            [24] 1187 	push	dpl
      000002 C0 83            [24] 1188 	push	dph
      000004 C0 F0            [24] 1189 	push	b
      000006 E5 81            [12] 1190 	mov	a,sp
      000008 24 05            [12] 1191 	add	a,#0x05
      00000A F5 81            [12] 1192 	mov	sp,a
                                   1193 ;	/home/user/contiki/core/net/rime/rudolph0.c:77: int len = 0;
                                   1194 ;	/home/user/contiki/core/net/rime/rudolph0.c:79: if(c->cb->read_chunk) {
      00000C E4               [12] 1195 	clr	a
      00000D FB               [12] 1196 	mov	r3,a
      00000E FC               [12] 1197 	mov	r4,a
      00000F E5 81            [12] 1198 	mov	a,sp
      000011 24 F9            [12] 1199 	add	a,#0xf9
      000013 F8               [12] 1200 	mov	r0,a
      000014 74 52            [12] 1201 	mov	a,#0x52
      000016 26               [12] 1202 	add	a,@r0
      000017 FA               [12] 1203 	mov	r2,a
      000018 E4               [12] 1204 	clr	a
      000019 08               [12] 1205 	inc	r0
      00001A 36               [12] 1206 	addc	a,@r0
      00001B FE               [12] 1207 	mov	r6,a
      00001C 08               [12] 1208 	inc	r0
      00001D 86 07            [24] 1209 	mov	ar7,@r0
      00001F 8A 82            [24] 1210 	mov	dpl,r2
      000021 8E 83            [24] 1211 	mov	dph,r6
      000023 8F F0            [24] 1212 	mov	b,r7
      000025 12r00r00         [24] 1213 	lcall	__gptrget
      000028 FA               [12] 1214 	mov	r2,a
      000029 A3               [24] 1215 	inc	dptr
      00002A 12r00r00         [24] 1216 	lcall	__gptrget
      00002D FE               [12] 1217 	mov	r6,a
      00002E A3               [24] 1218 	inc	dptr
      00002F 12r00r00         [24] 1219 	lcall	__gptrget
      000032 FF               [12] 1220 	mov	r7,a
      000033 74 02            [12] 1221 	mov	a,#0x02
      000035 2A               [12] 1222 	add	a,r2
      000036 FA               [12] 1223 	mov	r2,a
      000037 E4               [12] 1224 	clr	a
      000038 3E               [12] 1225 	addc	a,r6
      000039 FE               [12] 1226 	mov	r6,a
      00003A 8A 82            [24] 1227 	mov	dpl,r2
      00003C 8E 83            [24] 1228 	mov	dph,r6
      00003E 8F F0            [24] 1229 	mov	b,r7
      000040 E5 81            [12] 1230 	mov	a,sp
      000042 24 FC            [12] 1231 	add	a,#0xfc
      000044 F8               [12] 1232 	mov	r0,a
      000045 12r00r00         [24] 1233 	lcall	__gptrget
      000048 F6               [12] 1234 	mov	@r0,a
      000049 A3               [24] 1235 	inc	dptr
      00004A 12r00r00         [24] 1236 	lcall	__gptrget
      00004D 08               [12] 1237 	inc	r0
      00004E F6               [12] 1238 	mov	@r0,a
      00004F E5 81            [12] 1239 	mov	a,sp
      000051 24 FC            [12] 1240 	add	a,#0xfc
      000053 F8               [12] 1241 	mov	r0,a
      000054 E6               [12] 1242 	mov	a,@r0
      000055 08               [12] 1243 	inc	r0
      000056 46               [12] 1244 	orl	a,@r0
      000057 70 03            [24] 1245 	jnz	00108$
      000059 02r00rE8         [24] 1246 	ljmp	00102$
      00005C                       1247 00108$:
                                   1248 ;	/home/user/contiki/core/net/rime/rudolph0.c:81: c->current.data, RUDOLPH0_DATASIZE);
      00005C E5 81            [12] 1249 	mov	a,sp
      00005E 24 F9            [12] 1250 	add	a,#0xf9
      000060 F8               [12] 1251 	mov	r0,a
      000061 74 58            [12] 1252 	mov	a,#0x58
      000063 26               [12] 1253 	add	a,@r0
      000064 FD               [12] 1254 	mov	r5,a
      000065 E4               [12] 1255 	clr	a
      000066 08               [12] 1256 	inc	r0
      000067 36               [12] 1257 	addc	a,@r0
      000068 FE               [12] 1258 	mov	r6,a
      000069 08               [12] 1259 	inc	r0
      00006A 86 07            [24] 1260 	mov	ar7,@r0
      00006C A8 81            [24] 1261 	mov	r0,sp
      00006E 18               [12] 1262 	dec	r0
      00006F 18               [12] 1263 	dec	r0
      000070 74 05            [12] 1264 	mov	a,#0x05
      000072 2D               [12] 1265 	add	a,r5
      000073 F6               [12] 1266 	mov	@r0,a
      000074 E4               [12] 1267 	clr	a
      000075 3E               [12] 1268 	addc	a,r6
      000076 08               [12] 1269 	inc	r0
      000077 F6               [12] 1270 	mov	@r0,a
      000078 08               [12] 1271 	inc	r0
      000079 A6 07            [24] 1272 	mov	@r0,ar7
                                   1273 ;	/home/user/contiki/core/net/rime/rudolph0.c:80: len = c->cb->read_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
      00007B 74 02            [12] 1274 	mov	a,#0x02
      00007D 2D               [12] 1275 	add	a,r5
      00007E FA               [12] 1276 	mov	r2,a
      00007F E4               [12] 1277 	clr	a
      000080 3E               [12] 1278 	addc	a,r6
      000081 FE               [12] 1279 	mov	r6,a
      000082 8A 82            [24] 1280 	mov	dpl,r2
      000084 8E 83            [24] 1281 	mov	dph,r6
      000086 8F F0            [24] 1282 	mov	b,r7
      000088 12r00r00         [24] 1283 	lcall	__gptrget
      00008B FA               [12] 1284 	mov	r2,a
      00008C A3               [24] 1285 	inc	dptr
      00008D 12r00r00         [24] 1286 	lcall	__gptrget
      000090 54 03            [12] 1287 	anl	a,#0x03
      000092 A2 E0            [12] 1288 	mov	c,acc.0
      000094 CA               [12] 1289 	xch	a,r2
      000095 13               [12] 1290 	rrc	a
      000096 CA               [12] 1291 	xch	a,r2
      000097 13               [12] 1292 	rrc	a
      000098 A2 E0            [12] 1293 	mov	c,acc.0
      00009A CA               [12] 1294 	xch	a,r2
      00009B 13               [12] 1295 	rrc	a
      00009C CA               [12] 1296 	xch	a,r2
      00009D 13               [12] 1297 	rrc	a
      00009E CA               [12] 1298 	xch	a,r2
      00009F FE               [12] 1299 	mov	r6,a
      0000A0 74 40            [12] 1300 	mov	a,#0x40
      0000A2 C0 E0            [24] 1301 	push	acc
      0000A4 E4               [12] 1302 	clr	a
      0000A5 C0 E0            [24] 1303 	push	acc
      0000A7 E5 81            [12] 1304 	mov	a,sp
      0000A9 24 FC            [12] 1305 	add	a,#0xfc
      0000AB F8               [12] 1306 	mov	r0,a
      0000AC E6               [12] 1307 	mov	a,@r0
      0000AD C0 E0            [24] 1308 	push	acc
      0000AF 08               [12] 1309 	inc	r0
      0000B0 E6               [12] 1310 	mov	a,@r0
      0000B1 C0 E0            [24] 1311 	push	acc
      0000B3 08               [12] 1312 	inc	r0
      0000B4 E6               [12] 1313 	mov	a,@r0
      0000B5 C0 E0            [24] 1314 	push	acc
      0000B7 C0 02            [24] 1315 	push	ar2
      0000B9 C0 06            [24] 1316 	push	ar6
      0000BB 12r00rC0         [24] 1317 	lcall	00109$
      0000BE 80 1A            [24] 1318 	sjmp	00110$
      0000C0                       1319 00109$:
      0000C0 E5 81            [12] 1320 	mov	a,sp
      0000C2 24 F3            [12] 1321 	add	a,#0xf3
      0000C4 F8               [12] 1322 	mov	r0,a
      0000C5 E6               [12] 1323 	mov	a,@r0
      0000C6 C0 E0            [24] 1324 	push	acc
      0000C8 08               [12] 1325 	inc	r0
      0000C9 E6               [12] 1326 	mov	a,@r0
      0000CA C0 E0            [24] 1327 	push	acc
      0000CC E5 81            [12] 1328 	mov	a,sp
      0000CE 24 EE            [12] 1329 	add	a,#0xee
      0000D0 F8               [12] 1330 	mov	r0,a
      0000D1 86 82            [24] 1331 	mov	dpl,@r0
      0000D3 08               [12] 1332 	inc	r0
      0000D4 86 83            [24] 1333 	mov	dph,@r0
      0000D6 08               [12] 1334 	inc	r0
      0000D7 86 F0            [24] 1335 	mov	b,@r0
      0000D9 22               [24] 1336 	ret
      0000DA                       1337 00110$:
      0000DA AE 82            [24] 1338 	mov	r6,dpl
      0000DC AF 83            [24] 1339 	mov	r7,dph
      0000DE E5 81            [12] 1340 	mov	a,sp
      0000E0 24 F9            [12] 1341 	add	a,#0xf9
      0000E2 F5 81            [12] 1342 	mov	sp,a
      0000E4 8E 03            [24] 1343 	mov	ar3,r6
      0000E6 8F 04            [24] 1344 	mov	ar4,r7
      0000E8                       1345 00102$:
                                   1346 ;	/home/user/contiki/core/net/rime/rudolph0.c:83: c->current.datalen = len;
      0000E8 E5 81            [12] 1347 	mov	a,sp
      0000EA 24 F9            [12] 1348 	add	a,#0xf9
      0000EC F8               [12] 1349 	mov	r0,a
      0000ED 74 58            [12] 1350 	mov	a,#0x58
      0000EF 26               [12] 1351 	add	a,@r0
      0000F0 FD               [12] 1352 	mov	r5,a
      0000F1 E4               [12] 1353 	clr	a
      0000F2 08               [12] 1354 	inc	r0
      0000F3 36               [12] 1355 	addc	a,@r0
      0000F4 FE               [12] 1356 	mov	r6,a
      0000F5 08               [12] 1357 	inc	r0
      0000F6 86 07            [24] 1358 	mov	ar7,@r0
      0000F8 74 04            [12] 1359 	mov	a,#0x04
      0000FA 2D               [12] 1360 	add	a,r5
      0000FB FD               [12] 1361 	mov	r5,a
      0000FC E4               [12] 1362 	clr	a
      0000FD 3E               [12] 1363 	addc	a,r6
      0000FE FE               [12] 1364 	mov	r6,a
      0000FF 8D 82            [24] 1365 	mov	dpl,r5
      000101 8E 83            [24] 1366 	mov	dph,r6
      000103 8F F0            [24] 1367 	mov	b,r7
      000105 EB               [12] 1368 	mov	a,r3
      000106 12r00r00         [24] 1369 	lcall	__gptrput
      000109 E5 81            [12] 1370 	mov	a,sp
      00010B 24 F8            [12] 1371 	add	a,#0xF8
      00010D F5 81            [12] 1372 	mov	sp,a
      00010F 22               [24] 1373 	ret
                                   1374 ;------------------------------------------------------------
                                   1375 ;Allocation info for local variables in function 'send_nack'
                                   1376 ;------------------------------------------------------------
                                   1377 ;c                         Allocated to stack - sp -8
                                   1378 ;hdr                       Allocated to stack - sp -2
                                   1379 ;sloc0                     Allocated to stack - sp -5
                                   1380 ;------------------------------------------------------------
                                   1381 ;	/home/user/contiki/core/net/rime/rudolph0.c:89: send_nack(struct rudolph0_conn *c)
                                   1382 ;	-----------------------------------------
                                   1383 ;	 function send_nack
                                   1384 ;	-----------------------------------------
      000110                       1385 _send_nack:
      000110 C0 82            [24] 1386 	push	dpl
      000112 C0 83            [24] 1387 	push	dph
      000114 C0 F0            [24] 1388 	push	b
      000116 E5 81            [12] 1389 	mov	a,sp
      000118 24 06            [12] 1390 	add	a,#0x06
      00011A F5 81            [12] 1391 	mov	sp,a
                                   1392 ;	/home/user/contiki/core/net/rime/rudolph0.c:92: packetbuf_clear();
      00011C 12r00r00         [24] 1393 	lcall	_packetbuf_clear
                                   1394 ;	/home/user/contiki/core/net/rime/rudolph0.c:93: packetbuf_hdralloc(sizeof(struct rudolph0_hdr));
      00011F 90 00 04         [24] 1395 	mov	dptr,#0x0004
      000122 12r00r00         [24] 1396 	lcall	_packetbuf_hdralloc
                                   1397 ;	/home/user/contiki/core/net/rime/rudolph0.c:94: hdr = packetbuf_hdrptr();
      000125 12r00r00         [24] 1398 	lcall	_packetbuf_hdrptr
      000128 AA 82            [24] 1399 	mov	r2,dpl
      00012A AB 83            [24] 1400 	mov	r3,dph
      00012C AC F0            [24] 1401 	mov	r4,b
      00012E A8 81            [24] 1402 	mov	r0,sp
      000130 18               [12] 1403 	dec	r0
      000131 18               [12] 1404 	dec	r0
      000132 A6 02            [24] 1405 	mov	@r0,ar2
      000134 08               [12] 1406 	inc	r0
      000135 A6 03            [24] 1407 	mov	@r0,ar3
      000137 08               [12] 1408 	inc	r0
      000138 A6 04            [24] 1409 	mov	@r0,ar4
                                   1410 ;	/home/user/contiki/core/net/rime/rudolph0.c:96: hdr->type = TYPE_NACK;
      00013A A8 81            [24] 1411 	mov	r0,sp
      00013C 18               [12] 1412 	dec	r0
      00013D 18               [12] 1413 	dec	r0
      00013E 86 82            [24] 1414 	mov	dpl,@r0
      000140 08               [12] 1415 	inc	r0
      000141 86 83            [24] 1416 	mov	dph,@r0
      000143 08               [12] 1417 	inc	r0
      000144 86 F0            [24] 1418 	mov	b,@r0
      000146 74 01            [12] 1419 	mov	a,#0x01
      000148 12r00r00         [24] 1420 	lcall	__gptrput
                                   1421 ;	/home/user/contiki/core/net/rime/rudolph0.c:97: hdr->version = c->current.h.version;
      00014B A8 81            [24] 1422 	mov	r0,sp
      00014D 18               [12] 1423 	dec	r0
      00014E 18               [12] 1424 	dec	r0
      00014F E5 81            [12] 1425 	mov	a,sp
      000151 24 FB            [12] 1426 	add	a,#0xfb
      000153 F9               [12] 1427 	mov	r1,a
      000154 74 01            [12] 1428 	mov	a,#0x01
      000156 26               [12] 1429 	add	a,@r0
      000157 F7               [12] 1430 	mov	@r1,a
      000158 E4               [12] 1431 	clr	a
      000159 08               [12] 1432 	inc	r0
      00015A 36               [12] 1433 	addc	a,@r0
      00015B 09               [12] 1434 	inc	r1
      00015C F7               [12] 1435 	mov	@r1,a
      00015D 08               [12] 1436 	inc	r0
      00015E 09               [12] 1437 	inc	r1
      00015F E6               [12] 1438 	mov	a,@r0
      000160 F7               [12] 1439 	mov	@r1,a
      000161 E5 81            [12] 1440 	mov	a,sp
      000163 24 F8            [12] 1441 	add	a,#0xf8
      000165 F8               [12] 1442 	mov	r0,a
      000166 74 58            [12] 1443 	mov	a,#0x58
      000168 26               [12] 1444 	add	a,@r0
      000169 FA               [12] 1445 	mov	r2,a
      00016A E4               [12] 1446 	clr	a
      00016B 08               [12] 1447 	inc	r0
      00016C 36               [12] 1448 	addc	a,@r0
      00016D FB               [12] 1449 	mov	r3,a
      00016E 08               [12] 1450 	inc	r0
      00016F 86 04            [24] 1451 	mov	ar4,@r0
      000171 74 01            [12] 1452 	mov	a,#0x01
      000173 2A               [12] 1453 	add	a,r2
      000174 FD               [12] 1454 	mov	r5,a
      000175 E4               [12] 1455 	clr	a
      000176 3B               [12] 1456 	addc	a,r3
      000177 FE               [12] 1457 	mov	r6,a
      000178 8C 07            [24] 1458 	mov	ar7,r4
      00017A 8D 82            [24] 1459 	mov	dpl,r5
      00017C 8E 83            [24] 1460 	mov	dph,r6
      00017E 8F F0            [24] 1461 	mov	b,r7
      000180 12r00r00         [24] 1462 	lcall	__gptrget
      000183 FD               [12] 1463 	mov	r5,a
      000184 E5 81            [12] 1464 	mov	a,sp
      000186 24 FB            [12] 1465 	add	a,#0xfb
      000188 F8               [12] 1466 	mov	r0,a
      000189 86 82            [24] 1467 	mov	dpl,@r0
      00018B 08               [12] 1468 	inc	r0
      00018C 86 83            [24] 1469 	mov	dph,@r0
      00018E 08               [12] 1470 	inc	r0
      00018F 86 F0            [24] 1471 	mov	b,@r0
      000191 ED               [12] 1472 	mov	a,r5
      000192 12r00r00         [24] 1473 	lcall	__gptrput
                                   1474 ;	/home/user/contiki/core/net/rime/rudolph0.c:98: hdr->chunk = c->current.h.chunk;
      000195 A8 81            [24] 1475 	mov	r0,sp
      000197 18               [12] 1476 	dec	r0
      000198 18               [12] 1477 	dec	r0
      000199 74 02            [12] 1478 	mov	a,#0x02
      00019B 26               [12] 1479 	add	a,@r0
      00019C FD               [12] 1480 	mov	r5,a
      00019D E4               [12] 1481 	clr	a
      00019E 08               [12] 1482 	inc	r0
      00019F 36               [12] 1483 	addc	a,@r0
      0001A0 FE               [12] 1484 	mov	r6,a
      0001A1 08               [12] 1485 	inc	r0
      0001A2 86 07            [24] 1486 	mov	ar7,@r0
      0001A4 74 02            [12] 1487 	mov	a,#0x02
      0001A6 2A               [12] 1488 	add	a,r2
      0001A7 FA               [12] 1489 	mov	r2,a
      0001A8 E4               [12] 1490 	clr	a
      0001A9 3B               [12] 1491 	addc	a,r3
      0001AA FB               [12] 1492 	mov	r3,a
      0001AB 8A 82            [24] 1493 	mov	dpl,r2
      0001AD 8B 83            [24] 1494 	mov	dph,r3
      0001AF 8C F0            [24] 1495 	mov	b,r4
      0001B1 12r00r00         [24] 1496 	lcall	__gptrget
      0001B4 FA               [12] 1497 	mov	r2,a
      0001B5 A3               [24] 1498 	inc	dptr
      0001B6 12r00r00         [24] 1499 	lcall	__gptrget
      0001B9 FB               [12] 1500 	mov	r3,a
      0001BA 8D 82            [24] 1501 	mov	dpl,r5
      0001BC 8E 83            [24] 1502 	mov	dph,r6
      0001BE 8F F0            [24] 1503 	mov	b,r7
      0001C0 EA               [12] 1504 	mov	a,r2
      0001C1 12r00r00         [24] 1505 	lcall	__gptrput
      0001C4 A3               [24] 1506 	inc	dptr
      0001C5 EB               [12] 1507 	mov	a,r3
      0001C6 12r00r00         [24] 1508 	lcall	__gptrput
                                   1509 ;	/home/user/contiki/core/net/rime/rudolph0.c:101: polite_send(&c->nackc, c->send_interval / 2, sizeof(struct rudolph0_hdr));
      0001C9 E5 81            [12] 1510 	mov	a,sp
      0001CB 24 F8            [12] 1511 	add	a,#0xf8
      0001CD F8               [12] 1512 	mov	r0,a
      0001CE 74 55            [12] 1513 	mov	a,#0x55
      0001D0 26               [12] 1514 	add	a,@r0
      0001D1 FD               [12] 1515 	mov	r5,a
      0001D2 E4               [12] 1516 	clr	a
      0001D3 08               [12] 1517 	inc	r0
      0001D4 36               [12] 1518 	addc	a,@r0
      0001D5 FE               [12] 1519 	mov	r6,a
      0001D6 08               [12] 1520 	inc	r0
      0001D7 86 07            [24] 1521 	mov	ar7,@r0
      0001D9 8D 82            [24] 1522 	mov	dpl,r5
      0001DB 8E 83            [24] 1523 	mov	dph,r6
      0001DD 8F F0            [24] 1524 	mov	b,r7
      0001DF 12r00r00         [24] 1525 	lcall	__gptrget
      0001E2 FD               [12] 1526 	mov	r5,a
      0001E3 A3               [24] 1527 	inc	dptr
      0001E4 12r00r00         [24] 1528 	lcall	__gptrget
      0001E7 C3               [12] 1529 	clr	c
      0001E8 13               [12] 1530 	rrc	a
      0001E9 CD               [12] 1531 	xch	a,r5
      0001EA 13               [12] 1532 	rrc	a
      0001EB CD               [12] 1533 	xch	a,r5
      0001EC FE               [12] 1534 	mov	r6,a
      0001ED E5 81            [12] 1535 	mov	a,sp
      0001EF 24 F8            [12] 1536 	add	a,#0xf8
      0001F1 F8               [12] 1537 	mov	r0,a
      0001F2 74 2A            [12] 1538 	mov	a,#0x2A
      0001F4 26               [12] 1539 	add	a,@r0
      0001F5 FB               [12] 1540 	mov	r3,a
      0001F6 E4               [12] 1541 	clr	a
      0001F7 08               [12] 1542 	inc	r0
      0001F8 36               [12] 1543 	addc	a,@r0
      0001F9 FC               [12] 1544 	mov	r4,a
      0001FA 08               [12] 1545 	inc	r0
      0001FB 86 07            [24] 1546 	mov	ar7,@r0
      0001FD 74 04            [12] 1547 	mov	a,#0x04
      0001FF C0 E0            [24] 1548 	push	acc
      000201 C0 05            [24] 1549 	push	ar5
      000203 C0 06            [24] 1550 	push	ar6
      000205 8B 82            [24] 1551 	mov	dpl,r3
      000207 8C 83            [24] 1552 	mov	dph,r4
      000209 8F F0            [24] 1553 	mov	b,r7
      00020B 12r00r00         [24] 1554 	lcall	_polite_send
      00020E 15 81            [12] 1555 	dec	sp
      000210 15 81            [12] 1556 	dec	sp
      000212 15 81            [12] 1557 	dec	sp
      000214 E5 81            [12] 1558 	mov	a,sp
      000216 24 F7            [12] 1559 	add	a,#0xF7
      000218 F5 81            [12] 1560 	mov	sp,a
      00021A 22               [24] 1561 	ret
                                   1562 ;------------------------------------------------------------
                                   1563 ;Allocation info for local variables in function 'sent'
                                   1564 ;------------------------------------------------------------
                                   1565 ;stbroadcast               Allocated to registers r5 r6 r7 
                                   1566 ;c                         Allocated to stack - sp -2
                                   1567 ;------------------------------------------------------------
                                   1568 ;	/home/user/contiki/core/net/rime/rudolph0.c:105: sent(struct stbroadcast_conn *stbroadcast)
                                   1569 ;	-----------------------------------------
                                   1570 ;	 function sent
                                   1571 ;	-----------------------------------------
      00021B                       1572 _sent:
      00021B 05 81            [12] 1573 	inc	sp
      00021D 05 81            [12] 1574 	inc	sp
      00021F 05 81            [12] 1575 	inc	sp
      000221 AD 82            [24] 1576 	mov	r5,dpl
      000223 AE 83            [24] 1577 	mov	r6,dph
      000225 AF F0            [24] 1578 	mov	r7,b
                                   1579 ;	/home/user/contiki/core/net/rime/rudolph0.c:107: struct rudolph0_conn *c = (struct rudolph0_conn *)stbroadcast;
      000227 A8 81            [24] 1580 	mov	r0,sp
      000229 18               [12] 1581 	dec	r0
      00022A 18               [12] 1582 	dec	r0
      00022B A6 05            [24] 1583 	mov	@r0,ar5
      00022D 08               [12] 1584 	inc	r0
      00022E A6 06            [24] 1585 	mov	@r0,ar6
      000230 08               [12] 1586 	inc	r0
      000231 A6 07            [24] 1587 	mov	@r0,ar7
                                   1588 ;	/home/user/contiki/core/net/rime/rudolph0.c:109: if(c->current.datalen == RUDOLPH0_DATASIZE) {
      000233 A8 81            [24] 1589 	mov	r0,sp
      000235 18               [12] 1590 	dec	r0
      000236 18               [12] 1591 	dec	r0
      000237 74 5C            [12] 1592 	mov	a,#0x5C
      000239 26               [12] 1593 	add	a,@r0
      00023A FA               [12] 1594 	mov	r2,a
      00023B E4               [12] 1595 	clr	a
      00023C 08               [12] 1596 	inc	r0
      00023D 36               [12] 1597 	addc	a,@r0
      00023E FB               [12] 1598 	mov	r3,a
      00023F 08               [12] 1599 	inc	r0
      000240 86 04            [24] 1600 	mov	ar4,@r0
      000242 8A 82            [24] 1601 	mov	dpl,r2
      000244 8B 83            [24] 1602 	mov	dph,r3
      000246 8C F0            [24] 1603 	mov	b,r4
      000248 12r00r00         [24] 1604 	lcall	__gptrget
      00024B FA               [12] 1605 	mov	r2,a
      00024C BA 40 43         [24] 1606 	cjne	r2,#0x40,00102$
                                   1607 ;	/home/user/contiki/core/net/rime/rudolph0.c:110: c->current.h.chunk++;
      00024F A8 81            [24] 1608 	mov	r0,sp
      000251 18               [12] 1609 	dec	r0
      000252 18               [12] 1610 	dec	r0
      000253 74 5A            [12] 1611 	mov	a,#0x5A
      000255 26               [12] 1612 	add	a,@r0
      000256 FA               [12] 1613 	mov	r2,a
      000257 E4               [12] 1614 	clr	a
      000258 08               [12] 1615 	inc	r0
      000259 36               [12] 1616 	addc	a,@r0
      00025A FB               [12] 1617 	mov	r3,a
      00025B 08               [12] 1618 	inc	r0
      00025C 86 04            [24] 1619 	mov	ar4,@r0
      00025E 8A 82            [24] 1620 	mov	dpl,r2
      000260 8B 83            [24] 1621 	mov	dph,r3
      000262 8C F0            [24] 1622 	mov	b,r4
      000264 12r00r00         [24] 1623 	lcall	__gptrget
      000267 FE               [12] 1624 	mov	r6,a
      000268 A3               [24] 1625 	inc	dptr
      000269 12r00r00         [24] 1626 	lcall	__gptrget
      00026C FF               [12] 1627 	mov	r7,a
      00026D 0E               [12] 1628 	inc	r6
      00026E BE 00 01         [24] 1629 	cjne	r6,#0x00,00111$
      000271 0F               [12] 1630 	inc	r7
      000272                       1631 00111$:
      000272 8A 82            [24] 1632 	mov	dpl,r2
      000274 8B 83            [24] 1633 	mov	dph,r3
      000276 8C F0            [24] 1634 	mov	b,r4
      000278 EE               [12] 1635 	mov	a,r6
      000279 12r00r00         [24] 1636 	lcall	__gptrput
      00027C A3               [24] 1637 	inc	dptr
      00027D EF               [12] 1638 	mov	a,r7
      00027E 12r00r00         [24] 1639 	lcall	__gptrput
                                   1640 ;	/home/user/contiki/core/net/rime/rudolph0.c:112: read_new_datapacket(c);
      000281 A8 81            [24] 1641 	mov	r0,sp
      000283 18               [12] 1642 	dec	r0
      000284 18               [12] 1643 	dec	r0
      000285 86 82            [24] 1644 	mov	dpl,@r0
      000287 08               [12] 1645 	inc	r0
      000288 86 83            [24] 1646 	mov	dph,@r0
      00028A 08               [12] 1647 	inc	r0
      00028B 86 F0            [24] 1648 	mov	b,@r0
      00028D 12r00r00         [24] 1649 	lcall	_read_new_datapacket
      000290 80 1B            [24] 1650 	sjmp	00104$
      000292                       1651 00102$:
                                   1652 ;	/home/user/contiki/core/net/rime/rudolph0.c:114: stbroadcast_set_timer(&c->c, STEADY_TIME);
      000292 E4               [12] 1653 	clr	a
      000293 C0 E0            [24] 1654 	push	acc
      000295 74 01            [12] 1655 	mov	a,#0x01
      000297 C0 E0            [24] 1656 	push	acc
      000299 E5 81            [12] 1657 	mov	a,sp
      00029B 24 FC            [12] 1658 	add	a,#0xfc
      00029D F8               [12] 1659 	mov	r0,a
      00029E 86 82            [24] 1660 	mov	dpl,@r0
      0002A0 08               [12] 1661 	inc	r0
      0002A1 86 83            [24] 1662 	mov	dph,@r0
      0002A3 08               [12] 1663 	inc	r0
      0002A4 86 F0            [24] 1664 	mov	b,@r0
      0002A6 12r00r00         [24] 1665 	lcall	_stbroadcast_set_timer
      0002A9 15 81            [12] 1666 	dec	sp
      0002AB 15 81            [12] 1667 	dec	sp
      0002AD                       1668 00104$:
      0002AD 15 81            [12] 1669 	dec	sp
      0002AF 15 81            [12] 1670 	dec	sp
      0002B1 15 81            [12] 1671 	dec	sp
      0002B3 22               [24] 1672 	ret
                                   1673 ;------------------------------------------------------------
                                   1674 ;Allocation info for local variables in function 'recv'
                                   1675 ;------------------------------------------------------------
                                   1676 ;stbroadcast               Allocated to registers r5 r6 r7 
                                   1677 ;c                         Allocated to stack - sp -5
                                   1678 ;p                         Allocated to stack - sp -2
                                   1679 ;sloc0                     Allocated to stack - sp -16
                                   1680 ;sloc1                     Allocated to stack - sp -15
                                   1681 ;sloc2                     Allocated to stack - sp -12
                                   1682 ;sloc3                     Allocated to stack - sp -10
                                   1683 ;sloc4                     Allocated to stack - sp +1
                                   1684 ;sloc5                     Allocated to stack - sp -8
                                   1685 ;------------------------------------------------------------
                                   1686 ;	/home/user/contiki/core/net/rime/rudolph0.c:121: recv(struct stbroadcast_conn *stbroadcast)
                                   1687 ;	-----------------------------------------
                                   1688 ;	 function recv
                                   1689 ;	-----------------------------------------
      0002B4                       1690 _recv:
      0002B4 E5 81            [12] 1691 	mov	a,sp
      0002B6 24 11            [12] 1692 	add	a,#0x11
      0002B8 F5 81            [12] 1693 	mov	sp,a
      0002BA AD 82            [24] 1694 	mov	r5,dpl
      0002BC AE 83            [24] 1695 	mov	r6,dph
      0002BE AF F0            [24] 1696 	mov	r7,b
                                   1697 ;	/home/user/contiki/core/net/rime/rudolph0.c:123: struct rudolph0_conn *c = (struct rudolph0_conn *)stbroadcast;
      0002C0 E5 81            [12] 1698 	mov	a,sp
      0002C2 24 FB            [12] 1699 	add	a,#0xfb
      0002C4 F8               [12] 1700 	mov	r0,a
      0002C5 A6 05            [24] 1701 	mov	@r0,ar5
      0002C7 08               [12] 1702 	inc	r0
      0002C8 A6 06            [24] 1703 	mov	@r0,ar6
      0002CA 08               [12] 1704 	inc	r0
      0002CB A6 07            [24] 1705 	mov	@r0,ar7
                                   1706 ;	/home/user/contiki/core/net/rime/rudolph0.c:124: struct rudolph0_datapacket *p = packetbuf_dataptr();
      0002CD 12r00r00         [24] 1707 	lcall	_packetbuf_dataptr
      0002D0 AA 82            [24] 1708 	mov	r2,dpl
      0002D2 AB 83            [24] 1709 	mov	r3,dph
      0002D4 AC F0            [24] 1710 	mov	r4,b
      0002D6 A8 81            [24] 1711 	mov	r0,sp
      0002D8 18               [12] 1712 	dec	r0
      0002D9 18               [12] 1713 	dec	r0
      0002DA A6 02            [24] 1714 	mov	@r0,ar2
      0002DC 08               [12] 1715 	inc	r0
      0002DD A6 03            [24] 1716 	mov	@r0,ar3
      0002DF 08               [12] 1717 	inc	r0
      0002E0 A6 04            [24] 1718 	mov	@r0,ar4
                                   1719 ;	/home/user/contiki/core/net/rime/rudolph0.c:126: if(p->h.type == TYPE_DATA) {
      0002E2 A8 81            [24] 1720 	mov	r0,sp
      0002E4 18               [12] 1721 	dec	r0
      0002E5 18               [12] 1722 	dec	r0
      0002E6 86 82            [24] 1723 	mov	dpl,@r0
      0002E8 08               [12] 1724 	inc	r0
      0002E9 86 83            [24] 1725 	mov	dph,@r0
      0002EB 08               [12] 1726 	inc	r0
      0002EC 86 F0            [24] 1727 	mov	b,@r0
      0002EE 12r00r00         [24] 1728 	lcall	__gptrget
      0002F1 60 03            [24] 1729 	jz	00142$
      0002F3 02r07r3E         [24] 1730 	ljmp	00119$
      0002F6                       1731 00142$:
                                   1732 ;	/home/user/contiki/core/net/rime/rudolph0.c:127: if(c->current.h.version != p->h.version) {
      0002F6 E5 81            [12] 1733 	mov	a,sp
      0002F8 24 FB            [12] 1734 	add	a,#0xfb
      0002FA F8               [12] 1735 	mov	r0,a
      0002FB 74 59            [12] 1736 	mov	a,#0x59
      0002FD 26               [12] 1737 	add	a,@r0
      0002FE FD               [12] 1738 	mov	r5,a
      0002FF E4               [12] 1739 	clr	a
      000300 08               [12] 1740 	inc	r0
      000301 36               [12] 1741 	addc	a,@r0
      000302 FE               [12] 1742 	mov	r6,a
      000303 08               [12] 1743 	inc	r0
      000304 86 07            [24] 1744 	mov	ar7,@r0
      000306 8D 82            [24] 1745 	mov	dpl,r5
      000308 8E 83            [24] 1746 	mov	dph,r6
      00030A 8F F0            [24] 1747 	mov	b,r7
      00030C E5 81            [12] 1748 	mov	a,sp
      00030E 24 F0            [12] 1749 	add	a,#0xf0
      000310 F8               [12] 1750 	mov	r0,a
      000311 12r00r00         [24] 1751 	lcall	__gptrget
      000314 F6               [12] 1752 	mov	@r0,a
      000315 A8 81            [24] 1753 	mov	r0,sp
      000317 18               [12] 1754 	dec	r0
      000318 18               [12] 1755 	dec	r0
      000319 74 01            [12] 1756 	mov	a,#0x01
      00031B 26               [12] 1757 	add	a,@r0
      00031C FA               [12] 1758 	mov	r2,a
      00031D E4               [12] 1759 	clr	a
      00031E 08               [12] 1760 	inc	r0
      00031F 36               [12] 1761 	addc	a,@r0
      000320 FB               [12] 1762 	mov	r3,a
      000321 08               [12] 1763 	inc	r0
      000322 86 04            [24] 1764 	mov	ar4,@r0
      000324 8A 82            [24] 1765 	mov	dpl,r2
      000326 8B 83            [24] 1766 	mov	dph,r3
      000328 8C F0            [24] 1767 	mov	b,r4
      00032A 12r00r00         [24] 1768 	lcall	__gptrget
      00032D FC               [12] 1769 	mov	r4,a
      00032E E5 81            [12] 1770 	mov	a,sp
      000330 24 F0            [12] 1771 	add	a,#0xf0
      000332 F8               [12] 1772 	mov	r0,a
      000333 E6               [12] 1773 	mov	a,@r0
      000334 B5 04 04         [24] 1774 	cjne	a,ar4,00143$
      000337 74 01            [12] 1775 	mov	a,#0x01
      000339 80 01            [24] 1776 	sjmp	00144$
      00033B                       1777 00143$:
      00033B E4               [12] 1778 	clr	a
      00033C                       1779 00144$:
      00033C FB               [12] 1780 	mov	r3,a
      00033D 60 03            [24] 1781 	jz	00145$
      00033F 02r05r05         [24] 1782 	ljmp	00115$
      000342                       1783 00145$:
                                   1784 ;	/home/user/contiki/core/net/rime/rudolph0.c:129: c->current.h.version = p->h.version;
      000342 8D 82            [24] 1785 	mov	dpl,r5
      000344 8E 83            [24] 1786 	mov	dph,r6
      000346 8F F0            [24] 1787 	mov	b,r7
      000348 EC               [12] 1788 	mov	a,r4
      000349 12r00r00         [24] 1789 	lcall	__gptrput
                                   1790 ;	/home/user/contiki/core/net/rime/rudolph0.c:130: c->current.h.chunk = 0;
      00034C E5 81            [12] 1791 	mov	a,sp
      00034E 24 FB            [12] 1792 	add	a,#0xfb
      000350 F8               [12] 1793 	mov	r0,a
      000351 74 5A            [12] 1794 	mov	a,#0x5A
      000353 26               [12] 1795 	add	a,@r0
      000354 FD               [12] 1796 	mov	r5,a
      000355 E4               [12] 1797 	clr	a
      000356 08               [12] 1798 	inc	r0
      000357 36               [12] 1799 	addc	a,@r0
      000358 FE               [12] 1800 	mov	r6,a
      000359 08               [12] 1801 	inc	r0
      00035A 86 07            [24] 1802 	mov	ar7,@r0
      00035C 8D 82            [24] 1803 	mov	dpl,r5
      00035E 8E 83            [24] 1804 	mov	dph,r6
      000360 8F F0            [24] 1805 	mov	b,r7
      000362 E4               [12] 1806 	clr	a
      000363 12r00r00         [24] 1807 	lcall	__gptrput
      000366 A3               [24] 1808 	inc	dptr
      000367 E4               [12] 1809 	clr	a
      000368 12r00r00         [24] 1810 	lcall	__gptrput
                                   1811 ;	/home/user/contiki/core/net/rime/rudolph0.c:131: c->cb->write_chunk(c, 0, RUDOLPH0_FLAG_NEWFILE, p->data, 0);
      00036B E5 81            [12] 1812 	mov	a,sp
      00036D 24 FB            [12] 1813 	add	a,#0xfb
      00036F F8               [12] 1814 	mov	r0,a
      000370 E5 81            [12] 1815 	mov	a,sp
      000372 24 F1            [12] 1816 	add	a,#0xf1
      000374 F9               [12] 1817 	mov	r1,a
      000375 74 52            [12] 1818 	mov	a,#0x52
      000377 26               [12] 1819 	add	a,@r0
      000378 F7               [12] 1820 	mov	@r1,a
      000379 E4               [12] 1821 	clr	a
      00037A 08               [12] 1822 	inc	r0
      00037B 36               [12] 1823 	addc	a,@r0
      00037C 09               [12] 1824 	inc	r1
      00037D F7               [12] 1825 	mov	@r1,a
      00037E 08               [12] 1826 	inc	r0
      00037F 09               [12] 1827 	inc	r1
      000380 E6               [12] 1828 	mov	a,@r0
      000381 F7               [12] 1829 	mov	@r1,a
      000382 E5 81            [12] 1830 	mov	a,sp
      000384 24 F1            [12] 1831 	add	a,#0xf1
      000386 F8               [12] 1832 	mov	r0,a
      000387 86 82            [24] 1833 	mov	dpl,@r0
      000389 08               [12] 1834 	inc	r0
      00038A 86 83            [24] 1835 	mov	dph,@r0
      00038C 08               [12] 1836 	inc	r0
      00038D 86 F0            [24] 1837 	mov	b,@r0
      00038F 12r00r00         [24] 1838 	lcall	__gptrget
      000392 FA               [12] 1839 	mov	r2,a
      000393 A3               [24] 1840 	inc	dptr
      000394 12r00r00         [24] 1841 	lcall	__gptrget
      000397 FC               [12] 1842 	mov	r4,a
      000398 A3               [24] 1843 	inc	dptr
      000399 12r00r00         [24] 1844 	lcall	__gptrget
      00039C FF               [12] 1845 	mov	r7,a
      00039D 8A 82            [24] 1846 	mov	dpl,r2
      00039F 8C 83            [24] 1847 	mov	dph,r4
      0003A1 8F F0            [24] 1848 	mov	b,r7
      0003A3 12r00r00         [24] 1849 	lcall	__gptrget
      0003A6 FA               [12] 1850 	mov	r2,a
      0003A7 A3               [24] 1851 	inc	dptr
      0003A8 12r00r00         [24] 1852 	lcall	__gptrget
      0003AB FC               [12] 1853 	mov	r4,a
      0003AC A8 81            [24] 1854 	mov	r0,sp
      0003AE 18               [12] 1855 	dec	r0
      0003AF 18               [12] 1856 	dec	r0
      0003B0 74 05            [12] 1857 	mov	a,#0x05
      0003B2 26               [12] 1858 	add	a,@r0
      0003B3 FD               [12] 1859 	mov	r5,a
      0003B4 E4               [12] 1860 	clr	a
      0003B5 08               [12] 1861 	inc	r0
      0003B6 36               [12] 1862 	addc	a,@r0
      0003B7 FE               [12] 1863 	mov	r6,a
      0003B8 08               [12] 1864 	inc	r0
      0003B9 86 07            [24] 1865 	mov	ar7,@r0
      0003BB C0 04            [24] 1866 	push	ar4
      0003BD C0 02            [24] 1867 	push	ar2
      0003BF E4               [12] 1868 	clr	a
      0003C0 C0 E0            [24] 1869 	push	acc
      0003C2 C0 E0            [24] 1870 	push	acc
      0003C4 C0 05            [24] 1871 	push	ar5
      0003C6 C0 06            [24] 1872 	push	ar6
      0003C8 C0 07            [24] 1873 	push	ar7
      0003CA 74 01            [12] 1874 	mov	a,#0x01
      0003CC C0 E0            [24] 1875 	push	acc
      0003CE E4               [12] 1876 	clr	a
      0003CF C0 E0            [24] 1877 	push	acc
      0003D1 E4               [12] 1878 	clr	a
      0003D2 C0 E0            [24] 1879 	push	acc
      0003D4 C0 E0            [24] 1880 	push	acc
      0003D6 12r03rDB         [24] 1881 	lcall	00146$
      0003D9 80 12            [24] 1882 	sjmp	00147$
      0003DB                       1883 00146$:
      0003DB C0 02            [24] 1884 	push	ar2
      0003DD C0 04            [24] 1885 	push	ar4
      0003DF E5 81            [12] 1886 	mov	a,sp
      0003E1 24 EC            [12] 1887 	add	a,#0xec
      0003E3 F8               [12] 1888 	mov	r0,a
      0003E4 86 82            [24] 1889 	mov	dpl,@r0
      0003E6 08               [12] 1890 	inc	r0
      0003E7 86 83            [24] 1891 	mov	dph,@r0
      0003E9 08               [12] 1892 	inc	r0
      0003EA 86 F0            [24] 1893 	mov	b,@r0
      0003EC 22               [24] 1894 	ret
      0003ED                       1895 00147$:
      0003ED E5 81            [12] 1896 	mov	a,sp
      0003EF 24 F7            [12] 1897 	add	a,#0xf7
      0003F1 F5 81            [12] 1898 	mov	sp,a
      0003F3 D0 02            [24] 1899 	pop	ar2
      0003F5 D0 04            [24] 1900 	pop	ar4
                                   1901 ;	/home/user/contiki/core/net/rime/rudolph0.c:132: if(p->h.chunk != 0) {
      0003F7 A8 81            [24] 1902 	mov	r0,sp
      0003F9 18               [12] 1903 	dec	r0
      0003FA 18               [12] 1904 	dec	r0
      0003FB 74 02            [12] 1905 	mov	a,#0x02
      0003FD 26               [12] 1906 	add	a,@r0
      0003FE FD               [12] 1907 	mov	r5,a
      0003FF E4               [12] 1908 	clr	a
      000400 08               [12] 1909 	inc	r0
      000401 36               [12] 1910 	addc	a,@r0
      000402 FE               [12] 1911 	mov	r6,a
      000403 08               [12] 1912 	inc	r0
      000404 86 07            [24] 1913 	mov	ar7,@r0
      000406 8D 82            [24] 1914 	mov	dpl,r5
      000408 8E 83            [24] 1915 	mov	dph,r6
      00040A 8F F0            [24] 1916 	mov	b,r7
      00040C 12r00r00         [24] 1917 	lcall	__gptrget
      00040F FD               [12] 1918 	mov	r5,a
      000410 A3               [24] 1919 	inc	dptr
      000411 12r00r00         [24] 1920 	lcall	__gptrget
      000414 FE               [12] 1921 	mov	r6,a
      000415 4D               [12] 1922 	orl	a,r5
      000416 60 13            [24] 1923 	jz	00102$
                                   1924 ;	/home/user/contiki/core/net/rime/rudolph0.c:133: send_nack(c);
      000418 E5 81            [12] 1925 	mov	a,sp
      00041A 24 FB            [12] 1926 	add	a,#0xfb
      00041C F8               [12] 1927 	mov	r0,a
      00041D 86 82            [24] 1928 	mov	dpl,@r0
      00041F 08               [12] 1929 	inc	r0
      000420 86 83            [24] 1930 	mov	dph,@r0
      000422 08               [12] 1931 	inc	r0
      000423 86 F0            [24] 1932 	mov	b,@r0
      000425 12r01r10         [24] 1933 	lcall	_send_nack
      000428 02r07r3E         [24] 1934 	ljmp	00119$
      00042B                       1935 00102$:
                                   1936 ;	/home/user/contiki/core/net/rime/rudolph0.c:135: c->cb->write_chunk(c, 0, RUDOLPH0_FLAG_NONE, p->data, p->datalen);
      00042B E5 81            [12] 1937 	mov	a,sp
      00042D 24 F1            [12] 1938 	add	a,#0xf1
      00042F F8               [12] 1939 	mov	r0,a
      000430 86 82            [24] 1940 	mov	dpl,@r0
      000432 08               [12] 1941 	inc	r0
      000433 86 83            [24] 1942 	mov	dph,@r0
      000435 08               [12] 1943 	inc	r0
      000436 86 F0            [24] 1944 	mov	b,@r0
      000438 12r00r00         [24] 1945 	lcall	__gptrget
      00043B FD               [12] 1946 	mov	r5,a
      00043C A3               [24] 1947 	inc	dptr
      00043D 12r00r00         [24] 1948 	lcall	__gptrget
      000440 FE               [12] 1949 	mov	r6,a
      000441 A3               [24] 1950 	inc	dptr
      000442 12r00r00         [24] 1951 	lcall	__gptrget
      000445 FF               [12] 1952 	mov	r7,a
      000446 8D 82            [24] 1953 	mov	dpl,r5
      000448 8E 83            [24] 1954 	mov	dph,r6
      00044A 8F F0            [24] 1955 	mov	b,r7
      00044C 12r00r00         [24] 1956 	lcall	__gptrget
      00044F FD               [12] 1957 	mov	r5,a
      000450 A3               [24] 1958 	inc	dptr
      000451 12r00r00         [24] 1959 	lcall	__gptrget
      000454 FE               [12] 1960 	mov	r6,a
      000455 A8 81            [24] 1961 	mov	r0,sp
      000457 18               [12] 1962 	dec	r0
      000458 18               [12] 1963 	dec	r0
      000459 74 04            [12] 1964 	mov	a,#0x04
      00045B 26               [12] 1965 	add	a,@r0
      00045C FA               [12] 1966 	mov	r2,a
      00045D E4               [12] 1967 	clr	a
      00045E 08               [12] 1968 	inc	r0
      00045F 36               [12] 1969 	addc	a,@r0
      000460 FC               [12] 1970 	mov	r4,a
      000461 08               [12] 1971 	inc	r0
      000462 86 07            [24] 1972 	mov	ar7,@r0
      000464 8A 82            [24] 1973 	mov	dpl,r2
      000466 8C 83            [24] 1974 	mov	dph,r4
      000468 8F F0            [24] 1975 	mov	b,r7
      00046A 12r00r00         [24] 1976 	lcall	__gptrget
      00046D FA               [12] 1977 	mov	r2,a
      00046E E5 81            [12] 1978 	mov	a,sp
      000470 24 F1            [12] 1979 	add	a,#0xf1
      000472 F8               [12] 1980 	mov	r0,a
      000473 A6 02            [24] 1981 	mov	@r0,ar2
      000475 08               [12] 1982 	inc	r0
      000476 76 00            [12] 1983 	mov	@r0,#0x00
      000478 A8 81            [24] 1984 	mov	r0,sp
      00047A 18               [12] 1985 	dec	r0
      00047B 18               [12] 1986 	dec	r0
      00047C 74 05            [12] 1987 	mov	a,#0x05
      00047E 26               [12] 1988 	add	a,@r0
      00047F FA               [12] 1989 	mov	r2,a
      000480 E4               [12] 1990 	clr	a
      000481 08               [12] 1991 	inc	r0
      000482 36               [12] 1992 	addc	a,@r0
      000483 FC               [12] 1993 	mov	r4,a
      000484 08               [12] 1994 	inc	r0
      000485 86 07            [24] 1995 	mov	ar7,@r0
      000487 C0 06            [24] 1996 	push	ar6
      000489 C0 05            [24] 1997 	push	ar5
      00048B E5 81            [12] 1998 	mov	a,sp
      00048D 24 EF            [12] 1999 	add	a,#0xef
      00048F F8               [12] 2000 	mov	r0,a
      000490 E6               [12] 2001 	mov	a,@r0
      000491 C0 E0            [24] 2002 	push	acc
      000493 08               [12] 2003 	inc	r0
      000494 E6               [12] 2004 	mov	a,@r0
      000495 C0 E0            [24] 2005 	push	acc
      000497 C0 02            [24] 2006 	push	ar2
      000499 C0 04            [24] 2007 	push	ar4
      00049B C0 07            [24] 2008 	push	ar7
      00049D E4               [12] 2009 	clr	a
      00049E C0 E0            [24] 2010 	push	acc
      0004A0 C0 E0            [24] 2011 	push	acc
      0004A2 E4               [12] 2012 	clr	a
      0004A3 C0 E0            [24] 2013 	push	acc
      0004A5 C0 E0            [24] 2014 	push	acc
      0004A7 12r04rAC         [24] 2015 	lcall	00149$
      0004AA 80 12            [24] 2016 	sjmp	00150$
      0004AC                       2017 00149$:
      0004AC C0 05            [24] 2018 	push	ar5
      0004AE C0 06            [24] 2019 	push	ar6
      0004B0 E5 81            [12] 2020 	mov	a,sp
      0004B2 24 EC            [12] 2021 	add	a,#0xec
      0004B4 F8               [12] 2022 	mov	r0,a
      0004B5 86 82            [24] 2023 	mov	dpl,@r0
      0004B7 08               [12] 2024 	inc	r0
      0004B8 86 83            [24] 2025 	mov	dph,@r0
      0004BA 08               [12] 2026 	inc	r0
      0004BB 86 F0            [24] 2027 	mov	b,@r0
      0004BD 22               [24] 2028 	ret
      0004BE                       2029 00150$:
      0004BE E5 81            [12] 2030 	mov	a,sp
      0004C0 24 F7            [12] 2031 	add	a,#0xf7
      0004C2 F5 81            [12] 2032 	mov	sp,a
      0004C4 D0 05            [24] 2033 	pop	ar5
      0004C6 D0 06            [24] 2034 	pop	ar6
                                   2035 ;	/home/user/contiki/core/net/rime/rudolph0.c:136: c->current.h.chunk++;
      0004C8 E5 81            [12] 2036 	mov	a,sp
      0004CA 24 FB            [12] 2037 	add	a,#0xfb
      0004CC F8               [12] 2038 	mov	r0,a
      0004CD 74 58            [12] 2039 	mov	a,#0x58
      0004CF 26               [12] 2040 	add	a,@r0
      0004D0 FD               [12] 2041 	mov	r5,a
      0004D1 E4               [12] 2042 	clr	a
      0004D2 08               [12] 2043 	inc	r0
      0004D3 36               [12] 2044 	addc	a,@r0
      0004D4 FE               [12] 2045 	mov	r6,a
      0004D5 08               [12] 2046 	inc	r0
      0004D6 86 07            [24] 2047 	mov	ar7,@r0
      0004D8 74 02            [12] 2048 	mov	a,#0x02
      0004DA 2D               [12] 2049 	add	a,r5
      0004DB FD               [12] 2050 	mov	r5,a
      0004DC E4               [12] 2051 	clr	a
      0004DD 3E               [12] 2052 	addc	a,r6
      0004DE FE               [12] 2053 	mov	r6,a
      0004DF 8D 82            [24] 2054 	mov	dpl,r5
      0004E1 8E 83            [24] 2055 	mov	dph,r6
      0004E3 8F F0            [24] 2056 	mov	b,r7
      0004E5 12r00r00         [24] 2057 	lcall	__gptrget
      0004E8 FA               [12] 2058 	mov	r2,a
      0004E9 A3               [24] 2059 	inc	dptr
      0004EA 12r00r00         [24] 2060 	lcall	__gptrget
      0004ED FC               [12] 2061 	mov	r4,a
      0004EE 0A               [12] 2062 	inc	r2
      0004EF BA 00 01         [24] 2063 	cjne	r2,#0x00,00151$
      0004F2 0C               [12] 2064 	inc	r4
      0004F3                       2065 00151$:
      0004F3 8D 82            [24] 2066 	mov	dpl,r5
      0004F5 8E 83            [24] 2067 	mov	dph,r6
      0004F7 8F F0            [24] 2068 	mov	b,r7
      0004F9 EA               [12] 2069 	mov	a,r2
      0004FA 12r00r00         [24] 2070 	lcall	__gptrput
      0004FD A3               [24] 2071 	inc	dptr
      0004FE EC               [12] 2072 	mov	a,r4
      0004FF 12r00r00         [24] 2073 	lcall	__gptrput
      000502 02r07r3E         [24] 2074 	ljmp	00119$
      000505                       2075 00115$:
                                   2076 ;	/home/user/contiki/core/net/rime/rudolph0.c:138: } else if(p->h.version == c->current.h.version) {
      000505 EB               [12] 2077 	mov	a,r3
      000506 70 03            [24] 2078 	jnz	00152$
      000508 02r07r3E         [24] 2079 	ljmp	00119$
      00050B                       2080 00152$:
                                   2081 ;	/home/user/contiki/core/net/rime/rudolph0.c:139: if(p->h.chunk == c->current.h.chunk) {
      00050B A8 81            [24] 2082 	mov	r0,sp
      00050D 18               [12] 2083 	dec	r0
      00050E 18               [12] 2084 	dec	r0
      00050F 74 02            [12] 2085 	mov	a,#0x02
      000511 26               [12] 2086 	add	a,@r0
      000512 FD               [12] 2087 	mov	r5,a
      000513 E4               [12] 2088 	clr	a
      000514 08               [12] 2089 	inc	r0
      000515 36               [12] 2090 	addc	a,@r0
      000516 FE               [12] 2091 	mov	r6,a
      000517 08               [12] 2092 	inc	r0
      000518 86 07            [24] 2093 	mov	ar7,@r0
      00051A 8D 82            [24] 2094 	mov	dpl,r5
      00051C 8E 83            [24] 2095 	mov	dph,r6
      00051E 8F F0            [24] 2096 	mov	b,r7
      000520 12r00r00         [24] 2097 	lcall	__gptrget
      000523 FE               [12] 2098 	mov	r6,a
      000524 A3               [24] 2099 	inc	dptr
      000525 12r00r00         [24] 2100 	lcall	__gptrget
      000528 FF               [12] 2101 	mov	r7,a
      000529 E5 81            [12] 2102 	mov	a,sp
      00052B 24 FB            [12] 2103 	add	a,#0xfb
      00052D F8               [12] 2104 	mov	r0,a
      00052E 74 5A            [12] 2105 	mov	a,#0x5A
      000530 26               [12] 2106 	add	a,@r0
      000531 FB               [12] 2107 	mov	r3,a
      000532 E4               [12] 2108 	clr	a
      000533 08               [12] 2109 	inc	r0
      000534 36               [12] 2110 	addc	a,@r0
      000535 FC               [12] 2111 	mov	r4,a
      000536 08               [12] 2112 	inc	r0
      000537 86 05            [24] 2113 	mov	ar5,@r0
      000539 8B 82            [24] 2114 	mov	dpl,r3
      00053B 8C 83            [24] 2115 	mov	dph,r4
      00053D 8D F0            [24] 2116 	mov	b,r5
      00053F E5 81            [12] 2117 	mov	a,sp
      000541 24 F4            [12] 2118 	add	a,#0xf4
      000543 F8               [12] 2119 	mov	r0,a
      000544 12r00r00         [24] 2120 	lcall	__gptrget
      000547 F6               [12] 2121 	mov	@r0,a
      000548 A3               [24] 2122 	inc	dptr
      000549 12r00r00         [24] 2123 	lcall	__gptrget
      00054C 08               [12] 2124 	inc	r0
      00054D F6               [12] 2125 	mov	@r0,a
      00054E E5 81            [12] 2126 	mov	a,sp
      000550 24 F4            [12] 2127 	add	a,#0xf4
      000552 F8               [12] 2128 	mov	r0,a
      000553 E6               [12] 2129 	mov	a,@r0
      000554 B5 06 07         [24] 2130 	cjne	a,ar6,00153$
      000557 08               [12] 2131 	inc	r0
      000558 E6               [12] 2132 	mov	a,@r0
      000559 B5 07 02         [24] 2133 	cjne	a,ar7,00153$
      00055C 80 03            [24] 2134 	sjmp	00154$
      00055E                       2135 00153$:
      00055E 02r07r21         [24] 2136 	ljmp	00110$
      000561                       2137 00154$:
                                   2138 ;	/home/user/contiki/core/net/rime/rudolph0.c:141: if(p->datalen < RUDOLPH0_DATASIZE) {
      000561 A8 81            [24] 2139 	mov	r0,sp
      000563 18               [12] 2140 	dec	r0
      000564 18               [12] 2141 	dec	r0
      000565 74 04            [12] 2142 	mov	a,#0x04
      000567 26               [12] 2143 	add	a,@r0
      000568 FA               [12] 2144 	mov	r2,a
      000569 E4               [12] 2145 	clr	a
      00056A 08               [12] 2146 	inc	r0
      00056B 36               [12] 2147 	addc	a,@r0
      00056C FB               [12] 2148 	mov	r3,a
      00056D 08               [12] 2149 	inc	r0
      00056E 86 05            [24] 2150 	mov	ar5,@r0
      000570 8A 82            [24] 2151 	mov	dpl,r2
      000572 8B 83            [24] 2152 	mov	dph,r3
      000574 8D F0            [24] 2153 	mov	b,r5
      000576 12r00r00         [24] 2154 	lcall	__gptrget
      000579 FF               [12] 2155 	mov	r7,a
      00057A BF 40 00         [24] 2156 	cjne	r7,#0x40,00155$
      00057D                       2157 00155$:
      00057D 40 03            [24] 2158 	jc	00156$
      00057F 02r06r3D         [24] 2159 	ljmp	00105$
      000582                       2160 00156$:
                                   2161 ;	/home/user/contiki/core/net/rime/rudolph0.c:142: c->cb->write_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
      000582 E5 81            [12] 2162 	mov	a,sp
      000584 24 FB            [12] 2163 	add	a,#0xfb
      000586 F8               [12] 2164 	mov	r0,a
      000587 74 52            [12] 2165 	mov	a,#0x52
      000589 26               [12] 2166 	add	a,@r0
      00058A FA               [12] 2167 	mov	r2,a
      00058B E4               [12] 2168 	clr	a
      00058C 08               [12] 2169 	inc	r0
      00058D 36               [12] 2170 	addc	a,@r0
      00058E FB               [12] 2171 	mov	r3,a
      00058F 08               [12] 2172 	inc	r0
      000590 86 05            [24] 2173 	mov	ar5,@r0
      000592 8A 82            [24] 2174 	mov	dpl,r2
      000594 8B 83            [24] 2175 	mov	dph,r3
      000596 8D F0            [24] 2176 	mov	b,r5
      000598 12r00r00         [24] 2177 	lcall	__gptrget
      00059B FA               [12] 2178 	mov	r2,a
      00059C A3               [24] 2179 	inc	dptr
      00059D 12r00r00         [24] 2180 	lcall	__gptrget
      0005A0 FB               [12] 2181 	mov	r3,a
      0005A1 A3               [24] 2182 	inc	dptr
      0005A2 12r00r00         [24] 2183 	lcall	__gptrget
      0005A5 FD               [12] 2184 	mov	r5,a
      0005A6 8A 82            [24] 2185 	mov	dpl,r2
      0005A8 8B 83            [24] 2186 	mov	dph,r3
      0005AA 8D F0            [24] 2187 	mov	b,r5
      0005AC 12r00r00         [24] 2188 	lcall	__gptrget
      0005AF FE               [12] 2189 	mov	r6,a
      0005B0 A3               [24] 2190 	inc	dptr
      0005B1 12r00r00         [24] 2191 	lcall	__gptrget
      0005B4 FC               [12] 2192 	mov	r4,a
                                   2193 ;	/home/user/contiki/core/net/rime/rudolph0.c:143: RUDOLPH0_FLAG_LASTCHUNK, p->data, p->datalen);
      0005B5 E5 81            [12] 2194 	mov	a,sp
      0005B7 24 F6            [12] 2195 	add	a,#0xf6
      0005B9 F8               [12] 2196 	mov	r0,a
      0005BA A6 07            [24] 2197 	mov	@r0,ar7
      0005BC 08               [12] 2198 	inc	r0
      0005BD 76 00            [12] 2199 	mov	@r0,#0x00
      0005BF A8 81            [24] 2200 	mov	r0,sp
      0005C1 18               [12] 2201 	dec	r0
      0005C2 18               [12] 2202 	dec	r0
      0005C3 E5 81            [12] 2203 	mov	a,sp
      0005C5 24 F8            [12] 2204 	add	a,#0xf8
      0005C7 F9               [12] 2205 	mov	r1,a
      0005C8 74 05            [12] 2206 	mov	a,#0x05
      0005CA 26               [12] 2207 	add	a,@r0
      0005CB F7               [12] 2208 	mov	@r1,a
      0005CC E4               [12] 2209 	clr	a
      0005CD 08               [12] 2210 	inc	r0
      0005CE 36               [12] 2211 	addc	a,@r0
      0005CF 09               [12] 2212 	inc	r1
      0005D0 F7               [12] 2213 	mov	@r1,a
      0005D1 08               [12] 2214 	inc	r0
      0005D2 09               [12] 2215 	inc	r1
      0005D3 E6               [12] 2216 	mov	a,@r0
      0005D4 F7               [12] 2217 	mov	@r1,a
                                   2218 ;	/home/user/contiki/core/net/rime/rudolph0.c:142: c->cb->write_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
      0005D5 E5 81            [12] 2219 	mov	a,sp
      0005D7 24 F4            [12] 2220 	add	a,#0xf4
      0005D9 F8               [12] 2221 	mov	r0,a
      0005DA 86 02            [24] 2222 	mov	ar2,@r0
      0005DC 08               [12] 2223 	inc	r0
      0005DD E6               [12] 2224 	mov	a,@r0
      0005DE 54 03            [12] 2225 	anl	a,#0x03
      0005E0 A2 E0            [12] 2226 	mov	c,acc.0
      0005E2 CA               [12] 2227 	xch	a,r2
      0005E3 13               [12] 2228 	rrc	a
      0005E4 CA               [12] 2229 	xch	a,r2
      0005E5 13               [12] 2230 	rrc	a
      0005E6 A2 E0            [12] 2231 	mov	c,acc.0
      0005E8 CA               [12] 2232 	xch	a,r2
      0005E9 13               [12] 2233 	rrc	a
      0005EA CA               [12] 2234 	xch	a,r2
      0005EB 13               [12] 2235 	rrc	a
      0005EC CA               [12] 2236 	xch	a,r2
      0005ED FD               [12] 2237 	mov	r5,a
      0005EE C0 06            [24] 2238 	push	ar6
      0005F0 C0 04            [24] 2239 	push	ar4
      0005F2 E5 81            [12] 2240 	mov	a,sp
      0005F4 24 F4            [12] 2241 	add	a,#0xf4
      0005F6 F8               [12] 2242 	mov	r0,a
      0005F7 E6               [12] 2243 	mov	a,@r0
      0005F8 C0 E0            [24] 2244 	push	acc
      0005FA 08               [12] 2245 	inc	r0
      0005FB E6               [12] 2246 	mov	a,@r0
      0005FC C0 E0            [24] 2247 	push	acc
      0005FE E5 81            [12] 2248 	mov	a,sp
      000600 24 F4            [12] 2249 	add	a,#0xf4
      000602 F8               [12] 2250 	mov	r0,a
      000603 E6               [12] 2251 	mov	a,@r0
      000604 C0 E0            [24] 2252 	push	acc
      000606 08               [12] 2253 	inc	r0
      000607 E6               [12] 2254 	mov	a,@r0
      000608 C0 E0            [24] 2255 	push	acc
      00060A 08               [12] 2256 	inc	r0
      00060B E6               [12] 2257 	mov	a,@r0
      00060C C0 E0            [24] 2258 	push	acc
      00060E 74 02            [12] 2259 	mov	a,#0x02
      000610 C0 E0            [24] 2260 	push	acc
      000612 E4               [12] 2261 	clr	a
      000613 C0 E0            [24] 2262 	push	acc
      000615 C0 02            [24] 2263 	push	ar2
      000617 C0 05            [24] 2264 	push	ar5
      000619 12r06r1E         [24] 2265 	lcall	00157$
      00061C 80 12            [24] 2266 	sjmp	00158$
      00061E                       2267 00157$:
      00061E C0 06            [24] 2268 	push	ar6
      000620 C0 04            [24] 2269 	push	ar4
      000622 E5 81            [12] 2270 	mov	a,sp
      000624 24 EC            [12] 2271 	add	a,#0xec
      000626 F8               [12] 2272 	mov	r0,a
      000627 86 82            [24] 2273 	mov	dpl,@r0
      000629 08               [12] 2274 	inc	r0
      00062A 86 83            [24] 2275 	mov	dph,@r0
      00062C 08               [12] 2276 	inc	r0
      00062D 86 F0            [24] 2277 	mov	b,@r0
      00062F 22               [24] 2278 	ret
      000630                       2279 00158$:
      000630 E5 81            [12] 2280 	mov	a,sp
      000632 24 F7            [12] 2281 	add	a,#0xf7
      000634 F5 81            [12] 2282 	mov	sp,a
      000636 D0 04            [24] 2283 	pop	ar4
      000638 D0 06            [24] 2284 	pop	ar6
      00063A 02r06rE3         [24] 2285 	ljmp	00106$
      00063D                       2286 00105$:
                                   2287 ;	/home/user/contiki/core/net/rime/rudolph0.c:145: c->cb->write_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
      00063D E5 81            [12] 2288 	mov	a,sp
      00063F 24 FB            [12] 2289 	add	a,#0xfb
      000641 F8               [12] 2290 	mov	r0,a
      000642 74 52            [12] 2291 	mov	a,#0x52
      000644 26               [12] 2292 	add	a,@r0
      000645 FB               [12] 2293 	mov	r3,a
      000646 E4               [12] 2294 	clr	a
      000647 08               [12] 2295 	inc	r0
      000648 36               [12] 2296 	addc	a,@r0
      000649 FC               [12] 2297 	mov	r4,a
      00064A 08               [12] 2298 	inc	r0
      00064B 86 05            [24] 2299 	mov	ar5,@r0
      00064D 8B 82            [24] 2300 	mov	dpl,r3
      00064F 8C 83            [24] 2301 	mov	dph,r4
      000651 8D F0            [24] 2302 	mov	b,r5
      000653 12r00r00         [24] 2303 	lcall	__gptrget
      000656 FB               [12] 2304 	mov	r3,a
      000657 A3               [24] 2305 	inc	dptr
      000658 12r00r00         [24] 2306 	lcall	__gptrget
      00065B FC               [12] 2307 	mov	r4,a
      00065C A3               [24] 2308 	inc	dptr
      00065D 12r00r00         [24] 2309 	lcall	__gptrget
      000660 FD               [12] 2310 	mov	r5,a
      000661 8B 82            [24] 2311 	mov	dpl,r3
      000663 8C 83            [24] 2312 	mov	dph,r4
      000665 8D F0            [24] 2313 	mov	b,r5
      000667 12r00r00         [24] 2314 	lcall	__gptrget
      00066A FE               [12] 2315 	mov	r6,a
      00066B A3               [24] 2316 	inc	dptr
      00066C 12r00r00         [24] 2317 	lcall	__gptrget
      00066F FC               [12] 2318 	mov	r4,a
                                   2319 ;	/home/user/contiki/core/net/rime/rudolph0.c:146: RUDOLPH0_FLAG_NONE, p->data, p->datalen);
      000670 7A 00            [12] 2320 	mov	r2,#0x00
      000672 A8 81            [24] 2321 	mov	r0,sp
      000674 18               [12] 2322 	dec	r0
      000675 18               [12] 2323 	dec	r0
      000676 E5 81            [12] 2324 	mov	a,sp
      000678 24 F1            [12] 2325 	add	a,#0xf1
      00067A F9               [12] 2326 	mov	r1,a
      00067B 74 05            [12] 2327 	mov	a,#0x05
      00067D 26               [12] 2328 	add	a,@r0
      00067E F7               [12] 2329 	mov	@r1,a
      00067F E4               [12] 2330 	clr	a
      000680 08               [12] 2331 	inc	r0
      000681 36               [12] 2332 	addc	a,@r0
      000682 09               [12] 2333 	inc	r1
      000683 F7               [12] 2334 	mov	@r1,a
      000684 08               [12] 2335 	inc	r0
      000685 09               [12] 2336 	inc	r1
      000686 E6               [12] 2337 	mov	a,@r0
      000687 F7               [12] 2338 	mov	@r1,a
                                   2339 ;	/home/user/contiki/core/net/rime/rudolph0.c:145: c->cb->write_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
      000688 E5 81            [12] 2340 	mov	a,sp
      00068A 24 F4            [12] 2341 	add	a,#0xf4
      00068C F8               [12] 2342 	mov	r0,a
      00068D 86 03            [24] 2343 	mov	ar3,@r0
      00068F 08               [12] 2344 	inc	r0
      000690 E6               [12] 2345 	mov	a,@r0
      000691 54 03            [12] 2346 	anl	a,#0x03
      000693 A2 E0            [12] 2347 	mov	c,acc.0
      000695 CB               [12] 2348 	xch	a,r3
      000696 13               [12] 2349 	rrc	a
      000697 CB               [12] 2350 	xch	a,r3
      000698 13               [12] 2351 	rrc	a
      000699 A2 E0            [12] 2352 	mov	c,acc.0
      00069B CB               [12] 2353 	xch	a,r3
      00069C 13               [12] 2354 	rrc	a
      00069D CB               [12] 2355 	xch	a,r3
      00069E 13               [12] 2356 	rrc	a
      00069F CB               [12] 2357 	xch	a,r3
      0006A0 FD               [12] 2358 	mov	r5,a
      0006A1 C0 06            [24] 2359 	push	ar6
      0006A3 C0 04            [24] 2360 	push	ar4
      0006A5 C0 07            [24] 2361 	push	ar7
      0006A7 C0 02            [24] 2362 	push	ar2
      0006A9 E5 81            [12] 2363 	mov	a,sp
      0006AB 24 ED            [12] 2364 	add	a,#0xed
      0006AD F8               [12] 2365 	mov	r0,a
      0006AE E6               [12] 2366 	mov	a,@r0
      0006AF C0 E0            [24] 2367 	push	acc
      0006B1 08               [12] 2368 	inc	r0
      0006B2 E6               [12] 2369 	mov	a,@r0
      0006B3 C0 E0            [24] 2370 	push	acc
      0006B5 08               [12] 2371 	inc	r0
      0006B6 E6               [12] 2372 	mov	a,@r0
      0006B7 C0 E0            [24] 2373 	push	acc
      0006B9 E4               [12] 2374 	clr	a
      0006BA C0 E0            [24] 2375 	push	acc
      0006BC C0 E0            [24] 2376 	push	acc
      0006BE C0 03            [24] 2377 	push	ar3
      0006C0 C0 05            [24] 2378 	push	ar5
      0006C2 12r06rC7         [24] 2379 	lcall	00159$
      0006C5 80 12            [24] 2380 	sjmp	00160$
      0006C7                       2381 00159$:
      0006C7 C0 06            [24] 2382 	push	ar6
      0006C9 C0 04            [24] 2383 	push	ar4
      0006CB E5 81            [12] 2384 	mov	a,sp
      0006CD 24 EC            [12] 2385 	add	a,#0xec
      0006CF F8               [12] 2386 	mov	r0,a
      0006D0 86 82            [24] 2387 	mov	dpl,@r0
      0006D2 08               [12] 2388 	inc	r0
      0006D3 86 83            [24] 2389 	mov	dph,@r0
      0006D5 08               [12] 2390 	inc	r0
      0006D6 86 F0            [24] 2391 	mov	b,@r0
      0006D8 22               [24] 2392 	ret
      0006D9                       2393 00160$:
      0006D9 E5 81            [12] 2394 	mov	a,sp
      0006DB 24 F7            [12] 2395 	add	a,#0xf7
      0006DD F5 81            [12] 2396 	mov	sp,a
      0006DF D0 04            [24] 2397 	pop	ar4
      0006E1 D0 06            [24] 2398 	pop	ar6
      0006E3                       2399 00106$:
                                   2400 ;	/home/user/contiki/core/net/rime/rudolph0.c:148: c->current.h.chunk++;
      0006E3 E5 81            [12] 2401 	mov	a,sp
      0006E5 24 FB            [12] 2402 	add	a,#0xfb
      0006E7 F8               [12] 2403 	mov	r0,a
      0006E8 74 58            [12] 2404 	mov	a,#0x58
      0006EA 26               [12] 2405 	add	a,@r0
      0006EB FB               [12] 2406 	mov	r3,a
      0006EC E4               [12] 2407 	clr	a
      0006ED 08               [12] 2408 	inc	r0
      0006EE 36               [12] 2409 	addc	a,@r0
      0006EF FC               [12] 2410 	mov	r4,a
      0006F0 08               [12] 2411 	inc	r0
      0006F1 86 05            [24] 2412 	mov	ar5,@r0
      0006F3 74 02            [12] 2413 	mov	a,#0x02
      0006F5 2B               [12] 2414 	add	a,r3
      0006F6 FF               [12] 2415 	mov	r7,a
      0006F7 E4               [12] 2416 	clr	a
      0006F8 3C               [12] 2417 	addc	a,r4
      0006F9 FC               [12] 2418 	mov	r4,a
      0006FA 8D 06            [24] 2419 	mov	ar6,r5
      0006FC 8F 82            [24] 2420 	mov	dpl,r7
      0006FE 8C 83            [24] 2421 	mov	dph,r4
      000700 8E F0            [24] 2422 	mov	b,r6
      000702 12r00r00         [24] 2423 	lcall	__gptrget
      000705 FA               [12] 2424 	mov	r2,a
      000706 A3               [24] 2425 	inc	dptr
      000707 12r00r00         [24] 2426 	lcall	__gptrget
      00070A FD               [12] 2427 	mov	r5,a
      00070B 0A               [12] 2428 	inc	r2
      00070C BA 00 01         [24] 2429 	cjne	r2,#0x00,00161$
      00070F 0D               [12] 2430 	inc	r5
      000710                       2431 00161$:
      000710 8F 82            [24] 2432 	mov	dpl,r7
      000712 8C 83            [24] 2433 	mov	dph,r4
      000714 8E F0            [24] 2434 	mov	b,r6
      000716 EA               [12] 2435 	mov	a,r2
      000717 12r00r00         [24] 2436 	lcall	__gptrput
      00071A A3               [24] 2437 	inc	dptr
      00071B ED               [12] 2438 	mov	a,r5
      00071C 12r00r00         [24] 2439 	lcall	__gptrput
      00071F 80 1D            [24] 2440 	sjmp	00119$
      000721                       2441 00110$:
                                   2442 ;	/home/user/contiki/core/net/rime/rudolph0.c:150: } else if(p->h.chunk > c->current.h.chunk) {
      000721 E5 81            [12] 2443 	mov	a,sp
      000723 24 F4            [12] 2444 	add	a,#0xf4
      000725 F8               [12] 2445 	mov	r0,a
      000726 C3               [12] 2446 	clr	c
      000727 E6               [12] 2447 	mov	a,@r0
      000728 9E               [12] 2448 	subb	a,r6
      000729 08               [12] 2449 	inc	r0
      00072A E6               [12] 2450 	mov	a,@r0
      00072B 9F               [12] 2451 	subb	a,r7
      00072C 50 10            [24] 2452 	jnc	00119$
                                   2453 ;	/home/user/contiki/core/net/rime/rudolph0.c:152: send_nack(c);
      00072E E5 81            [12] 2454 	mov	a,sp
      000730 24 FB            [12] 2455 	add	a,#0xfb
      000732 F8               [12] 2456 	mov	r0,a
      000733 86 82            [24] 2457 	mov	dpl,@r0
      000735 08               [12] 2458 	inc	r0
      000736 86 83            [24] 2459 	mov	dph,@r0
      000738 08               [12] 2460 	inc	r0
      000739 86 F0            [24] 2461 	mov	b,@r0
      00073B 12r01r10         [24] 2462 	lcall	_send_nack
      00073E                       2463 00119$:
      00073E E5 81            [12] 2464 	mov	a,sp
      000740 24 EF            [12] 2465 	add	a,#0xEF
      000742 F5 81            [12] 2466 	mov	sp,a
      000744 22               [24] 2467 	ret
                                   2468 ;------------------------------------------------------------
                                   2469 ;Allocation info for local variables in function 'recv_nack'
                                   2470 ;------------------------------------------------------------
                                   2471 ;polite                    Allocated to registers r5 r6 r7 
                                   2472 ;c                         Allocated to stack - sp -2
                                   2473 ;p                         Allocated to registers r2 r3 r4 
                                   2474 ;------------------------------------------------------------
                                   2475 ;	/home/user/contiki/core/net/rime/rudolph0.c:161: recv_nack(struct polite_conn *polite)
                                   2476 ;	-----------------------------------------
                                   2477 ;	 function recv_nack
                                   2478 ;	-----------------------------------------
      000745                       2479 _recv_nack:
      000745 05 81            [12] 2480 	inc	sp
      000747 05 81            [12] 2481 	inc	sp
      000749 05 81            [12] 2482 	inc	sp
      00074B AD 82            [24] 2483 	mov	r5,dpl
      00074D AE 83            [24] 2484 	mov	r6,dph
      00074F AF F0            [24] 2485 	mov	r7,b
                                   2486 ;	/home/user/contiki/core/net/rime/rudolph0.c:163: struct rudolph0_conn *c = (struct rudolph0_conn *)
      000751 ED               [12] 2487 	mov	a,r5
      000752 24 D6            [12] 2488 	add	a,#0xD6
      000754 FD               [12] 2489 	mov	r5,a
      000755 EE               [12] 2490 	mov	a,r6
      000756 34 FF            [12] 2491 	addc	a,#0xFF
      000758 FE               [12] 2492 	mov	r6,a
      000759 A8 81            [24] 2493 	mov	r0,sp
      00075B 18               [12] 2494 	dec	r0
      00075C 18               [12] 2495 	dec	r0
      00075D A6 05            [24] 2496 	mov	@r0,ar5
      00075F 08               [12] 2497 	inc	r0
      000760 A6 06            [24] 2498 	mov	@r0,ar6
      000762 08               [12] 2499 	inc	r0
      000763 A6 07            [24] 2500 	mov	@r0,ar7
                                   2501 ;	/home/user/contiki/core/net/rime/rudolph0.c:166: struct rudolph0_datapacket *p = packetbuf_dataptr();
      000765 12r00r00         [24] 2502 	lcall	_packetbuf_dataptr
                                   2503 ;	/home/user/contiki/core/net/rime/rudolph0.c:168: if(p->h.type == TYPE_NACK && c->state == STATE_SENDER) {
      000768 AA 82            [24] 2504 	mov	r2,dpl
      00076A AB 83            [24] 2505 	mov	r3,dph
      00076C AC F0            [24] 2506 	mov	r4,b
      00076E 12r00r00         [24] 2507 	lcall	__gptrget
      000771 FF               [12] 2508 	mov	r7,a
      000772 BF 01 02         [24] 2509 	cjne	r7,#0x01,00118$
      000775 80 03            [24] 2510 	sjmp	00119$
      000777                       2511 00118$:
      000777 02r08r7B         [24] 2512 	ljmp	00107$
      00077A                       2513 00119$:
      00077A A8 81            [24] 2514 	mov	r0,sp
      00077C 18               [12] 2515 	dec	r0
      00077D 18               [12] 2516 	dec	r0
      00077E 74 57            [12] 2517 	mov	a,#0x57
      000780 26               [12] 2518 	add	a,@r0
      000781 FD               [12] 2519 	mov	r5,a
      000782 E4               [12] 2520 	clr	a
      000783 08               [12] 2521 	inc	r0
      000784 36               [12] 2522 	addc	a,@r0
      000785 FE               [12] 2523 	mov	r6,a
      000786 08               [12] 2524 	inc	r0
      000787 86 07            [24] 2525 	mov	ar7,@r0
      000789 8D 82            [24] 2526 	mov	dpl,r5
      00078B 8E 83            [24] 2527 	mov	dph,r6
      00078D 8F F0            [24] 2528 	mov	b,r7
      00078F 12r00r00         [24] 2529 	lcall	__gptrget
      000792 FD               [12] 2530 	mov	r5,a
      000793 BD 01 02         [24] 2531 	cjne	r5,#0x01,00120$
      000796 80 03            [24] 2532 	sjmp	00121$
      000798                       2533 00120$:
      000798 02r08r7B         [24] 2534 	ljmp	00107$
      00079B                       2535 00121$:
                                   2536 ;	/home/user/contiki/core/net/rime/rudolph0.c:169: if(p->h.version == c->current.h.version) {
      00079B 74 01            [12] 2537 	mov	a,#0x01
      00079D 2A               [12] 2538 	add	a,r2
      00079E FD               [12] 2539 	mov	r5,a
      00079F E4               [12] 2540 	clr	a
      0007A0 3B               [12] 2541 	addc	a,r3
      0007A1 FE               [12] 2542 	mov	r6,a
      0007A2 8C 07            [24] 2543 	mov	ar7,r4
      0007A4 8D 82            [24] 2544 	mov	dpl,r5
      0007A6 8E 83            [24] 2545 	mov	dph,r6
      0007A8 8F F0            [24] 2546 	mov	b,r7
      0007AA 12r00r00         [24] 2547 	lcall	__gptrget
      0007AD FD               [12] 2548 	mov	r5,a
      0007AE C0 02            [24] 2549 	push	ar2
      0007B0 C0 03            [24] 2550 	push	ar3
      0007B2 C0 04            [24] 2551 	push	ar4
      0007B4 E5 81            [12] 2552 	mov	a,sp
      0007B6 24 FB            [12] 2553 	add	a,#0xfb
      0007B8 F8               [12] 2554 	mov	r0,a
      0007B9 74 59            [12] 2555 	mov	a,#0x59
      0007BB 26               [12] 2556 	add	a,@r0
      0007BC FC               [12] 2557 	mov	r4,a
      0007BD E4               [12] 2558 	clr	a
      0007BE 08               [12] 2559 	inc	r0
      0007BF 36               [12] 2560 	addc	a,@r0
      0007C0 FE               [12] 2561 	mov	r6,a
      0007C1 08               [12] 2562 	inc	r0
      0007C2 86 07            [24] 2563 	mov	ar7,@r0
      0007C4 8C 82            [24] 2564 	mov	dpl,r4
      0007C6 8E 83            [24] 2565 	mov	dph,r6
      0007C8 8F F0            [24] 2566 	mov	b,r7
      0007CA 12r00r00         [24] 2567 	lcall	__gptrget
      0007CD FC               [12] 2568 	mov	r4,a
      0007CE ED               [12] 2569 	mov	a,r5
      0007CF B5 04 02         [24] 2570 	cjne	a,ar4,00122$
      0007D2 80 08            [24] 2571 	sjmp	00123$
      0007D4                       2572 00122$:
      0007D4 D0 04            [24] 2573 	pop	ar4
      0007D6 D0 03            [24] 2574 	pop	ar3
      0007D8 D0 02            [24] 2575 	pop	ar2
      0007DA 80 3C            [24] 2576 	sjmp	00102$
      0007DC                       2577 00123$:
      0007DC D0 04            [24] 2578 	pop	ar4
      0007DE D0 03            [24] 2579 	pop	ar3
      0007E0 D0 02            [24] 2580 	pop	ar2
                                   2581 ;	/home/user/contiki/core/net/rime/rudolph0.c:171: c->current.h.chunk = p->h.chunk;
      0007E2 A8 81            [24] 2582 	mov	r0,sp
      0007E4 18               [12] 2583 	dec	r0
      0007E5 18               [12] 2584 	dec	r0
      0007E6 74 5A            [12] 2585 	mov	a,#0x5A
      0007E8 26               [12] 2586 	add	a,@r0
      0007E9 FD               [12] 2587 	mov	r5,a
      0007EA E4               [12] 2588 	clr	a
      0007EB 08               [12] 2589 	inc	r0
      0007EC 36               [12] 2590 	addc	a,@r0
      0007ED FE               [12] 2591 	mov	r6,a
      0007EE 08               [12] 2592 	inc	r0
      0007EF 86 07            [24] 2593 	mov	ar7,@r0
      0007F1 74 02            [12] 2594 	mov	a,#0x02
      0007F3 2A               [12] 2595 	add	a,r2
      0007F4 FA               [12] 2596 	mov	r2,a
      0007F5 E4               [12] 2597 	clr	a
      0007F6 3B               [12] 2598 	addc	a,r3
      0007F7 FB               [12] 2599 	mov	r3,a
      0007F8 8A 82            [24] 2600 	mov	dpl,r2
      0007FA 8B 83            [24] 2601 	mov	dph,r3
      0007FC 8C F0            [24] 2602 	mov	b,r4
      0007FE 12r00r00         [24] 2603 	lcall	__gptrget
      000801 FA               [12] 2604 	mov	r2,a
      000802 A3               [24] 2605 	inc	dptr
      000803 12r00r00         [24] 2606 	lcall	__gptrget
      000806 FB               [12] 2607 	mov	r3,a
      000807 8D 82            [24] 2608 	mov	dpl,r5
      000809 8E 83            [24] 2609 	mov	dph,r6
      00080B 8F F0            [24] 2610 	mov	b,r7
      00080D EA               [12] 2611 	mov	a,r2
      00080E 12r00r00         [24] 2612 	lcall	__gptrput
      000811 A3               [24] 2613 	inc	dptr
      000812 EB               [12] 2614 	mov	a,r3
      000813 12r00r00         [24] 2615 	lcall	__gptrput
      000816 80 1E            [24] 2616 	sjmp	00103$
      000818                       2617 00102$:
                                   2618 ;	/home/user/contiki/core/net/rime/rudolph0.c:174: c->current.h.chunk = 0;
      000818 A8 81            [24] 2619 	mov	r0,sp
      00081A 18               [12] 2620 	dec	r0
      00081B 18               [12] 2621 	dec	r0
      00081C 74 5A            [12] 2622 	mov	a,#0x5A
      00081E 26               [12] 2623 	add	a,@r0
      00081F FD               [12] 2624 	mov	r5,a
      000820 E4               [12] 2625 	clr	a
      000821 08               [12] 2626 	inc	r0
      000822 36               [12] 2627 	addc	a,@r0
      000823 FE               [12] 2628 	mov	r6,a
      000824 08               [12] 2629 	inc	r0
      000825 86 07            [24] 2630 	mov	ar7,@r0
      000827 8D 82            [24] 2631 	mov	dpl,r5
      000829 8E 83            [24] 2632 	mov	dph,r6
      00082B 8F F0            [24] 2633 	mov	b,r7
      00082D E4               [12] 2634 	clr	a
      00082E 12r00r00         [24] 2635 	lcall	__gptrput
      000831 A3               [24] 2636 	inc	dptr
      000832 E4               [12] 2637 	clr	a
      000833 12r00r00         [24] 2638 	lcall	__gptrput
      000836                       2639 00103$:
                                   2640 ;	/home/user/contiki/core/net/rime/rudolph0.c:176: read_new_datapacket(c);
      000836 A8 81            [24] 2641 	mov	r0,sp
      000838 18               [12] 2642 	dec	r0
      000839 18               [12] 2643 	dec	r0
      00083A 86 82            [24] 2644 	mov	dpl,@r0
      00083C 08               [12] 2645 	inc	r0
      00083D 86 83            [24] 2646 	mov	dph,@r0
      00083F 08               [12] 2647 	inc	r0
      000840 86 F0            [24] 2648 	mov	b,@r0
      000842 12r00r00         [24] 2649 	lcall	_read_new_datapacket
                                   2650 ;	/home/user/contiki/core/net/rime/rudolph0.c:177: stbroadcast_set_timer(&c->c, c->send_interval);
      000845 A8 81            [24] 2651 	mov	r0,sp
      000847 18               [12] 2652 	dec	r0
      000848 18               [12] 2653 	dec	r0
      000849 74 55            [12] 2654 	mov	a,#0x55
      00084B 26               [12] 2655 	add	a,@r0
      00084C FD               [12] 2656 	mov	r5,a
      00084D E4               [12] 2657 	clr	a
      00084E 08               [12] 2658 	inc	r0
      00084F 36               [12] 2659 	addc	a,@r0
      000850 FE               [12] 2660 	mov	r6,a
      000851 08               [12] 2661 	inc	r0
      000852 86 07            [24] 2662 	mov	ar7,@r0
      000854 8D 82            [24] 2663 	mov	dpl,r5
      000856 8E 83            [24] 2664 	mov	dph,r6
      000858 8F F0            [24] 2665 	mov	b,r7
      00085A 12r00r00         [24] 2666 	lcall	__gptrget
      00085D FD               [12] 2667 	mov	r5,a
      00085E A3               [24] 2668 	inc	dptr
      00085F 12r00r00         [24] 2669 	lcall	__gptrget
      000862 FE               [12] 2670 	mov	r6,a
      000863 C0 05            [24] 2671 	push	ar5
      000865 C0 06            [24] 2672 	push	ar6
      000867 E5 81            [12] 2673 	mov	a,sp
      000869 24 FC            [12] 2674 	add	a,#0xfc
      00086B F8               [12] 2675 	mov	r0,a
      00086C 86 82            [24] 2676 	mov	dpl,@r0
      00086E 08               [12] 2677 	inc	r0
      00086F 86 83            [24] 2678 	mov	dph,@r0
      000871 08               [12] 2679 	inc	r0
      000872 86 F0            [24] 2680 	mov	b,@r0
      000874 12r00r00         [24] 2681 	lcall	_stbroadcast_set_timer
      000877 15 81            [12] 2682 	dec	sp
      000879 15 81            [12] 2683 	dec	sp
      00087B                       2684 00107$:
      00087B 15 81            [12] 2685 	dec	sp
      00087D 15 81            [12] 2686 	dec	sp
      00087F 15 81            [12] 2687 	dec	sp
      000881 22               [24] 2688 	ret
                                   2689 ;------------------------------------------------------------
                                   2690 ;Allocation info for local variables in function 'rudolph0_open'
                                   2691 ;------------------------------------------------------------
                                   2692 ;channel                   Allocated to stack - sp -6
                                   2693 ;cb                        Allocated to stack - sp -9
                                   2694 ;c                         Allocated to stack - sp -2
                                   2695 ;------------------------------------------------------------
                                   2696 ;	/home/user/contiki/core/net/rime/rudolph0.c:185: rudolph0_open(struct rudolph0_conn *c, uint16_t channel,
                                   2697 ;	-----------------------------------------
                                   2698 ;	 function rudolph0_open
                                   2699 ;	-----------------------------------------
      000882                       2700 _rudolph0_open:
      000882 C0 82            [24] 2701 	push	dpl
      000884 C0 83            [24] 2702 	push	dph
      000886 C0 F0            [24] 2703 	push	b
                                   2704 ;	/home/user/contiki/core/net/rime/rudolph0.c:188: stbroadcast_open(&c->c, channel, &stbroadcast);
      000888 74r06            [12] 2705 	mov	a,#_stbroadcast
      00088A C0 E0            [24] 2706 	push	acc
      00088C 74s00            [12] 2707 	mov	a,#(_stbroadcast >> 8)
      00088E C0 E0            [24] 2708 	push	acc
      000890 74 80            [12] 2709 	mov	a,#0x80
      000892 C0 E0            [24] 2710 	push	acc
      000894 E5 81            [12] 2711 	mov	a,sp
      000896 24 F7            [12] 2712 	add	a,#0xf7
      000898 F8               [12] 2713 	mov	r0,a
      000899 E6               [12] 2714 	mov	a,@r0
      00089A C0 E0            [24] 2715 	push	acc
      00089C 08               [12] 2716 	inc	r0
      00089D E6               [12] 2717 	mov	a,@r0
      00089E C0 E0            [24] 2718 	push	acc
      0008A0 E5 81            [12] 2719 	mov	a,sp
      0008A2 24 F9            [12] 2720 	add	a,#0xf9
      0008A4 F8               [12] 2721 	mov	r0,a
      0008A5 86 82            [24] 2722 	mov	dpl,@r0
      0008A7 08               [12] 2723 	inc	r0
      0008A8 86 83            [24] 2724 	mov	dph,@r0
      0008AA 08               [12] 2725 	inc	r0
      0008AB 86 F0            [24] 2726 	mov	b,@r0
      0008AD 12r00r00         [24] 2727 	lcall	_stbroadcast_open
      0008B0 E5 81            [12] 2728 	mov	a,sp
      0008B2 24 FB            [12] 2729 	add	a,#0xfb
                                   2730 ;	/home/user/contiki/core/net/rime/rudolph0.c:189: polite_open(&c->nackc, channel + 1, &polite);
      0008B4 F5 81            [12] 2731 	mov	sp,a
      0008B6 24 FA            [12] 2732 	add	a,#0xfa
      0008B8 F8               [12] 2733 	mov	r0,a
      0008B9 74 01            [12] 2734 	mov	a,#0x01
      0008BB 26               [12] 2735 	add	a,@r0
      0008BC FB               [12] 2736 	mov	r3,a
      0008BD E4               [12] 2737 	clr	a
      0008BE 08               [12] 2738 	inc	r0
      0008BF 36               [12] 2739 	addc	a,@r0
      0008C0 FC               [12] 2740 	mov	r4,a
      0008C1 A8 81            [24] 2741 	mov	r0,sp
      0008C3 18               [12] 2742 	dec	r0
      0008C4 18               [12] 2743 	dec	r0
      0008C5 74 2A            [12] 2744 	mov	a,#0x2A
      0008C7 26               [12] 2745 	add	a,@r0
      0008C8 FA               [12] 2746 	mov	r2,a
      0008C9 E4               [12] 2747 	clr	a
      0008CA 08               [12] 2748 	inc	r0
      0008CB 36               [12] 2749 	addc	a,@r0
      0008CC FE               [12] 2750 	mov	r6,a
      0008CD 08               [12] 2751 	inc	r0
      0008CE 86 07            [24] 2752 	mov	ar7,@r0
      0008D0 74r00            [12] 2753 	mov	a,#_polite
      0008D2 C0 E0            [24] 2754 	push	acc
      0008D4 74s00            [12] 2755 	mov	a,#(_polite >> 8)
      0008D6 C0 E0            [24] 2756 	push	acc
      0008D8 74 80            [12] 2757 	mov	a,#0x80
      0008DA C0 E0            [24] 2758 	push	acc
      0008DC C0 03            [24] 2759 	push	ar3
      0008DE C0 04            [24] 2760 	push	ar4
      0008E0 8A 82            [24] 2761 	mov	dpl,r2
      0008E2 8E 83            [24] 2762 	mov	dph,r6
      0008E4 8F F0            [24] 2763 	mov	b,r7
      0008E6 12r00r00         [24] 2764 	lcall	_polite_open
      0008E9 E5 81            [12] 2765 	mov	a,sp
      0008EB 24 FB            [12] 2766 	add	a,#0xfb
      0008ED F5 81            [12] 2767 	mov	sp,a
                                   2768 ;	/home/user/contiki/core/net/rime/rudolph0.c:190: c->cb = cb;
      0008EF A8 81            [24] 2769 	mov	r0,sp
      0008F1 18               [12] 2770 	dec	r0
      0008F2 18               [12] 2771 	dec	r0
      0008F3 74 52            [12] 2772 	mov	a,#0x52
      0008F5 26               [12] 2773 	add	a,@r0
      0008F6 FD               [12] 2774 	mov	r5,a
      0008F7 E4               [12] 2775 	clr	a
      0008F8 08               [12] 2776 	inc	r0
      0008F9 36               [12] 2777 	addc	a,@r0
      0008FA FE               [12] 2778 	mov	r6,a
      0008FB 08               [12] 2779 	inc	r0
      0008FC 86 07            [24] 2780 	mov	ar7,@r0
      0008FE 8D 82            [24] 2781 	mov	dpl,r5
      000900 8E 83            [24] 2782 	mov	dph,r6
      000902 8F F0            [24] 2783 	mov	b,r7
      000904 E5 81            [12] 2784 	mov	a,sp
      000906 24 F7            [12] 2785 	add	a,#0xf7
      000908 F8               [12] 2786 	mov	r0,a
      000909 E6               [12] 2787 	mov	a,@r0
      00090A 12r00r00         [24] 2788 	lcall	__gptrput
      00090D A3               [24] 2789 	inc	dptr
      00090E 08               [12] 2790 	inc	r0
      00090F E6               [12] 2791 	mov	a,@r0
      000910 12r00r00         [24] 2792 	lcall	__gptrput
      000913 A3               [24] 2793 	inc	dptr
      000914 08               [12] 2794 	inc	r0
      000915 E6               [12] 2795 	mov	a,@r0
      000916 12r00r00         [24] 2796 	lcall	__gptrput
                                   2797 ;	/home/user/contiki/core/net/rime/rudolph0.c:191: c->current.h.version = 0;
      000919 A8 81            [24] 2798 	mov	r0,sp
      00091B 18               [12] 2799 	dec	r0
      00091C 18               [12] 2800 	dec	r0
      00091D 74 58            [12] 2801 	mov	a,#0x58
      00091F 26               [12] 2802 	add	a,@r0
      000920 FD               [12] 2803 	mov	r5,a
      000921 E4               [12] 2804 	clr	a
      000922 08               [12] 2805 	inc	r0
      000923 36               [12] 2806 	addc	a,@r0
      000924 FE               [12] 2807 	mov	r6,a
      000925 08               [12] 2808 	inc	r0
      000926 86 07            [24] 2809 	mov	ar7,@r0
      000928 0D               [12] 2810 	inc	r5
      000929 BD 00 01         [24] 2811 	cjne	r5,#0x00,00103$
      00092C 0E               [12] 2812 	inc	r6
      00092D                       2813 00103$:
      00092D 8D 82            [24] 2814 	mov	dpl,r5
      00092F 8E 83            [24] 2815 	mov	dph,r6
      000931 8F F0            [24] 2816 	mov	b,r7
      000933 E4               [12] 2817 	clr	a
      000934 12r00r00         [24] 2818 	lcall	__gptrput
                                   2819 ;	/home/user/contiki/core/net/rime/rudolph0.c:192: c->state = STATE_RECEIVER;
      000937 A8 81            [24] 2820 	mov	r0,sp
      000939 18               [12] 2821 	dec	r0
      00093A 18               [12] 2822 	dec	r0
      00093B 74 57            [12] 2823 	mov	a,#0x57
      00093D 26               [12] 2824 	add	a,@r0
      00093E FD               [12] 2825 	mov	r5,a
      00093F E4               [12] 2826 	clr	a
      000940 08               [12] 2827 	inc	r0
      000941 36               [12] 2828 	addc	a,@r0
      000942 FE               [12] 2829 	mov	r6,a
      000943 08               [12] 2830 	inc	r0
      000944 86 07            [24] 2831 	mov	ar7,@r0
      000946 8D 82            [24] 2832 	mov	dpl,r5
      000948 8E 83            [24] 2833 	mov	dph,r6
      00094A 8F F0            [24] 2834 	mov	b,r7
      00094C E4               [12] 2835 	clr	a
      00094D 12r00r00         [24] 2836 	lcall	__gptrput
                                   2837 ;	/home/user/contiki/core/net/rime/rudolph0.c:193: c->send_interval = DEFAULT_SEND_INTERVAL;
      000950 A8 81            [24] 2838 	mov	r0,sp
      000952 18               [12] 2839 	dec	r0
      000953 18               [12] 2840 	dec	r0
      000954 74 55            [12] 2841 	mov	a,#0x55
      000956 26               [12] 2842 	add	a,@r0
      000957 FD               [12] 2843 	mov	r5,a
      000958 E4               [12] 2844 	clr	a
      000959 08               [12] 2845 	inc	r0
      00095A 36               [12] 2846 	addc	a,@r0
      00095B FE               [12] 2847 	mov	r6,a
      00095C 08               [12] 2848 	inc	r0
      00095D 86 07            [24] 2849 	mov	ar7,@r0
      00095F 8D 82            [24] 2850 	mov	dpl,r5
      000961 8E 83            [24] 2851 	mov	dph,r6
      000963 8F F0            [24] 2852 	mov	b,r7
      000965 74 40            [12] 2853 	mov	a,#0x40
      000967 12r00r00         [24] 2854 	lcall	__gptrput
      00096A A3               [24] 2855 	inc	dptr
      00096B E4               [12] 2856 	clr	a
      00096C 12r00r00         [24] 2857 	lcall	__gptrput
      00096F 15 81            [12] 2858 	dec	sp
      000971 15 81            [12] 2859 	dec	sp
      000973 15 81            [12] 2860 	dec	sp
      000975 22               [24] 2861 	ret
                                   2862 ;------------------------------------------------------------
                                   2863 ;Allocation info for local variables in function 'rudolph0_close'
                                   2864 ;------------------------------------------------------------
                                   2865 ;c                         Allocated to registers r5 r6 r7 
                                   2866 ;------------------------------------------------------------
                                   2867 ;	/home/user/contiki/core/net/rime/rudolph0.c:197: rudolph0_close(struct rudolph0_conn *c)
                                   2868 ;	-----------------------------------------
                                   2869 ;	 function rudolph0_close
                                   2870 ;	-----------------------------------------
      000976                       2871 _rudolph0_close:
                                   2872 ;	/home/user/contiki/core/net/rime/rudolph0.c:199: stbroadcast_close(&c->c);
      000976 AD 82            [24] 2873 	mov	r5,dpl
      000978 AE 83            [24] 2874 	mov	r6,dph
      00097A AF F0            [24] 2875 	mov	r7,b
      00097C C0 07            [24] 2876 	push	ar7
      00097E C0 06            [24] 2877 	push	ar6
      000980 C0 05            [24] 2878 	push	ar5
      000982 12r00r00         [24] 2879 	lcall	_stbroadcast_close
      000985 D0 05            [24] 2880 	pop	ar5
      000987 D0 06            [24] 2881 	pop	ar6
      000989 D0 07            [24] 2882 	pop	ar7
                                   2883 ;	/home/user/contiki/core/net/rime/rudolph0.c:200: polite_close(&c->nackc);
      00098B 74 2A            [12] 2884 	mov	a,#0x2A
      00098D 2D               [12] 2885 	add	a,r5
      00098E FD               [12] 2886 	mov	r5,a
      00098F E4               [12] 2887 	clr	a
      000990 3E               [12] 2888 	addc	a,r6
      000991 FE               [12] 2889 	mov	r6,a
      000992 8D 82            [24] 2890 	mov	dpl,r5
      000994 8E 83            [24] 2891 	mov	dph,r6
      000996 8F F0            [24] 2892 	mov	b,r7
      000998 02r00r00         [24] 2893 	ljmp	_polite_close
                                   2894 ;------------------------------------------------------------
                                   2895 ;Allocation info for local variables in function 'rudolph0_send'
                                   2896 ;------------------------------------------------------------
                                   2897 ;send_interval             Allocated to stack - sp -9
                                   2898 ;c                         Allocated to stack - sp -5
                                   2899 ;sloc0                     Allocated to stack - sp -2
                                   2900 ;------------------------------------------------------------
                                   2901 ;	/home/user/contiki/core/net/rime/rudolph0.c:204: rudolph0_send(struct rudolph0_conn *c, clock_time_t send_interval)
                                   2902 ;	-----------------------------------------
                                   2903 ;	 function rudolph0_send
                                   2904 ;	-----------------------------------------
      00099B                       2905 _rudolph0_send:
      00099B C0 82            [24] 2906 	push	dpl
      00099D C0 83            [24] 2907 	push	dph
      00099F C0 F0            [24] 2908 	push	b
      0009A1 05 81            [12] 2909 	inc	sp
      0009A3 05 81            [12] 2910 	inc	sp
      0009A5 05 81            [12] 2911 	inc	sp
                                   2912 ;	/home/user/contiki/core/net/rime/rudolph0.c:206: c->state = STATE_SENDER;
      0009A7 E5 81            [12] 2913 	mov	a,sp
      0009A9 24 FB            [12] 2914 	add	a,#0xfb
      0009AB F8               [12] 2915 	mov	r0,a
      0009AC 74 57            [12] 2916 	mov	a,#0x57
      0009AE 26               [12] 2917 	add	a,@r0
      0009AF FA               [12] 2918 	mov	r2,a
      0009B0 E4               [12] 2919 	clr	a
      0009B1 08               [12] 2920 	inc	r0
      0009B2 36               [12] 2921 	addc	a,@r0
      0009B3 FB               [12] 2922 	mov	r3,a
      0009B4 08               [12] 2923 	inc	r0
      0009B5 86 04            [24] 2924 	mov	ar4,@r0
      0009B7 8A 82            [24] 2925 	mov	dpl,r2
      0009B9 8B 83            [24] 2926 	mov	dph,r3
      0009BB 8C F0            [24] 2927 	mov	b,r4
      0009BD 74 01            [12] 2928 	mov	a,#0x01
      0009BF 12r00r00         [24] 2929 	lcall	__gptrput
                                   2930 ;	/home/user/contiki/core/net/rime/rudolph0.c:207: c->current.h.version++;
      0009C2 E5 81            [12] 2931 	mov	a,sp
      0009C4 24 FB            [12] 2932 	add	a,#0xfb
      0009C6 F8               [12] 2933 	mov	r0,a
      0009C7 74 58            [12] 2934 	mov	a,#0x58
      0009C9 26               [12] 2935 	add	a,@r0
      0009CA FA               [12] 2936 	mov	r2,a
      0009CB E4               [12] 2937 	clr	a
      0009CC 08               [12] 2938 	inc	r0
      0009CD 36               [12] 2939 	addc	a,@r0
      0009CE FB               [12] 2940 	mov	r3,a
      0009CF 08               [12] 2941 	inc	r0
      0009D0 86 04            [24] 2942 	mov	ar4,@r0
      0009D2 A8 81            [24] 2943 	mov	r0,sp
      0009D4 18               [12] 2944 	dec	r0
      0009D5 18               [12] 2945 	dec	r0
      0009D6 74 01            [12] 2946 	mov	a,#0x01
      0009D8 2A               [12] 2947 	add	a,r2
      0009D9 F6               [12] 2948 	mov	@r0,a
      0009DA E4               [12] 2949 	clr	a
      0009DB 3B               [12] 2950 	addc	a,r3
      0009DC 08               [12] 2951 	inc	r0
      0009DD F6               [12] 2952 	mov	@r0,a
      0009DE 08               [12] 2953 	inc	r0
      0009DF A6 04            [24] 2954 	mov	@r0,ar4
      0009E1 A8 81            [24] 2955 	mov	r0,sp
      0009E3 18               [12] 2956 	dec	r0
      0009E4 18               [12] 2957 	dec	r0
      0009E5 86 82            [24] 2958 	mov	dpl,@r0
      0009E7 08               [12] 2959 	inc	r0
      0009E8 86 83            [24] 2960 	mov	dph,@r0
      0009EA 08               [12] 2961 	inc	r0
      0009EB 86 F0            [24] 2962 	mov	b,@r0
      0009ED 12r00r00         [24] 2963 	lcall	__gptrget
      0009F0 FF               [12] 2964 	mov	r7,a
      0009F1 0F               [12] 2965 	inc	r7
      0009F2 A8 81            [24] 2966 	mov	r0,sp
      0009F4 18               [12] 2967 	dec	r0
      0009F5 18               [12] 2968 	dec	r0
      0009F6 86 82            [24] 2969 	mov	dpl,@r0
      0009F8 08               [12] 2970 	inc	r0
      0009F9 86 83            [24] 2971 	mov	dph,@r0
      0009FB 08               [12] 2972 	inc	r0
      0009FC 86 F0            [24] 2973 	mov	b,@r0
      0009FE EF               [12] 2974 	mov	a,r7
      0009FF 12r00r00         [24] 2975 	lcall	__gptrput
                                   2976 ;	/home/user/contiki/core/net/rime/rudolph0.c:208: c->current.h.version++;
      000A02 0F               [12] 2977 	inc	r7
      000A03 A8 81            [24] 2978 	mov	r0,sp
      000A05 18               [12] 2979 	dec	r0
      000A06 18               [12] 2980 	dec	r0
      000A07 86 82            [24] 2981 	mov	dpl,@r0
      000A09 08               [12] 2982 	inc	r0
      000A0A 86 83            [24] 2983 	mov	dph,@r0
      000A0C 08               [12] 2984 	inc	r0
      000A0D 86 F0            [24] 2985 	mov	b,@r0
      000A0F EF               [12] 2986 	mov	a,r7
      000A10 12r00r00         [24] 2987 	lcall	__gptrput
                                   2988 ;	/home/user/contiki/core/net/rime/rudolph0.c:209: c->current.h.chunk = 0;
      000A13 74 02            [12] 2989 	mov	a,#0x02
      000A15 2A               [12] 2990 	add	a,r2
      000A16 FD               [12] 2991 	mov	r5,a
      000A17 E4               [12] 2992 	clr	a
      000A18 3B               [12] 2993 	addc	a,r3
      000A19 FE               [12] 2994 	mov	r6,a
      000A1A 8C 07            [24] 2995 	mov	ar7,r4
      000A1C 8D 82            [24] 2996 	mov	dpl,r5
      000A1E 8E 83            [24] 2997 	mov	dph,r6
      000A20 8F F0            [24] 2998 	mov	b,r7
      000A22 E4               [12] 2999 	clr	a
      000A23 12r00r00         [24] 3000 	lcall	__gptrput
      000A26 A3               [24] 3001 	inc	dptr
      000A27 E4               [12] 3002 	clr	a
      000A28 12r00r00         [24] 3003 	lcall	__gptrput
                                   3004 ;	/home/user/contiki/core/net/rime/rudolph0.c:210: c->current.h.type = TYPE_DATA;
      000A2B 8A 82            [24] 3005 	mov	dpl,r2
      000A2D 8B 83            [24] 3006 	mov	dph,r3
      000A2F 8C F0            [24] 3007 	mov	b,r4
      000A31 E4               [12] 3008 	clr	a
      000A32 12r00r00         [24] 3009 	lcall	__gptrput
                                   3010 ;	/home/user/contiki/core/net/rime/rudolph0.c:211: read_new_datapacket(c);
      000A35 E5 81            [12] 3011 	mov	a,sp
      000A37 24 FB            [12] 3012 	add	a,#0xfb
      000A39 F8               [12] 3013 	mov	r0,a
      000A3A 86 82            [24] 3014 	mov	dpl,@r0
      000A3C 08               [12] 3015 	inc	r0
      000A3D 86 83            [24] 3016 	mov	dph,@r0
      000A3F 08               [12] 3017 	inc	r0
      000A40 86 F0            [24] 3018 	mov	b,@r0
      000A42 12r00r00         [24] 3019 	lcall	_read_new_datapacket
                                   3020 ;	/home/user/contiki/core/net/rime/rudolph0.c:212: packetbuf_reference(&c->current, sizeof(struct rudolph0_datapacket));
      000A45 E5 81            [12] 3021 	mov	a,sp
      000A47 24 FB            [12] 3022 	add	a,#0xfb
      000A49 F8               [12] 3023 	mov	r0,a
      000A4A 74 58            [12] 3024 	mov	a,#0x58
      000A4C 26               [12] 3025 	add	a,@r0
      000A4D FD               [12] 3026 	mov	r5,a
      000A4E E4               [12] 3027 	clr	a
      000A4F 08               [12] 3028 	inc	r0
      000A50 36               [12] 3029 	addc	a,@r0
      000A51 FE               [12] 3030 	mov	r6,a
      000A52 08               [12] 3031 	inc	r0
      000A53 86 07            [24] 3032 	mov	ar7,@r0
      000A55 74 45            [12] 3033 	mov	a,#0x45
      000A57 C0 E0            [24] 3034 	push	acc
      000A59 E4               [12] 3035 	clr	a
      000A5A C0 E0            [24] 3036 	push	acc
      000A5C 8D 82            [24] 3037 	mov	dpl,r5
      000A5E 8E 83            [24] 3038 	mov	dph,r6
      000A60 8F F0            [24] 3039 	mov	b,r7
      000A62 12r00r00         [24] 3040 	lcall	_packetbuf_reference
      000A65 15 81            [12] 3041 	dec	sp
      000A67 15 81            [12] 3042 	dec	sp
                                   3043 ;	/home/user/contiki/core/net/rime/rudolph0.c:213: c->send_interval = send_interval;
      000A69 E5 81            [12] 3044 	mov	a,sp
      000A6B 24 FB            [12] 3045 	add	a,#0xfb
      000A6D F8               [12] 3046 	mov	r0,a
      000A6E 74 55            [12] 3047 	mov	a,#0x55
      000A70 26               [12] 3048 	add	a,@r0
      000A71 FD               [12] 3049 	mov	r5,a
      000A72 E4               [12] 3050 	clr	a
      000A73 08               [12] 3051 	inc	r0
      000A74 36               [12] 3052 	addc	a,@r0
      000A75 FE               [12] 3053 	mov	r6,a
      000A76 08               [12] 3054 	inc	r0
      000A77 86 07            [24] 3055 	mov	ar7,@r0
      000A79 8D 82            [24] 3056 	mov	dpl,r5
      000A7B 8E 83            [24] 3057 	mov	dph,r6
      000A7D 8F F0            [24] 3058 	mov	b,r7
      000A7F E5 81            [12] 3059 	mov	a,sp
      000A81 24 F7            [12] 3060 	add	a,#0xf7
      000A83 F8               [12] 3061 	mov	r0,a
      000A84 E6               [12] 3062 	mov	a,@r0
      000A85 12r00r00         [24] 3063 	lcall	__gptrput
      000A88 A3               [24] 3064 	inc	dptr
      000A89 08               [12] 3065 	inc	r0
      000A8A E6               [12] 3066 	mov	a,@r0
      000A8B 12r00r00         [24] 3067 	lcall	__gptrput
                                   3068 ;	/home/user/contiki/core/net/rime/rudolph0.c:214: stbroadcast_send_stubborn(&c->c, c->send_interval);
      000A8E E5 81            [12] 3069 	mov	a,sp
      000A90 24 F7            [12] 3070 	add	a,#0xf7
      000A92 F8               [12] 3071 	mov	r0,a
      000A93 E6               [12] 3072 	mov	a,@r0
      000A94 C0 E0            [24] 3073 	push	acc
      000A96 08               [12] 3074 	inc	r0
      000A97 E6               [12] 3075 	mov	a,@r0
      000A98 C0 E0            [24] 3076 	push	acc
      000A9A E5 81            [12] 3077 	mov	a,sp
      000A9C 24 F9            [12] 3078 	add	a,#0xf9
      000A9E F8               [12] 3079 	mov	r0,a
      000A9F 86 82            [24] 3080 	mov	dpl,@r0
      000AA1 08               [12] 3081 	inc	r0
      000AA2 86 83            [24] 3082 	mov	dph,@r0
      000AA4 08               [12] 3083 	inc	r0
      000AA5 86 F0            [24] 3084 	mov	b,@r0
      000AA7 12r00r00         [24] 3085 	lcall	_stbroadcast_send_stubborn
      000AAA 15 81            [12] 3086 	dec	sp
      000AAC 15 81            [12] 3087 	dec	sp
      000AAE E5 81            [12] 3088 	mov	a,sp
      000AB0 24 FA            [12] 3089 	add	a,#0xFA
      000AB2 F5 81            [12] 3090 	mov	sp,a
      000AB4 22               [24] 3091 	ret
                                   3092 ;------------------------------------------------------------
                                   3093 ;Allocation info for local variables in function 'rudolph0_force_restart'
                                   3094 ;------------------------------------------------------------
                                   3095 ;c                         Allocated to registers r5 r6 r7 
                                   3096 ;------------------------------------------------------------
                                   3097 ;	/home/user/contiki/core/net/rime/rudolph0.c:218: rudolph0_force_restart(struct rudolph0_conn *c)
                                   3098 ;	-----------------------------------------
                                   3099 ;	 function rudolph0_force_restart
                                   3100 ;	-----------------------------------------
      000AB5                       3101 _rudolph0_force_restart:
      000AB5 AD 82            [24] 3102 	mov	r5,dpl
      000AB7 AE 83            [24] 3103 	mov	r6,dph
      000AB9 AF F0            [24] 3104 	mov	r7,b
                                   3105 ;	/home/user/contiki/core/net/rime/rudolph0.c:220: c->current.h.chunk = 0;
      000ABB 74 58            [12] 3106 	mov	a,#0x58
      000ABD 2D               [12] 3107 	add	a,r5
      000ABE FA               [12] 3108 	mov	r2,a
      000ABF E4               [12] 3109 	clr	a
      000AC0 3E               [12] 3110 	addc	a,r6
      000AC1 FB               [12] 3111 	mov	r3,a
      000AC2 8F 04            [24] 3112 	mov	ar4,r7
      000AC4 74 02            [12] 3113 	mov	a,#0x02
      000AC6 2A               [12] 3114 	add	a,r2
      000AC7 FA               [12] 3115 	mov	r2,a
      000AC8 E4               [12] 3116 	clr	a
      000AC9 3B               [12] 3117 	addc	a,r3
      000ACA FB               [12] 3118 	mov	r3,a
      000ACB 8A 82            [24] 3119 	mov	dpl,r2
      000ACD 8B 83            [24] 3120 	mov	dph,r3
      000ACF 8C F0            [24] 3121 	mov	b,r4
      000AD1 E4               [12] 3122 	clr	a
      000AD2 12r00r00         [24] 3123 	lcall	__gptrput
      000AD5 A3               [24] 3124 	inc	dptr
      000AD6 E4               [12] 3125 	clr	a
      000AD7 12r00r00         [24] 3126 	lcall	__gptrput
                                   3127 ;	/home/user/contiki/core/net/rime/rudolph0.c:221: send_nack(c);
      000ADA 8D 82            [24] 3128 	mov	dpl,r5
      000ADC 8E 83            [24] 3129 	mov	dph,r6
      000ADE 8F F0            [24] 3130 	mov	b,r7
      000AE0 02r01r10         [24] 3131 	ljmp	_send_nack
                                   3132 ;------------------------------------------------------------
                                   3133 ;Allocation info for local variables in function 'rudolph0_stop'
                                   3134 ;------------------------------------------------------------
                                   3135 ;c                         Allocated to registers r5 r6 r7 
                                   3136 ;------------------------------------------------------------
                                   3137 ;	/home/user/contiki/core/net/rime/rudolph0.c:225: rudolph0_stop(struct rudolph0_conn *c)
                                   3138 ;	-----------------------------------------
                                   3139 ;	 function rudolph0_stop
                                   3140 ;	-----------------------------------------
      000AE3                       3141 _rudolph0_stop:
                                   3142 ;	/home/user/contiki/core/net/rime/rudolph0.c:227: stbroadcast_cancel(&c->c);
      000AE3 02r00r00         [24] 3143 	ljmp	_stbroadcast_cancel
                                   3144 ;------------------------------------------------------------
                                   3145 ;Allocation info for local variables in function 'rudolph0_version'
                                   3146 ;------------------------------------------------------------
                                   3147 ;c                         Allocated to registers r5 r6 r7 
                                   3148 ;------------------------------------------------------------
                                   3149 ;	/home/user/contiki/core/net/rime/rudolph0.c:231: rudolph0_version(struct rudolph0_conn *c)
                                   3150 ;	-----------------------------------------
                                   3151 ;	 function rudolph0_version
                                   3152 ;	-----------------------------------------
      000AE6                       3153 _rudolph0_version:
      000AE6 AD 82            [24] 3154 	mov	r5,dpl
      000AE8 AE 83            [24] 3155 	mov	r6,dph
      000AEA AF F0            [24] 3156 	mov	r7,b
                                   3157 ;	/home/user/contiki/core/net/rime/rudolph0.c:233: return c->current.h.version;
      000AEC 74 58            [12] 3158 	mov	a,#0x58
      000AEE 2D               [12] 3159 	add	a,r5
      000AEF FD               [12] 3160 	mov	r5,a
      000AF0 E4               [12] 3161 	clr	a
      000AF1 3E               [12] 3162 	addc	a,r6
      000AF2 FE               [12] 3163 	mov	r6,a
      000AF3 0D               [12] 3164 	inc	r5
      000AF4 BD 00 01         [24] 3165 	cjne	r5,#0x00,00103$
      000AF7 0E               [12] 3166 	inc	r6
      000AF8                       3167 00103$:
      000AF8 8D 82            [24] 3168 	mov	dpl,r5
      000AFA 8E 83            [24] 3169 	mov	dph,r6
      000AFC 8F F0            [24] 3170 	mov	b,r7
      000AFE 12r00r00         [24] 3171 	lcall	__gptrget
      000B01 FD               [12] 3172 	mov	r5,a
      000B02 7F 00            [12] 3173 	mov	r7,#0x00
      000B04 8D 82            [24] 3174 	mov	dpl,r5
      000B06 8F 83            [24] 3175 	mov	dph,r7
      000B08 22               [24] 3176 	ret
                                   3177 ;------------------------------------------------------------
                                   3178 ;Allocation info for local variables in function 'rudolph0_set_version'
                                   3179 ;------------------------------------------------------------
                                   3180 ;version                   Allocated to stack - sp -3
                                   3181 ;c                         Allocated to registers r5 r6 r7 
                                   3182 ;------------------------------------------------------------
                                   3183 ;	/home/user/contiki/core/net/rime/rudolph0.c:237: rudolph0_set_version(struct rudolph0_conn *c, int version)
                                   3184 ;	-----------------------------------------
                                   3185 ;	 function rudolph0_set_version
                                   3186 ;	-----------------------------------------
      000B09                       3187 _rudolph0_set_version:
      000B09 AD 82            [24] 3188 	mov	r5,dpl
      000B0B AE 83            [24] 3189 	mov	r6,dph
      000B0D AF F0            [24] 3190 	mov	r7,b
                                   3191 ;	/home/user/contiki/core/net/rime/rudolph0.c:239: c->current.h.version = version;
      000B0F 74 58            [12] 3192 	mov	a,#0x58
      000B11 2D               [12] 3193 	add	a,r5
      000B12 FD               [12] 3194 	mov	r5,a
      000B13 E4               [12] 3195 	clr	a
      000B14 3E               [12] 3196 	addc	a,r6
      000B15 FE               [12] 3197 	mov	r6,a
      000B16 0D               [12] 3198 	inc	r5
      000B17 BD 00 01         [24] 3199 	cjne	r5,#0x00,00103$
      000B1A 0E               [12] 3200 	inc	r6
      000B1B                       3201 00103$:
      000B1B E5 81            [12] 3202 	mov	a,sp
      000B1D 24 FD            [12] 3203 	add	a,#0xfd
      000B1F F8               [12] 3204 	mov	r0,a
      000B20 86 04            [24] 3205 	mov	ar4,@r0
      000B22 8D 82            [24] 3206 	mov	dpl,r5
      000B24 8E 83            [24] 3207 	mov	dph,r6
      000B26 8F F0            [24] 3208 	mov	b,r7
      000B28 EC               [12] 3209 	mov	a,r4
      000B29 02r00r00         [24] 3210 	ljmp	__gptrput
                                   3211 	.area CSEG    (CODE)
                                   3212 	.area CONST   (CODE)
      000000                       3213 _polite:
      000000r45s07                 3214 	.byte _recv_nack,(_recv_nack >> 8)
      000002 00 00                 3215 	.byte #0x00,#0x00
      000004 00 00                 3216 	.byte #0x00,#0x00
      000006                       3217 _stbroadcast:
      000006rB4s02                 3218 	.byte _recv,(_recv >> 8)
      000008r1Bs02                 3219 	.byte _sent,(_sent >> 8)
                                   3220 	.area XINIT   (CODE)
                                   3221 	.area CABS    (ABS,CODE)
