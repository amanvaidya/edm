                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Tue Feb 10 06:19:31 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module polite
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _random_rand
                                     13 	.globl _queuebuf_datalen
                                     14 	.globl _queuebuf_dataptr
                                     15 	.globl _queuebuf_free
                                     16 	.globl _queuebuf_to_packetbuf
                                     17 	.globl _queuebuf_new_from_packetbuf
                                     18 	.globl _abc_send
                                     19 	.globl _abc_close
                                     20 	.globl _abc_open
                                     21 	.globl _packetbuf_datalen
                                     22 	.globl _packetbuf_dataptr
                                     23 	.globl _ctimer_stop
                                     24 	.globl _ctimer_set
                                     25 	.globl _memcmp
                                     26 	.globl _ACTIVE
                                     27 	.globl _TX_BYTE
                                     28 	.globl _RX_BYTE
                                     29 	.globl _ERR
                                     30 	.globl _FE
                                     31 	.globl _SLAVE
                                     32 	.globl _RE
                                     33 	.globl _MODE
                                     34 	.globl _T3OVFIF
                                     35 	.globl _T3CH0IF
                                     36 	.globl _T3CH1IF
                                     37 	.globl _T4OVFIF
                                     38 	.globl _T4CH0IF
                                     39 	.globl _T4CH1IF
                                     40 	.globl _OVFIM
                                     41 	.globl _B_0
                                     42 	.globl _B_1
                                     43 	.globl _B_2
                                     44 	.globl _B_3
                                     45 	.globl _B_4
                                     46 	.globl _B_5
                                     47 	.globl _B_6
                                     48 	.globl _B_7
                                     49 	.globl _P2IF
                                     50 	.globl _UTX0IF
                                     51 	.globl _UTX1IF
                                     52 	.globl _P1IF
                                     53 	.globl _WDTIF
                                     54 	.globl _ACC_0
                                     55 	.globl _ACC_1
                                     56 	.globl _ACC_2
                                     57 	.globl _ACC_3
                                     58 	.globl _ACC_4
                                     59 	.globl _ACC_5
                                     60 	.globl _ACC_6
                                     61 	.globl _ACC_7
                                     62 	.globl _P
                                     63 	.globl _F1
                                     64 	.globl _OV
                                     65 	.globl _RS0
                                     66 	.globl _RS1
                                     67 	.globl _F0
                                     68 	.globl _AC
                                     69 	.globl _CY
                                     70 	.globl _DMAIF
                                     71 	.globl _T1IF
                                     72 	.globl _T2IF
                                     73 	.globl _T3IF
                                     74 	.globl _T4IF
                                     75 	.globl _P0IF
                                     76 	.globl _STIF
                                     77 	.globl _DMAIE
                                     78 	.globl _T1IE
                                     79 	.globl _T2IE
                                     80 	.globl _T3IE
                                     81 	.globl _T4IE
                                     82 	.globl _P0IE
                                     83 	.globl _RFERRIE
                                     84 	.globl _ADCIE
                                     85 	.globl _URX0IE
                                     86 	.globl _URX1IE
                                     87 	.globl _ENCIE
                                     88 	.globl _STIE
                                     89 	.globl _EA
                                     90 	.globl _P2_0
                                     91 	.globl _P2_1
                                     92 	.globl _P2_2
                                     93 	.globl _P2_3
                                     94 	.globl _P2_4
                                     95 	.globl _P2_5
                                     96 	.globl _P2_6
                                     97 	.globl _P2_7
                                     98 	.globl _ENCIF_0
                                     99 	.globl _ENCIF_1
                                    100 	.globl _P1_0
                                    101 	.globl _P1_1
                                    102 	.globl _P1_2
                                    103 	.globl _P1_3
                                    104 	.globl _P1_4
                                    105 	.globl _P1_5
                                    106 	.globl _P1_6
                                    107 	.globl _P1_7
                                    108 	.globl _IT0
                                    109 	.globl _RFERRIF
                                    110 	.globl _IT1
                                    111 	.globl _URX0IF
                                    112 	.globl _ADCIF
                                    113 	.globl _URX1IF
                                    114 	.globl _P0_0
                                    115 	.globl _P0_1
                                    116 	.globl _P0_2
                                    117 	.globl _P0_3
                                    118 	.globl _P0_4
                                    119 	.globl _P0_5
                                    120 	.globl _P0_6
                                    121 	.globl _P0_7
                                    122 	.globl _WDCTL
                                    123 	.globl _U1GCR
                                    124 	.globl _U1UCR
                                    125 	.globl _U1BAUD
                                    126 	.globl _U1DBUF
                                    127 	.globl _U1CSR
                                    128 	.globl _U0GCR
                                    129 	.globl _U0UCR
                                    130 	.globl _U0BAUD
                                    131 	.globl _U0DBUF
                                    132 	.globl _U0CSR
                                    133 	.globl _TIMIF
                                    134 	.globl _T4CC1
                                    135 	.globl _T4CCTL1
                                    136 	.globl _T4CC0
                                    137 	.globl _T4CCTL0
                                    138 	.globl _T4CTL
                                    139 	.globl _T4CNT
                                    140 	.globl _T3CC1
                                    141 	.globl _T3CCTL1
                                    142 	.globl _T3CC0
                                    143 	.globl _T3CCTL0
                                    144 	.globl _T3CTL
                                    145 	.globl _T3CNT
                                    146 	.globl _T2MSEL
                                    147 	.globl _T2IRQM
                                    148 	.globl _T2MOVF2
                                    149 	.globl _T2MOVF1
                                    150 	.globl _T2MOVF0
                                    151 	.globl _T2M1
                                    152 	.globl _T2M0
                                    153 	.globl _T2IRQF
                                    154 	.globl _T2EVTCFG
                                    155 	.globl _T2CTRL
                                    156 	.globl _T1STAT
                                    157 	.globl _T1CCTL2
                                    158 	.globl _T1CCTL1
                                    159 	.globl _T1CCTL0
                                    160 	.globl _T1CTL
                                    161 	.globl _T1CNTH
                                    162 	.globl _T1CNTL
                                    163 	.globl _T1CC2H
                                    164 	.globl _T1CC2L
                                    165 	.globl _T1CC1H
                                    166 	.globl _T1CC1L
                                    167 	.globl _T1CC0H
                                    168 	.globl _T1CC0L
                                    169 	.globl _CLKCONSTA
                                    170 	.globl _CLKCONCMD
                                    171 	.globl _SLEEPSTA
                                    172 	.globl _SLEEPCMD
                                    173 	.globl _STLOAD
                                    174 	.globl _ST2
                                    175 	.globl _ST1
                                    176 	.globl _ST0
                                    177 	.globl _RFERRF
                                    178 	.globl _RFIRQF0
                                    179 	.globl _RFST
                                    180 	.globl _RFD
                                    181 	.globl _RFIRQF1
                                    182 	.globl _PSBANK
                                    183 	.globl _FMAP
                                    184 	.globl _MEMCTR
                                    185 	.globl __XPAGE
                                    186 	.globl _MPAGE
                                    187 	.globl _PMUX
                                    188 	.globl _P2DIR
                                    189 	.globl _P1DIR
                                    190 	.globl _P0DIR
                                    191 	.globl _P2INP
                                    192 	.globl _P1INP
                                    193 	.globl _P2SEL
                                    194 	.globl _P1SEL
                                    195 	.globl _P0SEL
                                    196 	.globl _APCFG
                                    197 	.globl _PERCFG
                                    198 	.globl _P0INP
                                    199 	.globl _P2IEN
                                    200 	.globl _P1IEN
                                    201 	.globl _P0IEN
                                    202 	.globl _PICTL
                                    203 	.globl _P2IFG
                                    204 	.globl _P1IFG
                                    205 	.globl _P0IFG
                                    206 	.globl _DMAREQ
                                    207 	.globl _DMAARM
                                    208 	.globl _DMA0CFGH
                                    209 	.globl _DMA0CFGL
                                    210 	.globl _DMA1CFGH
                                    211 	.globl _DMA1CFGL
                                    212 	.globl _DMAIRQ
                                    213 	.globl _ENCCS
                                    214 	.globl _ENCDO
                                    215 	.globl _ENCDI
                                    216 	.globl _RNDH
                                    217 	.globl _RNDL
                                    218 	.globl _ADCH
                                    219 	.globl _ADCL
                                    220 	.globl _ADCCON3
                                    221 	.globl _ADCCON2
                                    222 	.globl _ADCCON1
                                    223 	.globl _B
                                    224 	.globl _IRCON2
                                    225 	.globl _ACC
                                    226 	.globl _PSW
                                    227 	.globl _IRCON
                                    228 	.globl _IP1
                                    229 	.globl _IEN1
                                    230 	.globl _IP0
                                    231 	.globl _IEN0
                                    232 	.globl _P2
                                    233 	.globl _S1CON
                                    234 	.globl _IEN2
                                    235 	.globl _S0CON
                                    236 	.globl _DPS
                                    237 	.globl _P1
                                    238 	.globl _TCON
                                    239 	.globl _PCON
                                    240 	.globl _DPH1
                                    241 	.globl _DPL1
                                    242 	.globl _DPH0
                                    243 	.globl _DPL0
                                    244 	.globl _SP
                                    245 	.globl _P0
                                    246 	.globl _X_IEEE_ADDR
                                    247 	.globl _X_INFOPAGE
                                    248 	.globl _X_P2DIR
                                    249 	.globl _X_P1DIR
                                    250 	.globl _X_P0DIR
                                    251 	.globl _X_U1GCR
                                    252 	.globl _X_U1UCR
                                    253 	.globl _X_U1BAUD
                                    254 	.globl _X_U1DBUF
                                    255 	.globl _X_U1CSR
                                    256 	.globl _X_P2INP
                                    257 	.globl _X_P1INP
                                    258 	.globl _X_P2SEL
                                    259 	.globl _X_P1SEL
                                    260 	.globl _X_P0SEL
                                    261 	.globl _X_APCFG
                                    262 	.globl _X_PERCFG
                                    263 	.globl _X_T4CC1
                                    264 	.globl _X_T4CCTL1
                                    265 	.globl _X_T4CC0
                                    266 	.globl _X_T4CCTL0
                                    267 	.globl _X_T4CTL
                                    268 	.globl _X_T4CNT
                                    269 	.globl _X_RFIRQF0
                                    270 	.globl _X_T1CCTL2
                                    271 	.globl _X_T1CCTL1
                                    272 	.globl _X_T1CCTL0
                                    273 	.globl _X_T1CTL
                                    274 	.globl _X_T1CNTH
                                    275 	.globl _X_T1CNTL
                                    276 	.globl _X_RFST
                                    277 	.globl _X_T1CC2H
                                    278 	.globl _X_T1CC2L
                                    279 	.globl _X_T1CC1H
                                    280 	.globl _X_T1CC1L
                                    281 	.globl _X_T1CC0H
                                    282 	.globl _X_T1CC0L
                                    283 	.globl _X_RFD
                                    284 	.globl _X_TIMIF
                                    285 	.globl _X_DMAREQ
                                    286 	.globl _X_DMAARM
                                    287 	.globl _X_DMA0CFGH
                                    288 	.globl _X_DMA0CFGL
                                    289 	.globl _X_DMA1CFGH
                                    290 	.globl _X_DMA1CFGL
                                    291 	.globl _X_DMAIRQ
                                    292 	.globl _X_T3CC1
                                    293 	.globl _X_T3CCTL1
                                    294 	.globl _X_T3CC0
                                    295 	.globl _X_T3CCTL0
                                    296 	.globl _X_T3CTL
                                    297 	.globl _X_T3CNT
                                    298 	.globl _X_WDCTL
                                    299 	.globl _X_MEMCTR
                                    300 	.globl _X_CLKCONCMD
                                    301 	.globl _X_U0GCR
                                    302 	.globl _X_U0UCR
                                    303 	.globl _X_T2MSEL
                                    304 	.globl _X_U0BAUD
                                    305 	.globl _X_U0DBUF
                                    306 	.globl _X_RFERRF
                                    307 	.globl _X_SLEEPCMD
                                    308 	.globl _X_RNDH
                                    309 	.globl _X_RNDL
                                    310 	.globl _X_ADCH
                                    311 	.globl _X_ADCL
                                    312 	.globl _X_ADCCON3
                                    313 	.globl _X_ADCCON2
                                    314 	.globl _X_ADCCON1
                                    315 	.globl _X_ENCCS
                                    316 	.globl _X_ENCDO
                                    317 	.globl _X_ENCDI
                                    318 	.globl _X_T1STAT
                                    319 	.globl _X_PMUX
                                    320 	.globl _X_STLOAD
                                    321 	.globl _X_P2IEN
                                    322 	.globl _X_P0IEN
                                    323 	.globl _X_T2IRQM
                                    324 	.globl _X_T2MOVF2
                                    325 	.globl _X_T2MOVF1
                                    326 	.globl _X_T2MOVF0
                                    327 	.globl _X_T2M1
                                    328 	.globl _X_T2M0
                                    329 	.globl _X_T2IRQF
                                    330 	.globl _X_P2
                                    331 	.globl _X_PSBANK
                                    332 	.globl _X_FMAP
                                    333 	.globl _X_CLKCONSTA
                                    334 	.globl _X_SLEEPSTA
                                    335 	.globl _X_T2EVTCFG
                                    336 	.globl _X_ST2
                                    337 	.globl _X_ST1
                                    338 	.globl _X_ST0
                                    339 	.globl _X_T2CTRL
                                    340 	.globl _X__XPAGE
                                    341 	.globl _X_MPAGE
                                    342 	.globl _X_RFIRQF1
                                    343 	.globl _X_P1
                                    344 	.globl _X_P0INP
                                    345 	.globl _X_P1IEN
                                    346 	.globl _X_PICTL
                                    347 	.globl _X_P2IFG
                                    348 	.globl _X_P1IFG
                                    349 	.globl _X_P0IFG
                                    350 	.globl _X_U0CSR
                                    351 	.globl _X_P0
                                    352 	.globl _USBF5
                                    353 	.globl _USBF4
                                    354 	.globl _USBF3
                                    355 	.globl _USBF2
                                    356 	.globl _USBF1
                                    357 	.globl _USBF0
                                    358 	.globl _USBCNTH
                                    359 	.globl _USBCNTL
                                    360 	.globl _USBCNT0
                                    361 	.globl _USBCSOH
                                    362 	.globl _USBCSOL
                                    363 	.globl _USBMAXO
                                    364 	.globl _USBCSIH
                                    365 	.globl _USBCSIL
                                    366 	.globl _USBCS0
                                    367 	.globl _USBMAXI
                                    368 	.globl _USBCTRL
                                    369 	.globl _USBINDEX
                                    370 	.globl _USBFRMH
                                    371 	.globl _USBFRML
                                    372 	.globl _USBCIE
                                    373 	.globl _USBOIE
                                    374 	.globl _USBIIE
                                    375 	.globl _USBCIF
                                    376 	.globl _USBOIF
                                    377 	.globl _USBIIF
                                    378 	.globl _USBPOW
                                    379 	.globl _USBADDR
                                    380 	.globl _CSPT
                                    381 	.globl _CSPZ
                                    382 	.globl _CSPY
                                    383 	.globl _CSPX
                                    384 	.globl _CSPSTAT
                                    385 	.globl _CSPCTRL
                                    386 	.globl _CSPPROG23
                                    387 	.globl _CSPPROG22
                                    388 	.globl _CSPPROG21
                                    389 	.globl _CSPPROG20
                                    390 	.globl _CSPPROG19
                                    391 	.globl _CSPPROG18
                                    392 	.globl _CSPPROG17
                                    393 	.globl _CSPPROG16
                                    394 	.globl _CSPPROG15
                                    395 	.globl _CSPPROG14
                                    396 	.globl _CSPPROG13
                                    397 	.globl _CSPPROG12
                                    398 	.globl _CSPPROG11
                                    399 	.globl _CSPPROG10
                                    400 	.globl _CSPPROG9
                                    401 	.globl _CSPPROG8
                                    402 	.globl _CSPPROG7
                                    403 	.globl _CSPPROG6
                                    404 	.globl _CSPPROG5
                                    405 	.globl _CSPPROG4
                                    406 	.globl _CSPPROG3
                                    407 	.globl _CSPPROG2
                                    408 	.globl _CSPPROG1
                                    409 	.globl _CSPPROG0
                                    410 	.globl _RFC_OBS_CTRL2
                                    411 	.globl _RFC_OBS_CTRL1
                                    412 	.globl _RFC_OBS_CTRL0
                                    413 	.globl _TXFILTCFG
                                    414 	.globl _PTEST1
                                    415 	.globl _PTEST0
                                    416 	.globl _ATEST
                                    417 	.globl _DACTEST2
                                    418 	.globl _DACTEST1
                                    419 	.globl _DACTEST0
                                    420 	.globl _MDMTEST1
                                    421 	.globl _MDMTEST0
                                    422 	.globl _ADCTEST2
                                    423 	.globl _ADCTEST1
                                    424 	.globl _ADCTEST0
                                    425 	.globl _AGCCTRL3
                                    426 	.globl _AGCCTRL2
                                    427 	.globl _AGCCTRL1
                                    428 	.globl _AGCCTRL0
                                    429 	.globl _FSCAL3
                                    430 	.globl _FSCAL2
                                    431 	.globl _FSCAL1
                                    432 	.globl _FSCAL0
                                    433 	.globl _FSCTRL
                                    434 	.globl _RXCTRL
                                    435 	.globl _FREQEST
                                    436 	.globl _MDMCTRL1
                                    437 	.globl _MDMCTRL0
                                    438 	.globl _RFRND
                                    439 	.globl _RFERRM
                                    440 	.globl _RFIRQM1
                                    441 	.globl _RFIRQM0
                                    442 	.globl _TXLAST_PTR
                                    443 	.globl _TXFIRST_PTR
                                    444 	.globl _RXP1_PTR
                                    445 	.globl _RXLAST_PTR
                                    446 	.globl _RXFIRST_PTR
                                    447 	.globl _TXFIFOCNT
                                    448 	.globl _RXFIFOCNT
                                    449 	.globl _RXFIRST
                                    450 	.globl _RSSISTAT
                                    451 	.globl _RSSI
                                    452 	.globl _CCACTRL1
                                    453 	.globl _CCACTRL0
                                    454 	.globl _FSMCTRL
                                    455 	.globl _FIFOPCTRL
                                    456 	.globl _FSMSTAT1
                                    457 	.globl _FSMSTAT0
                                    458 	.globl _TXCTRL
                                    459 	.globl _TXPOWER
                                    460 	.globl _FREQCTRL
                                    461 	.globl _FREQTUNE
                                    462 	.globl _RXMASKCLR
                                    463 	.globl _RXMASKSET
                                    464 	.globl _RXENABLE
                                    465 	.globl _FRMCTRL1
                                    466 	.globl _FRMCTRL0
                                    467 	.globl _SRCEXTEN2
                                    468 	.globl _SRCEXTEN1
                                    469 	.globl _SRCEXTEN0
                                    470 	.globl _SRCSHORTEN2
                                    471 	.globl _SRCSHORTEN1
                                    472 	.globl _SRCSHORTEN0
                                    473 	.globl _SRCMATCH
                                    474 	.globl _FRMFILT1
                                    475 	.globl _FRMFILT0
                                    476 	.globl _SHORT_ADDR1
                                    477 	.globl _SHORT_ADDR0
                                    478 	.globl _PAN_ID1
                                    479 	.globl _PAN_ID0
                                    480 	.globl _EXT_ADDR7
                                    481 	.globl _EXT_ADDR6
                                    482 	.globl _EXT_ADDR5
                                    483 	.globl _EXT_ADDR4
                                    484 	.globl _EXT_ADDR3
                                    485 	.globl _EXT_ADDR2
                                    486 	.globl _EXT_ADDR1
                                    487 	.globl _EXT_ADDR0
                                    488 	.globl _SRCSHORTPENDEN2
                                    489 	.globl _SRCSHORTPENDEN1
                                    490 	.globl _SRCSHORTPENDEN0
                                    491 	.globl _SRCEXTPENDEN2
                                    492 	.globl _SRCEXTPENDEN1
                                    493 	.globl _SRCEXTPENDEN0
                                    494 	.globl _SRCRESINDEX
                                    495 	.globl _SRCRESMASK2
                                    496 	.globl _SRCRESMASK1
                                    497 	.globl _SRCRESMASK0
                                    498 	.globl _SRC_ADDR_TABLE
                                    499 	.globl _TXFIFO
                                    500 	.globl _RXFIFO
                                    501 	.globl _RFCORE_RAM
                                    502 	.globl _CMPCTL
                                    503 	.globl _OPAMPS
                                    504 	.globl _OPAMPC
                                    505 	.globl _STCV2
                                    506 	.globl _STCV1
                                    507 	.globl _STCV0
                                    508 	.globl _STCS
                                    509 	.globl _STCC
                                    510 	.globl _T1CC4H
                                    511 	.globl _T1CC4L
                                    512 	.globl _T1CC3H
                                    513 	.globl _T1CC3L
                                    514 	.globl _XX_T1CC2H
                                    515 	.globl _XX_T1CC2L
                                    516 	.globl _XX_T1CC1H
                                    517 	.globl _XX_T1CC1L
                                    518 	.globl _XX_T1CC0H
                                    519 	.globl _XX_T1CC0L
                                    520 	.globl _T1CCTL4
                                    521 	.globl _T1CCTL3
                                    522 	.globl _XX_T1CCTL2
                                    523 	.globl _XX_T1CCTL1
                                    524 	.globl _XX_T1CCTL0
                                    525 	.globl _CLD
                                    526 	.globl _IRCTL
                                    527 	.globl _CHIPINFO1
                                    528 	.globl _CHIPINFO0
                                    529 	.globl _FWDATA
                                    530 	.globl _FADDRH
                                    531 	.globl _FADDRL
                                    532 	.globl _FCTL
                                    533 	.globl _IVCTRL
                                    534 	.globl _BATTMON
                                    535 	.globl _SRCRC
                                    536 	.globl _DBGDATA
                                    537 	.globl _TESTREG0
                                    538 	.globl _CHIPID
                                    539 	.globl _CHVER
                                    540 	.globl _OBSSEL5
                                    541 	.globl _OBSSEL4
                                    542 	.globl _OBSSEL3
                                    543 	.globl _OBSSEL2
                                    544 	.globl _OBSSEL1
                                    545 	.globl _OBSSEL0
                                    546 	.globl _I2CIO
                                    547 	.globl _I2CWC
                                    548 	.globl _I2CADDR
                                    549 	.globl _I2CDATA
                                    550 	.globl _I2CSTAT
                                    551 	.globl _I2CCFG
                                    552 	.globl _OPAMPMC
                                    553 	.globl _MONMUX
                                    554 	.globl _polite_open
                                    555 	.globl _polite_close
                                    556 	.globl _polite_send
                                    557 	.globl _polite_cancel
                                    558 ;--------------------------------------------------------
                                    559 ; special function registers
                                    560 ;--------------------------------------------------------
                                    561 	.area RSEG    (ABS,DATA)
      000000                        562 	.org 0x0000
                           000080   563 _P0	=	0x0080
                           000081   564 _SP	=	0x0081
                           000082   565 _DPL0	=	0x0082
                           000083   566 _DPH0	=	0x0083
                           000084   567 _DPL1	=	0x0084
                           000085   568 _DPH1	=	0x0085
                           000087   569 _PCON	=	0x0087
                           000088   570 _TCON	=	0x0088
                           000090   571 _P1	=	0x0090
                           000092   572 _DPS	=	0x0092
                           000098   573 _S0CON	=	0x0098
                           00009A   574 _IEN2	=	0x009a
                           00009B   575 _S1CON	=	0x009b
                           0000A0   576 _P2	=	0x00a0
                           0000A8   577 _IEN0	=	0x00a8
                           0000A9   578 _IP0	=	0x00a9
                           0000B8   579 _IEN1	=	0x00b8
                           0000B9   580 _IP1	=	0x00b9
                           0000C0   581 _IRCON	=	0x00c0
                           0000D0   582 _PSW	=	0x00d0
                           0000E0   583 _ACC	=	0x00e0
                           0000E8   584 _IRCON2	=	0x00e8
                           0000F0   585 _B	=	0x00f0
                           0000B4   586 _ADCCON1	=	0x00b4
                           0000B5   587 _ADCCON2	=	0x00b5
                           0000B6   588 _ADCCON3	=	0x00b6
                           0000BA   589 _ADCL	=	0x00ba
                           0000BB   590 _ADCH	=	0x00bb
                           0000BC   591 _RNDL	=	0x00bc
                           0000BD   592 _RNDH	=	0x00bd
                           0000B1   593 _ENCDI	=	0x00b1
                           0000B2   594 _ENCDO	=	0x00b2
                           0000B3   595 _ENCCS	=	0x00b3
                           0000D1   596 _DMAIRQ	=	0x00d1
                           0000D2   597 _DMA1CFGL	=	0x00d2
                           0000D3   598 _DMA1CFGH	=	0x00d3
                           0000D4   599 _DMA0CFGL	=	0x00d4
                           0000D5   600 _DMA0CFGH	=	0x00d5
                           0000D6   601 _DMAARM	=	0x00d6
                           0000D7   602 _DMAREQ	=	0x00d7
                           000089   603 _P0IFG	=	0x0089
                           00008A   604 _P1IFG	=	0x008a
                           00008B   605 _P2IFG	=	0x008b
                           00008C   606 _PICTL	=	0x008c
                           0000AB   607 _P0IEN	=	0x00ab
                           00008D   608 _P1IEN	=	0x008d
                           0000AC   609 _P2IEN	=	0x00ac
                           00008F   610 _P0INP	=	0x008f
                           0000F1   611 _PERCFG	=	0x00f1
                           0000F2   612 _APCFG	=	0x00f2
                           0000F3   613 _P0SEL	=	0x00f3
                           0000F4   614 _P1SEL	=	0x00f4
                           0000F5   615 _P2SEL	=	0x00f5
                           0000F6   616 _P1INP	=	0x00f6
                           0000F7   617 _P2INP	=	0x00f7
                           0000FD   618 _P0DIR	=	0x00fd
                           0000FE   619 _P1DIR	=	0x00fe
                           0000FF   620 _P2DIR	=	0x00ff
                           0000AE   621 _PMUX	=	0x00ae
                           000093   622 _MPAGE	=	0x0093
                           000093   623 __XPAGE	=	0x0093
                           0000C7   624 _MEMCTR	=	0x00c7
                           00009F   625 _FMAP	=	0x009f
                           00009F   626 _PSBANK	=	0x009f
                           000091   627 _RFIRQF1	=	0x0091
                           0000D9   628 _RFD	=	0x00d9
                           0000E1   629 _RFST	=	0x00e1
                           0000E9   630 _RFIRQF0	=	0x00e9
                           0000BF   631 _RFERRF	=	0x00bf
                           000095   632 _ST0	=	0x0095
                           000096   633 _ST1	=	0x0096
                           000097   634 _ST2	=	0x0097
                           0000AD   635 _STLOAD	=	0x00ad
                           0000BE   636 _SLEEPCMD	=	0x00be
                           00009D   637 _SLEEPSTA	=	0x009d
                           0000C6   638 _CLKCONCMD	=	0x00c6
                           00009E   639 _CLKCONSTA	=	0x009e
                           0000DA   640 _T1CC0L	=	0x00da
                           0000DB   641 _T1CC0H	=	0x00db
                           0000DC   642 _T1CC1L	=	0x00dc
                           0000DD   643 _T1CC1H	=	0x00dd
                           0000DE   644 _T1CC2L	=	0x00de
                           0000DF   645 _T1CC2H	=	0x00df
                           0000E2   646 _T1CNTL	=	0x00e2
                           0000E3   647 _T1CNTH	=	0x00e3
                           0000E4   648 _T1CTL	=	0x00e4
                           0000E5   649 _T1CCTL0	=	0x00e5
                           0000E6   650 _T1CCTL1	=	0x00e6
                           0000E7   651 _T1CCTL2	=	0x00e7
                           0000AF   652 _T1STAT	=	0x00af
                           000094   653 _T2CTRL	=	0x0094
                           00009C   654 _T2EVTCFG	=	0x009c
                           0000A1   655 _T2IRQF	=	0x00a1
                           0000A2   656 _T2M0	=	0x00a2
                           0000A3   657 _T2M1	=	0x00a3
                           0000A4   658 _T2MOVF0	=	0x00a4
                           0000A5   659 _T2MOVF1	=	0x00a5
                           0000A6   660 _T2MOVF2	=	0x00a6
                           0000A7   661 _T2IRQM	=	0x00a7
                           0000C3   662 _T2MSEL	=	0x00c3
                           0000CA   663 _T3CNT	=	0x00ca
                           0000CB   664 _T3CTL	=	0x00cb
                           0000CC   665 _T3CCTL0	=	0x00cc
                           0000CD   666 _T3CC0	=	0x00cd
                           0000CE   667 _T3CCTL1	=	0x00ce
                           0000CF   668 _T3CC1	=	0x00cf
                           0000EA   669 _T4CNT	=	0x00ea
                           0000EB   670 _T4CTL	=	0x00eb
                           0000EC   671 _T4CCTL0	=	0x00ec
                           0000ED   672 _T4CC0	=	0x00ed
                           0000EE   673 _T4CCTL1	=	0x00ee
                           0000EF   674 _T4CC1	=	0x00ef
                           0000D8   675 _TIMIF	=	0x00d8
                           000086   676 _U0CSR	=	0x0086
                           0000C1   677 _U0DBUF	=	0x00c1
                           0000C2   678 _U0BAUD	=	0x00c2
                           0000C4   679 _U0UCR	=	0x00c4
                           0000C5   680 _U0GCR	=	0x00c5
                           0000F8   681 _U1CSR	=	0x00f8
                           0000F9   682 _U1DBUF	=	0x00f9
                           0000FA   683 _U1BAUD	=	0x00fa
                           0000FB   684 _U1UCR	=	0x00fb
                           0000FC   685 _U1GCR	=	0x00fc
                           0000C9   686 _WDCTL	=	0x00c9
                                    687 ;--------------------------------------------------------
                                    688 ; special function bits
                                    689 ;--------------------------------------------------------
                                    690 	.area RSEG    (ABS,DATA)
      000000                        691 	.org 0x0000
                           000087   692 _P0_7	=	0x0087
                           000086   693 _P0_6	=	0x0086
                           000085   694 _P0_5	=	0x0085
                           000084   695 _P0_4	=	0x0084
                           000083   696 _P0_3	=	0x0083
                           000082   697 _P0_2	=	0x0082
                           000081   698 _P0_1	=	0x0081
                           000080   699 _P0_0	=	0x0080
                           00008F   700 _URX1IF	=	0x008f
                           00008D   701 _ADCIF	=	0x008d
                           00008B   702 _URX0IF	=	0x008b
                           00008A   703 _IT1	=	0x008a
                           000089   704 _RFERRIF	=	0x0089
                           000088   705 _IT0	=	0x0088
                           000097   706 _P1_7	=	0x0097
                           000096   707 _P1_6	=	0x0096
                           000095   708 _P1_5	=	0x0095
                           000094   709 _P1_4	=	0x0094
                           000093   710 _P1_3	=	0x0093
                           000092   711 _P1_2	=	0x0092
                           000091   712 _P1_1	=	0x0091
                           000090   713 _P1_0	=	0x0090
                           000099   714 _ENCIF_1	=	0x0099
                           000098   715 _ENCIF_0	=	0x0098
                           0000A7   716 _P2_7	=	0x00a7
                           0000A6   717 _P2_6	=	0x00a6
                           0000A5   718 _P2_5	=	0x00a5
                           0000A4   719 _P2_4	=	0x00a4
                           0000A3   720 _P2_3	=	0x00a3
                           0000A2   721 _P2_2	=	0x00a2
                           0000A1   722 _P2_1	=	0x00a1
                           0000A0   723 _P2_0	=	0x00a0
                           0000AF   724 _EA	=	0x00af
                           0000AD   725 _STIE	=	0x00ad
                           0000AC   726 _ENCIE	=	0x00ac
                           0000AB   727 _URX1IE	=	0x00ab
                           0000AA   728 _URX0IE	=	0x00aa
                           0000A9   729 _ADCIE	=	0x00a9
                           0000A8   730 _RFERRIE	=	0x00a8
                           0000BD   731 _P0IE	=	0x00bd
                           0000BC   732 _T4IE	=	0x00bc
                           0000BB   733 _T3IE	=	0x00bb
                           0000BA   734 _T2IE	=	0x00ba
                           0000B9   735 _T1IE	=	0x00b9
                           0000B8   736 _DMAIE	=	0x00b8
                           0000C7   737 _STIF	=	0x00c7
                           0000C5   738 _P0IF	=	0x00c5
                           0000C4   739 _T4IF	=	0x00c4
                           0000C3   740 _T3IF	=	0x00c3
                           0000C2   741 _T2IF	=	0x00c2
                           0000C1   742 _T1IF	=	0x00c1
                           0000C0   743 _DMAIF	=	0x00c0
                           0000D7   744 _CY	=	0x00d7
                           0000D6   745 _AC	=	0x00d6
                           0000D5   746 _F0	=	0x00d5
                           0000D4   747 _RS1	=	0x00d4
                           0000D3   748 _RS0	=	0x00d3
                           0000D2   749 _OV	=	0x00d2
                           0000D1   750 _F1	=	0x00d1
                           0000D0   751 _P	=	0x00d0
                           0000E7   752 _ACC_7	=	0x00e7
                           0000E6   753 _ACC_6	=	0x00e6
                           0000E5   754 _ACC_5	=	0x00e5
                           0000E4   755 _ACC_4	=	0x00e4
                           0000E3   756 _ACC_3	=	0x00e3
                           0000E2   757 _ACC_2	=	0x00e2
                           0000E1   758 _ACC_1	=	0x00e1
                           0000E0   759 _ACC_0	=	0x00e0
                           0000EC   760 _WDTIF	=	0x00ec
                           0000EB   761 _P1IF	=	0x00eb
                           0000EA   762 _UTX1IF	=	0x00ea
                           0000E9   763 _UTX0IF	=	0x00e9
                           0000E8   764 _P2IF	=	0x00e8
                           0000F7   765 _B_7	=	0x00f7
                           0000F6   766 _B_6	=	0x00f6
                           0000F5   767 _B_5	=	0x00f5
                           0000F4   768 _B_4	=	0x00f4
                           0000F3   769 _B_3	=	0x00f3
                           0000F2   770 _B_2	=	0x00f2
                           0000F1   771 _B_1	=	0x00f1
                           0000F0   772 _B_0	=	0x00f0
                           0000DE   773 _OVFIM	=	0x00de
                           0000DD   774 _T4CH1IF	=	0x00dd
                           0000DC   775 _T4CH0IF	=	0x00dc
                           0000DB   776 _T4OVFIF	=	0x00db
                           0000DA   777 _T3CH1IF	=	0x00da
                           0000D9   778 _T3CH0IF	=	0x00d9
                           0000D8   779 _T3OVFIF	=	0x00d8
                           0000FF   780 _MODE	=	0x00ff
                           0000FE   781 _RE	=	0x00fe
                           0000FD   782 _SLAVE	=	0x00fd
                           0000FC   783 _FE	=	0x00fc
                           0000FB   784 _ERR	=	0x00fb
                           0000FA   785 _RX_BYTE	=	0x00fa
                           0000F9   786 _TX_BYTE	=	0x00f9
                           0000F8   787 _ACTIVE	=	0x00f8
                                    788 ;--------------------------------------------------------
                                    789 ; overlayable register banks
                                    790 ;--------------------------------------------------------
                                    791 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        792 	.ds 8
                                    793 ;--------------------------------------------------------
                                    794 ; internal ram data
                                    795 ;--------------------------------------------------------
                                    796 	.area DSEG    (DATA)
                                    797 ;--------------------------------------------------------
                                    798 ; overlayable items in internal ram 
                                    799 ;--------------------------------------------------------
                                    800 ;--------------------------------------------------------
                                    801 ; indirectly addressable internal ram data
                                    802 ;--------------------------------------------------------
                                    803 	.area ISEG    (DATA)
                                    804 ;--------------------------------------------------------
                                    805 ; absolute internal ram data
                                    806 ;--------------------------------------------------------
                                    807 	.area IABS    (ABS,DATA)
                                    808 	.area IABS    (ABS,DATA)
                                    809 ;--------------------------------------------------------
                                    810 ; bit data
                                    811 ;--------------------------------------------------------
                                    812 	.area BSEG    (BIT)
                                    813 ;--------------------------------------------------------
                                    814 ; paged external ram data
                                    815 ;--------------------------------------------------------
                                    816 	.area PSEG    (PAG,XDATA)
                                    817 ;--------------------------------------------------------
                                    818 ; external ram data
                                    819 ;--------------------------------------------------------
                                    820 	.area XSEG    (XDATA)
                           0061A6   821 _MONMUX	=	0x61a6
                           0061A6   822 _OPAMPMC	=	0x61a6
                           006230   823 _I2CCFG	=	0x6230
                           006231   824 _I2CSTAT	=	0x6231
                           006232   825 _I2CDATA	=	0x6232
                           006233   826 _I2CADDR	=	0x6233
                           006234   827 _I2CWC	=	0x6234
                           006235   828 _I2CIO	=	0x6235
                           006243   829 _OBSSEL0	=	0x6243
                           006244   830 _OBSSEL1	=	0x6244
                           006245   831 _OBSSEL2	=	0x6245
                           006246   832 _OBSSEL3	=	0x6246
                           006247   833 _OBSSEL4	=	0x6247
                           006248   834 _OBSSEL5	=	0x6248
                           006249   835 _CHVER	=	0x6249
                           00624A   836 _CHIPID	=	0x624a
                           00624B   837 _TESTREG0	=	0x624b
                           006260   838 _DBGDATA	=	0x6260
                           006262   839 _SRCRC	=	0x6262
                           006264   840 _BATTMON	=	0x6264
                           006265   841 _IVCTRL	=	0x6265
                           006270   842 _FCTL	=	0x6270
                           006271   843 _FADDRL	=	0x6271
                           006272   844 _FADDRH	=	0x6272
                           006273   845 _FWDATA	=	0x6273
                           006276   846 _CHIPINFO0	=	0x6276
                           006277   847 _CHIPINFO1	=	0x6277
                           006281   848 _IRCTL	=	0x6281
                           006290   849 _CLD	=	0x6290
                           0062A0   850 _XX_T1CCTL0	=	0x62a0
                           0062A1   851 _XX_T1CCTL1	=	0x62a1
                           0062A2   852 _XX_T1CCTL2	=	0x62a2
                           0062A3   853 _T1CCTL3	=	0x62a3
                           0062A4   854 _T1CCTL4	=	0x62a4
                           0062A6   855 _XX_T1CC0L	=	0x62a6
                           0062A7   856 _XX_T1CC0H	=	0x62a7
                           0062A8   857 _XX_T1CC1L	=	0x62a8
                           0062A9   858 _XX_T1CC1H	=	0x62a9
                           0062AA   859 _XX_T1CC2L	=	0x62aa
                           0062AB   860 _XX_T1CC2H	=	0x62ab
                           0062AC   861 _T1CC3L	=	0x62ac
                           0062AD   862 _T1CC3H	=	0x62ad
                           0062AE   863 _T1CC4L	=	0x62ae
                           0062AF   864 _T1CC4H	=	0x62af
                           0062B0   865 _STCC	=	0x62b0
                           0062B1   866 _STCS	=	0x62b1
                           0062B2   867 _STCV0	=	0x62b2
                           0062B3   868 _STCV1	=	0x62b3
                           0062B4   869 _STCV2	=	0x62b4
                           0062C0   870 _OPAMPC	=	0x62c0
                           0062C1   871 _OPAMPS	=	0x62c1
                           0062D0   872 _CMPCTL	=	0x62d0
                           006000   873 _RFCORE_RAM	=	0x6000
                           006000   874 _RXFIFO	=	0x6000
                           006080   875 _TXFIFO	=	0x6080
                           006100   876 _SRC_ADDR_TABLE	=	0x6100
                           006160   877 _SRCRESMASK0	=	0x6160
                           006161   878 _SRCRESMASK1	=	0x6161
                           006162   879 _SRCRESMASK2	=	0x6162
                           006163   880 _SRCRESINDEX	=	0x6163
                           006164   881 _SRCEXTPENDEN0	=	0x6164
                           006165   882 _SRCEXTPENDEN1	=	0x6165
                           006166   883 _SRCEXTPENDEN2	=	0x6166
                           006167   884 _SRCSHORTPENDEN0	=	0x6167
                           006168   885 _SRCSHORTPENDEN1	=	0x6168
                           006169   886 _SRCSHORTPENDEN2	=	0x6169
                           00616A   887 _EXT_ADDR0	=	0x616a
                           00616B   888 _EXT_ADDR1	=	0x616b
                           00616C   889 _EXT_ADDR2	=	0x616c
                           00616D   890 _EXT_ADDR3	=	0x616d
                           00616E   891 _EXT_ADDR4	=	0x616e
                           00616F   892 _EXT_ADDR5	=	0x616f
                           006170   893 _EXT_ADDR6	=	0x6170
                           006171   894 _EXT_ADDR7	=	0x6171
                           006172   895 _PAN_ID0	=	0x6172
                           006173   896 _PAN_ID1	=	0x6173
                           006174   897 _SHORT_ADDR0	=	0x6174
                           006175   898 _SHORT_ADDR1	=	0x6175
                           006180   899 _FRMFILT0	=	0x6180
                           006181   900 _FRMFILT1	=	0x6181
                           006182   901 _SRCMATCH	=	0x6182
                           006183   902 _SRCSHORTEN0	=	0x6183
                           006184   903 _SRCSHORTEN1	=	0x6184
                           006185   904 _SRCSHORTEN2	=	0x6185
                           006186   905 _SRCEXTEN0	=	0x6186
                           006187   906 _SRCEXTEN1	=	0x6187
                           006188   907 _SRCEXTEN2	=	0x6188
                           006189   908 _FRMCTRL0	=	0x6189
                           00618A   909 _FRMCTRL1	=	0x618a
                           00618B   910 _RXENABLE	=	0x618b
                           00618C   911 _RXMASKSET	=	0x618c
                           00618D   912 _RXMASKCLR	=	0x618d
                           00618E   913 _FREQTUNE	=	0x618e
                           00618F   914 _FREQCTRL	=	0x618f
                           006190   915 _TXPOWER	=	0x6190
                           006191   916 _TXCTRL	=	0x6191
                           006192   917 _FSMSTAT0	=	0x6192
                           006193   918 _FSMSTAT1	=	0x6193
                           006194   919 _FIFOPCTRL	=	0x6194
                           006195   920 _FSMCTRL	=	0x6195
                           006196   921 _CCACTRL0	=	0x6196
                           006197   922 _CCACTRL1	=	0x6197
                           006198   923 _RSSI	=	0x6198
                           006199   924 _RSSISTAT	=	0x6199
                           00619A   925 _RXFIRST	=	0x619a
                           00619B   926 _RXFIFOCNT	=	0x619b
                           00619C   927 _TXFIFOCNT	=	0x619c
                           00619D   928 _RXFIRST_PTR	=	0x619d
                           00619E   929 _RXLAST_PTR	=	0x619e
                           00619F   930 _RXP1_PTR	=	0x619f
                           0061A1   931 _TXFIRST_PTR	=	0x61a1
                           0061A2   932 _TXLAST_PTR	=	0x61a2
                           0061A3   933 _RFIRQM0	=	0x61a3
                           0061A4   934 _RFIRQM1	=	0x61a4
                           0061A5   935 _RFERRM	=	0x61a5
                           0061A7   936 _RFRND	=	0x61a7
                           0061A8   937 _MDMCTRL0	=	0x61a8
                           0061A9   938 _MDMCTRL1	=	0x61a9
                           0061AA   939 _FREQEST	=	0x61aa
                           0061AB   940 _RXCTRL	=	0x61ab
                           0061AC   941 _FSCTRL	=	0x61ac
                           0061AD   942 _FSCAL0	=	0x61ad
                           0061AE   943 _FSCAL1	=	0x61ae
                           0061AF   944 _FSCAL2	=	0x61af
                           0061B0   945 _FSCAL3	=	0x61b0
                           0061B1   946 _AGCCTRL0	=	0x61b1
                           0061B2   947 _AGCCTRL1	=	0x61b2
                           0061B3   948 _AGCCTRL2	=	0x61b3
                           0061B4   949 _AGCCTRL3	=	0x61b4
                           0061B5   950 _ADCTEST0	=	0x61b5
                           0061B6   951 _ADCTEST1	=	0x61b6
                           0061B7   952 _ADCTEST2	=	0x61b7
                           0061B8   953 _MDMTEST0	=	0x61b8
                           0061B9   954 _MDMTEST1	=	0x61b9
                           0061BA   955 _DACTEST0	=	0x61ba
                           0061BB   956 _DACTEST1	=	0x61bb
                           0061BC   957 _DACTEST2	=	0x61bc
                           0061BD   958 _ATEST	=	0x61bd
                           0061BE   959 _PTEST0	=	0x61be
                           0061BF   960 _PTEST1	=	0x61bf
                           0061FA   961 _TXFILTCFG	=	0x61fa
                           0061EB   962 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   963 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   964 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   965 _CSPPROG0	=	0x61c0
                           0061C1   966 _CSPPROG1	=	0x61c1
                           0061C2   967 _CSPPROG2	=	0x61c2
                           0061C3   968 _CSPPROG3	=	0x61c3
                           0061C4   969 _CSPPROG4	=	0x61c4
                           0061C5   970 _CSPPROG5	=	0x61c5
                           0061C6   971 _CSPPROG6	=	0x61c6
                           0061C7   972 _CSPPROG7	=	0x61c7
                           0061C8   973 _CSPPROG8	=	0x61c8
                           0061C9   974 _CSPPROG9	=	0x61c9
                           0061CA   975 _CSPPROG10	=	0x61ca
                           0061CB   976 _CSPPROG11	=	0x61cb
                           0061CC   977 _CSPPROG12	=	0x61cc
                           0061CD   978 _CSPPROG13	=	0x61cd
                           0061CE   979 _CSPPROG14	=	0x61ce
                           0061CF   980 _CSPPROG15	=	0x61cf
                           0061D0   981 _CSPPROG16	=	0x61d0
                           0061D1   982 _CSPPROG17	=	0x61d1
                           0061D2   983 _CSPPROG18	=	0x61d2
                           0061D3   984 _CSPPROG19	=	0x61d3
                           0061D4   985 _CSPPROG20	=	0x61d4
                           0061D5   986 _CSPPROG21	=	0x61d5
                           0061D6   987 _CSPPROG22	=	0x61d6
                           0061D7   988 _CSPPROG23	=	0x61d7
                           0061E0   989 _CSPCTRL	=	0x61e0
                           0061E1   990 _CSPSTAT	=	0x61e1
                           0061E2   991 _CSPX	=	0x61e2
                           0061E3   992 _CSPY	=	0x61e3
                           0061E4   993 _CSPZ	=	0x61e4
                           0061E5   994 _CSPT	=	0x61e5
                           006200   995 _USBADDR	=	0x6200
                           006201   996 _USBPOW	=	0x6201
                           006202   997 _USBIIF	=	0x6202
                           006204   998 _USBOIF	=	0x6204
                           006206   999 _USBCIF	=	0x6206
                           006207  1000 _USBIIE	=	0x6207
                           006209  1001 _USBOIE	=	0x6209
                           00620B  1002 _USBCIE	=	0x620b
                           00620C  1003 _USBFRML	=	0x620c
                           00620D  1004 _USBFRMH	=	0x620d
                           00620E  1005 _USBINDEX	=	0x620e
                           00620F  1006 _USBCTRL	=	0x620f
                           006210  1007 _USBMAXI	=	0x6210
                           006211  1008 _USBCS0	=	0x6211
                           006211  1009 _USBCSIL	=	0x6211
                           006212  1010 _USBCSIH	=	0x6212
                           006213  1011 _USBMAXO	=	0x6213
                           006214  1012 _USBCSOL	=	0x6214
                           006215  1013 _USBCSOH	=	0x6215
                           006216  1014 _USBCNT0	=	0x6216
                           006216  1015 _USBCNTL	=	0x6216
                           006217  1016 _USBCNTH	=	0x6217
                           006220  1017 _USBF0	=	0x6220
                           006222  1018 _USBF1	=	0x6222
                           006224  1019 _USBF2	=	0x6224
                           006226  1020 _USBF3	=	0x6226
                           006228  1021 _USBF4	=	0x6228
                           00622A  1022 _USBF5	=	0x622a
                           007080  1023 _X_P0	=	0x7080
                           007086  1024 _X_U0CSR	=	0x7086
                           007089  1025 _X_P0IFG	=	0x7089
                           00708A  1026 _X_P1IFG	=	0x708a
                           00708B  1027 _X_P2IFG	=	0x708b
                           00708C  1028 _X_PICTL	=	0x708c
                           00708D  1029 _X_P1IEN	=	0x708d
                           00708F  1030 _X_P0INP	=	0x708f
                           007090  1031 _X_P1	=	0x7090
                           007091  1032 _X_RFIRQF1	=	0x7091
                           007093  1033 _X_MPAGE	=	0x7093
                           007093  1034 _X__XPAGE	=	0x7093
                           007094  1035 _X_T2CTRL	=	0x7094
                           007095  1036 _X_ST0	=	0x7095
                           007096  1037 _X_ST1	=	0x7096
                           007097  1038 _X_ST2	=	0x7097
                           00709C  1039 _X_T2EVTCFG	=	0x709c
                           00709D  1040 _X_SLEEPSTA	=	0x709d
                           00709E  1041 _X_CLKCONSTA	=	0x709e
                           00709F  1042 _X_FMAP	=	0x709f
                           00709F  1043 _X_PSBANK	=	0x709f
                           0070A0  1044 _X_P2	=	0x70a0
                           0070A1  1045 _X_T2IRQF	=	0x70a1
                           0070A2  1046 _X_T2M0	=	0x70a2
                           0070A3  1047 _X_T2M1	=	0x70a3
                           0070A4  1048 _X_T2MOVF0	=	0x70a4
                           0070A5  1049 _X_T2MOVF1	=	0x70a5
                           0070A6  1050 _X_T2MOVF2	=	0x70a6
                           0070A7  1051 _X_T2IRQM	=	0x70a7
                           0070AB  1052 _X_P0IEN	=	0x70ab
                           0070AC  1053 _X_P2IEN	=	0x70ac
                           0070AD  1054 _X_STLOAD	=	0x70ad
                           0070AE  1055 _X_PMUX	=	0x70ae
                           0070AF  1056 _X_T1STAT	=	0x70af
                           0070B1  1057 _X_ENCDI	=	0x70b1
                           0070B2  1058 _X_ENCDO	=	0x70b2
                           0070B3  1059 _X_ENCCS	=	0x70b3
                           0070B4  1060 _X_ADCCON1	=	0x70b4
                           0070B5  1061 _X_ADCCON2	=	0x70b5
                           0070B6  1062 _X_ADCCON3	=	0x70b6
                           0070BA  1063 _X_ADCL	=	0x70ba
                           0070BB  1064 _X_ADCH	=	0x70bb
                           0070BC  1065 _X_RNDL	=	0x70bc
                           0070BD  1066 _X_RNDH	=	0x70bd
                           0070BE  1067 _X_SLEEPCMD	=	0x70be
                           0070BF  1068 _X_RFERRF	=	0x70bf
                           0070C1  1069 _X_U0DBUF	=	0x70c1
                           0070C2  1070 _X_U0BAUD	=	0x70c2
                           0070C3  1071 _X_T2MSEL	=	0x70c3
                           0070C4  1072 _X_U0UCR	=	0x70c4
                           0070C5  1073 _X_U0GCR	=	0x70c5
                           0070C6  1074 _X_CLKCONCMD	=	0x70c6
                           0070C7  1075 _X_MEMCTR	=	0x70c7
                           0070C9  1076 _X_WDCTL	=	0x70c9
                           0070CA  1077 _X_T3CNT	=	0x70ca
                           0070CB  1078 _X_T3CTL	=	0x70cb
                           0070CC  1079 _X_T3CCTL0	=	0x70cc
                           0070CD  1080 _X_T3CC0	=	0x70cd
                           0070CE  1081 _X_T3CCTL1	=	0x70ce
                           0070CF  1082 _X_T3CC1	=	0x70cf
                           0070D1  1083 _X_DMAIRQ	=	0x70d1
                           0070D2  1084 _X_DMA1CFGL	=	0x70d2
                           0070D3  1085 _X_DMA1CFGH	=	0x70d3
                           0070D4  1086 _X_DMA0CFGL	=	0x70d4
                           0070D5  1087 _X_DMA0CFGH	=	0x70d5
                           0070D6  1088 _X_DMAARM	=	0x70d6
                           0070D7  1089 _X_DMAREQ	=	0x70d7
                           0070D8  1090 _X_TIMIF	=	0x70d8
                           0070D9  1091 _X_RFD	=	0x70d9
                           0070DA  1092 _X_T1CC0L	=	0x70da
                           0070DB  1093 _X_T1CC0H	=	0x70db
                           0070DC  1094 _X_T1CC1L	=	0x70dc
                           0070DD  1095 _X_T1CC1H	=	0x70dd
                           0070DE  1096 _X_T1CC2L	=	0x70de
                           0070DF  1097 _X_T1CC2H	=	0x70df
                           0070E1  1098 _X_RFST	=	0x70e1
                           0070E2  1099 _X_T1CNTL	=	0x70e2
                           0070E3  1100 _X_T1CNTH	=	0x70e3
                           0070E4  1101 _X_T1CTL	=	0x70e4
                           0070E5  1102 _X_T1CCTL0	=	0x70e5
                           0070E6  1103 _X_T1CCTL1	=	0x70e6
                           0070E7  1104 _X_T1CCTL2	=	0x70e7
                           0070E9  1105 _X_RFIRQF0	=	0x70e9
                           0070EA  1106 _X_T4CNT	=	0x70ea
                           0070EB  1107 _X_T4CTL	=	0x70eb
                           0070EC  1108 _X_T4CCTL0	=	0x70ec
                           0070ED  1109 _X_T4CC0	=	0x70ed
                           0070EE  1110 _X_T4CCTL1	=	0x70ee
                           0070EF  1111 _X_T4CC1	=	0x70ef
                           0070F1  1112 _X_PERCFG	=	0x70f1
                           0070F2  1113 _X_APCFG	=	0x70f2
                           0070F3  1114 _X_P0SEL	=	0x70f3
                           0070F4  1115 _X_P1SEL	=	0x70f4
                           0070F5  1116 _X_P2SEL	=	0x70f5
                           0070F6  1117 _X_P1INP	=	0x70f6
                           0070F7  1118 _X_P2INP	=	0x70f7
                           0070F8  1119 _X_U1CSR	=	0x70f8
                           0070F9  1120 _X_U1DBUF	=	0x70f9
                           0070FA  1121 _X_U1BAUD	=	0x70fa
                           0070FB  1122 _X_U1UCR	=	0x70fb
                           0070FC  1123 _X_U1GCR	=	0x70fc
                           0070FD  1124 _X_P0DIR	=	0x70fd
                           0070FE  1125 _X_P1DIR	=	0x70fe
                           0070FF  1126 _X_P2DIR	=	0x70ff
                           007800  1127 _X_INFOPAGE	=	0x7800
                           00780C  1128 _X_IEEE_ADDR	=	0x780c
                                   1129 ;--------------------------------------------------------
                                   1130 ; absolute external ram data
                                   1131 ;--------------------------------------------------------
                                   1132 	.area XABS    (ABS,XDATA)
                                   1133 ;--------------------------------------------------------
                                   1134 ; external initialized ram data
                                   1135 ;--------------------------------------------------------
                                   1136 	.area XISEG   (XDATA)
                                   1137 	.area HOME    (CODE)
                                   1138 	.area GSINIT0 (CODE)
                                   1139 	.area GSINIT1 (CODE)
                                   1140 	.area GSINIT2 (CODE)
                                   1141 	.area GSINIT3 (CODE)
                                   1142 	.area GSINIT4 (CODE)
                                   1143 	.area GSINIT5 (CODE)
                                   1144 	.area GSINIT  (CODE)
                                   1145 	.area GSFINAL (CODE)
                                   1146 	.area CSEG    (CODE)
                                   1147 ;--------------------------------------------------------
                                   1148 ; global & static initialisations
                                   1149 ;--------------------------------------------------------
                                   1150 	.area HOME    (CODE)
                                   1151 	.area GSINIT  (CODE)
                                   1152 	.area GSFINAL (CODE)
                                   1153 	.area GSINIT  (CODE)
                                   1154 ;--------------------------------------------------------
                                   1155 ; Home
                                   1156 ;--------------------------------------------------------
                                   1157 	.area HOME    (CODE)
                                   1158 	.area HOME    (CODE)
                                   1159 ;--------------------------------------------------------
                                   1160 ; code
                                   1161 ;--------------------------------------------------------
                                   1162 	.area CSEG    (CODE)
                                   1163 ;------------------------------------------------------------
                                   1164 ;Allocation info for local variables in function 'recv'
                                   1165 ;------------------------------------------------------------
                                   1166 ;abc                       Allocated to registers r5 r6 r7 
                                   1167 ;c                         Allocated to stack - sp -2
                                   1168 ;sloc0                     Allocated to stack - sp -4
                                   1169 ;------------------------------------------------------------
                                   1170 ;	/home/user/contiki/core/net/rime/polite.c:62: recv(struct abc_conn *abc)
                                   1171 ;	-----------------------------------------
                                   1172 ;	 function recv
                                   1173 ;	-----------------------------------------
      000000                       1174 _recv:
                           000007  1175 	ar7 = 0x07
                           000006  1176 	ar6 = 0x06
                           000005  1177 	ar5 = 0x05
                           000004  1178 	ar4 = 0x04
                           000003  1179 	ar3 = 0x03
                           000002  1180 	ar2 = 0x02
                           000001  1181 	ar1 = 0x01
                           000000  1182 	ar0 = 0x00
      000000 E5 81            [12] 1183 	mov	a,sp
      000002 24 05            [12] 1184 	add	a,#0x05
      000004 F5 81            [12] 1185 	mov	sp,a
      000006 AD 82            [24] 1186 	mov	r5,dpl
      000008 AE 83            [24] 1187 	mov	r6,dph
      00000A AF F0            [24] 1188 	mov	r7,b
                                   1189 ;	/home/user/contiki/core/net/rime/polite.c:64: struct polite_conn *c = (struct polite_conn *)abc;
      00000C A8 81            [24] 1190 	mov	r0,sp
      00000E 18               [12] 1191 	dec	r0
      00000F 18               [12] 1192 	dec	r0
      000010 A6 05            [24] 1193 	mov	@r0,ar5
      000012 08               [12] 1194 	inc	r0
      000013 A6 06            [24] 1195 	mov	@r0,ar6
      000015 08               [12] 1196 	inc	r0
      000016 A6 07            [24] 1197 	mov	@r0,ar7
                                   1198 ;	/home/user/contiki/core/net/rime/polite.c:65: if(c->q != NULL &&
      000018 A8 81            [24] 1199 	mov	r0,sp
      00001A 18               [12] 1200 	dec	r0
      00001B 18               [12] 1201 	dec	r0
      00001C 74 24            [12] 1202 	mov	a,#0x24
      00001E 26               [12] 1203 	add	a,@r0
      00001F FA               [12] 1204 	mov	r2,a
      000020 E4               [12] 1205 	clr	a
      000021 08               [12] 1206 	inc	r0
      000022 36               [12] 1207 	addc	a,@r0
      000023 FB               [12] 1208 	mov	r3,a
      000024 08               [12] 1209 	inc	r0
      000025 86 04            [24] 1210 	mov	ar4,@r0
      000027 8A 82            [24] 1211 	mov	dpl,r2
      000029 8B 83            [24] 1212 	mov	dph,r3
      00002B 8C F0            [24] 1213 	mov	b,r4
      00002D 12r00r00         [24] 1214 	lcall	__gptrget
      000030 FD               [12] 1215 	mov	r5,a
      000031 A3               [24] 1216 	inc	dptr
      000032 12r00r00         [24] 1217 	lcall	__gptrget
      000035 FE               [12] 1218 	mov	r6,a
      000036 A3               [24] 1219 	inc	dptr
      000037 12r00r00         [24] 1220 	lcall	__gptrget
      00003A FF               [12] 1221 	mov	r7,a
      00003B ED               [12] 1222 	mov	a,r5
      00003C 4E               [12] 1223 	orl	a,r6
      00003D 70 03            [24] 1224 	jnz	00131$
      00003F 02r02r61         [24] 1225 	ljmp	00104$
      000042                       1226 00131$:
                                   1227 ;	/home/user/contiki/core/net/rime/polite.c:66: packetbuf_datalen() == queuebuf_datalen(c->q) &&
      000042 C0 04            [24] 1228 	push	ar4
      000044 C0 03            [24] 1229 	push	ar3
      000046 C0 02            [24] 1230 	push	ar2
      000048 12r00r00         [24] 1231 	lcall	_packetbuf_datalen
      00004B C8               [12] 1232 	xch	a,r0
      00004C E5 81            [12] 1233 	mov	a,sp
      00004E 24 F9            [12] 1234 	add	a,#0xf9
      000050 C8               [12] 1235 	xch	a,r0
      000051 A6 82            [24] 1236 	mov	@r0,dpl
      000053 08               [12] 1237 	inc	r0
      000054 A6 83            [24] 1238 	mov	@r0,dph
      000056 D0 02            [24] 1239 	pop	ar2
      000058 D0 03            [24] 1240 	pop	ar3
      00005A D0 04            [24] 1241 	pop	ar4
      00005C 8A 82            [24] 1242 	mov	dpl,r2
      00005E 8B 83            [24] 1243 	mov	dph,r3
      000060 8C F0            [24] 1244 	mov	b,r4
      000062 12r00r00         [24] 1245 	lcall	__gptrget
      000065 FD               [12] 1246 	mov	r5,a
      000066 A3               [24] 1247 	inc	dptr
      000067 12r00r00         [24] 1248 	lcall	__gptrget
      00006A FE               [12] 1249 	mov	r6,a
      00006B A3               [24] 1250 	inc	dptr
      00006C 12r00r00         [24] 1251 	lcall	__gptrget
      00006F FF               [12] 1252 	mov	r7,a
      000070 8D 82            [24] 1253 	mov	dpl,r5
      000072 8E 83            [24] 1254 	mov	dph,r6
      000074 8F F0            [24] 1255 	mov	b,r7
      000076 C0 04            [24] 1256 	push	ar4
      000078 C0 03            [24] 1257 	push	ar3
      00007A C0 02            [24] 1258 	push	ar2
      00007C 12r00r00         [24] 1259 	lcall	_queuebuf_datalen
      00007F AE 82            [24] 1260 	mov	r6,dpl
      000081 AF 83            [24] 1261 	mov	r7,dph
      000083 D0 02            [24] 1262 	pop	ar2
      000085 D0 03            [24] 1263 	pop	ar3
      000087 D0 04            [24] 1264 	pop	ar4
      000089 E5 81            [12] 1265 	mov	a,sp
      00008B 24 FC            [12] 1266 	add	a,#0xfc
      00008D F8               [12] 1267 	mov	r0,a
      00008E E6               [12] 1268 	mov	a,@r0
      00008F B5 06 07         [24] 1269 	cjne	a,ar6,00132$
      000092 08               [12] 1270 	inc	r0
      000093 E6               [12] 1271 	mov	a,@r0
      000094 B5 07 02         [24] 1272 	cjne	a,ar7,00132$
      000097 80 03            [24] 1273 	sjmp	00133$
      000099                       1274 00132$:
      000099 02r02r61         [24] 1275 	ljmp	00104$
      00009C                       1276 00133$:
                                   1277 ;	/home/user/contiki/core/net/rime/polite.c:68: MIN(c->hdrsize, packetbuf_datalen())) == 0) {
      00009C C0 02            [24] 1278 	push	ar2
      00009E C0 03            [24] 1279 	push	ar3
      0000A0 C0 04            [24] 1280 	push	ar4
      0000A2 E5 81            [12] 1281 	mov	a,sp
      0000A4 24 FB            [12] 1282 	add	a,#0xfb
      0000A6 F8               [12] 1283 	mov	r0,a
      0000A7 74 27            [12] 1284 	mov	a,#0x27
      0000A9 26               [12] 1285 	add	a,@r0
      0000AA FD               [12] 1286 	mov	r5,a
      0000AB E4               [12] 1287 	clr	a
      0000AC 08               [12] 1288 	inc	r0
      0000AD 36               [12] 1289 	addc	a,@r0
      0000AE FE               [12] 1290 	mov	r6,a
      0000AF 08               [12] 1291 	inc	r0
      0000B0 86 07            [24] 1292 	mov	ar7,@r0
      0000B2 8D 82            [24] 1293 	mov	dpl,r5
      0000B4 8E 83            [24] 1294 	mov	dph,r6
      0000B6 8F F0            [24] 1295 	mov	b,r7
      0000B8 12r00r00         [24] 1296 	lcall	__gptrget
      0000BB FC               [12] 1297 	mov	r4,a
      0000BC C0 07            [24] 1298 	push	ar7
      0000BE C0 06            [24] 1299 	push	ar6
      0000C0 C0 05            [24] 1300 	push	ar5
      0000C2 C0 04            [24] 1301 	push	ar4
      0000C4 C0 03            [24] 1302 	push	ar3
      0000C6 C0 02            [24] 1303 	push	ar2
      0000C8 12r00r00         [24] 1304 	lcall	_packetbuf_datalen
      0000CB C8               [12] 1305 	xch	a,r0
      0000CC E5 81            [12] 1306 	mov	a,sp
      0000CE 24 F3            [12] 1307 	add	a,#0xf3
      0000D0 C8               [12] 1308 	xch	a,r0
      0000D1 A6 82            [24] 1309 	mov	@r0,dpl
      0000D3 08               [12] 1310 	inc	r0
      0000D4 A6 83            [24] 1311 	mov	@r0,dph
      0000D6 D0 02            [24] 1312 	pop	ar2
      0000D8 D0 03            [24] 1313 	pop	ar3
      0000DA D0 04            [24] 1314 	pop	ar4
      0000DC D0 05            [24] 1315 	pop	ar5
      0000DE D0 06            [24] 1316 	pop	ar6
      0000E0 D0 07            [24] 1317 	pop	ar7
      0000E2 8C 03            [24] 1318 	mov	ar3,r4
      0000E4 7C 00            [12] 1319 	mov	r4,#0x00
      0000E6 E5 81            [12] 1320 	mov	a,sp
      0000E8 24 F9            [12] 1321 	add	a,#0xf9
      0000EA F8               [12] 1322 	mov	r0,a
      0000EB C3               [12] 1323 	clr	c
      0000EC EB               [12] 1324 	mov	a,r3
      0000ED 96               [12] 1325 	subb	a,@r0
      0000EE EC               [12] 1326 	mov	a,r4
      0000EF 08               [12] 1327 	inc	r0
      0000F0 96               [12] 1328 	subb	a,@r0
      0000F1 D0 04            [24] 1329 	pop	ar4
      0000F3 D0 03            [24] 1330 	pop	ar3
      0000F5 D0 02            [24] 1331 	pop	ar2
      0000F7 50 16            [24] 1332 	jnc	00111$
      0000F9 8D 82            [24] 1333 	mov	dpl,r5
      0000FB 8E 83            [24] 1334 	mov	dph,r6
      0000FD 8F F0            [24] 1335 	mov	b,r7
      0000FF 12r00r00         [24] 1336 	lcall	__gptrget
      000102 FD               [12] 1337 	mov	r5,a
      000103 E5 81            [12] 1338 	mov	a,sp
      000105 24 FC            [12] 1339 	add	a,#0xfc
      000107 F8               [12] 1340 	mov	r0,a
      000108 A6 05            [24] 1341 	mov	@r0,ar5
      00010A 08               [12] 1342 	inc	r0
      00010B 76 00            [12] 1343 	mov	@r0,#0x00
      00010D 80 1A            [24] 1344 	sjmp	00112$
      00010F                       1345 00111$:
      00010F C0 04            [24] 1346 	push	ar4
      000111 C0 03            [24] 1347 	push	ar3
      000113 C0 02            [24] 1348 	push	ar2
      000115 12r00r00         [24] 1349 	lcall	_packetbuf_datalen
      000118 C8               [12] 1350 	xch	a,r0
      000119 E5 81            [12] 1351 	mov	a,sp
      00011B 24 F9            [12] 1352 	add	a,#0xf9
      00011D C8               [12] 1353 	xch	a,r0
      00011E A6 82            [24] 1354 	mov	@r0,dpl
      000120 08               [12] 1355 	inc	r0
      000121 A6 83            [24] 1356 	mov	@r0,dph
      000123 D0 02            [24] 1357 	pop	ar2
      000125 D0 03            [24] 1358 	pop	ar3
      000127 D0 04            [24] 1359 	pop	ar4
      000129                       1360 00112$:
                                   1361 ;	/home/user/contiki/core/net/rime/polite.c:67: memcmp(packetbuf_dataptr(), queuebuf_dataptr(c->q),
      000129 8A 82            [24] 1362 	mov	dpl,r2
      00012B 8B 83            [24] 1363 	mov	dph,r3
      00012D 8C F0            [24] 1364 	mov	b,r4
      00012F 12r00r00         [24] 1365 	lcall	__gptrget
      000132 FD               [12] 1366 	mov	r5,a
      000133 A3               [24] 1367 	inc	dptr
      000134 12r00r00         [24] 1368 	lcall	__gptrget
      000137 FE               [12] 1369 	mov	r6,a
      000138 A3               [24] 1370 	inc	dptr
      000139 12r00r00         [24] 1371 	lcall	__gptrget
      00013C FF               [12] 1372 	mov	r7,a
      00013D 8D 82            [24] 1373 	mov	dpl,r5
      00013F 8E 83            [24] 1374 	mov	dph,r6
      000141 8F F0            [24] 1375 	mov	b,r7
      000143 C0 04            [24] 1376 	push	ar4
      000145 C0 03            [24] 1377 	push	ar3
      000147 C0 02            [24] 1378 	push	ar2
      000149 12r00r00         [24] 1379 	lcall	_queuebuf_dataptr
      00014C AD 82            [24] 1380 	mov	r5,dpl
      00014E AE 83            [24] 1381 	mov	r6,dph
      000150 AF F0            [24] 1382 	mov	r7,b
      000152 D0 02            [24] 1383 	pop	ar2
      000154 D0 03            [24] 1384 	pop	ar3
      000156 D0 04            [24] 1385 	pop	ar4
      000158 C0 02            [24] 1386 	push	ar2
      00015A C0 03            [24] 1387 	push	ar3
      00015C C0 04            [24] 1388 	push	ar4
      00015E C0 07            [24] 1389 	push	ar7
      000160 C0 06            [24] 1390 	push	ar6
      000162 C0 05            [24] 1391 	push	ar5
      000164 12r00r00         [24] 1392 	lcall	_packetbuf_dataptr
      000167 AA 82            [24] 1393 	mov	r2,dpl
      000169 AB 83            [24] 1394 	mov	r3,dph
      00016B AC F0            [24] 1395 	mov	r4,b
      00016D D0 05            [24] 1396 	pop	ar5
      00016F D0 06            [24] 1397 	pop	ar6
      000171 D0 07            [24] 1398 	pop	ar7
      000173 C0 04            [24] 1399 	push	ar4
      000175 C0 03            [24] 1400 	push	ar3
      000177 C0 02            [24] 1401 	push	ar2
      000179 E5 81            [12] 1402 	mov	a,sp
      00017B 24 F6            [12] 1403 	add	a,#0xf6
      00017D F8               [12] 1404 	mov	r0,a
      00017E E6               [12] 1405 	mov	a,@r0
      00017F C0 E0            [24] 1406 	push	acc
      000181 08               [12] 1407 	inc	r0
      000182 E6               [12] 1408 	mov	a,@r0
      000183 C0 E0            [24] 1409 	push	acc
      000185 C0 05            [24] 1410 	push	ar5
      000187 C0 06            [24] 1411 	push	ar6
      000189 C0 07            [24] 1412 	push	ar7
      00018B 8A 82            [24] 1413 	mov	dpl,r2
      00018D 8B 83            [24] 1414 	mov	dph,r3
      00018F 8C F0            [24] 1415 	mov	b,r4
      000191 12r00r00         [24] 1416 	lcall	_memcmp
      000194 AE 82            [24] 1417 	mov	r6,dpl
      000196 AF 83            [24] 1418 	mov	r7,dph
      000198 E5 81            [12] 1419 	mov	a,sp
      00019A 24 FB            [12] 1420 	add	a,#0xfb
      00019C F5 81            [12] 1421 	mov	sp,a
      00019E D0 02            [24] 1422 	pop	ar2
      0001A0 D0 03            [24] 1423 	pop	ar3
      0001A2 D0 04            [24] 1424 	pop	ar4
      0001A4 D0 04            [24] 1425 	pop	ar4
      0001A6 D0 03            [24] 1426 	pop	ar3
      0001A8 D0 02            [24] 1427 	pop	ar2
      0001AA EE               [12] 1428 	mov	a,r6
      0001AB 4F               [12] 1429 	orl	a,r7
      0001AC 60 03            [24] 1430 	jz	00135$
      0001AE 02r02r61         [24] 1431 	ljmp	00104$
      0001B1                       1432 00135$:
                                   1433 ;	/home/user/contiki/core/net/rime/polite.c:71: queuebuf_free(c->q);
      0001B1 8A 82            [24] 1434 	mov	dpl,r2
      0001B3 8B 83            [24] 1435 	mov	dph,r3
      0001B5 8C F0            [24] 1436 	mov	b,r4
      0001B7 12r00r00         [24] 1437 	lcall	__gptrget
      0001BA FD               [12] 1438 	mov	r5,a
      0001BB A3               [24] 1439 	inc	dptr
      0001BC 12r00r00         [24] 1440 	lcall	__gptrget
      0001BF FE               [12] 1441 	mov	r6,a
      0001C0 A3               [24] 1442 	inc	dptr
      0001C1 12r00r00         [24] 1443 	lcall	__gptrget
      0001C4 FF               [12] 1444 	mov	r7,a
      0001C5 8D 82            [24] 1445 	mov	dpl,r5
      0001C7 8E 83            [24] 1446 	mov	dph,r6
      0001C9 8F F0            [24] 1447 	mov	b,r7
      0001CB C0 04            [24] 1448 	push	ar4
      0001CD C0 03            [24] 1449 	push	ar3
      0001CF C0 02            [24] 1450 	push	ar2
      0001D1 12r00r00         [24] 1451 	lcall	_queuebuf_free
      0001D4 D0 02            [24] 1452 	pop	ar2
      0001D6 D0 03            [24] 1453 	pop	ar3
      0001D8 D0 04            [24] 1454 	pop	ar4
                                   1455 ;	/home/user/contiki/core/net/rime/polite.c:72: c->q = NULL;
      0001DA 8A 82            [24] 1456 	mov	dpl,r2
      0001DC 8B 83            [24] 1457 	mov	dph,r3
      0001DE 8C F0            [24] 1458 	mov	b,r4
      0001E0 E4               [12] 1459 	clr	a
      0001E1 12r00r00         [24] 1460 	lcall	__gptrput
      0001E4 A3               [24] 1461 	inc	dptr
      0001E5 E4               [12] 1462 	clr	a
      0001E6 12r00r00         [24] 1463 	lcall	__gptrput
      0001E9 A3               [24] 1464 	inc	dptr
      0001EA E4               [12] 1465 	clr	a
      0001EB 12r00r00         [24] 1466 	lcall	__gptrput
                                   1467 ;	/home/user/contiki/core/net/rime/polite.c:73: ctimer_stop(&c->t);
      0001EE A8 81            [24] 1468 	mov	r0,sp
      0001F0 18               [12] 1469 	dec	r0
      0001F1 18               [12] 1470 	dec	r0
      0001F2 74 0F            [12] 1471 	mov	a,#0x0F
      0001F4 26               [12] 1472 	add	a,@r0
      0001F5 FD               [12] 1473 	mov	r5,a
      0001F6 E4               [12] 1474 	clr	a
      0001F7 08               [12] 1475 	inc	r0
      0001F8 36               [12] 1476 	addc	a,@r0
      0001F9 FE               [12] 1477 	mov	r6,a
      0001FA 08               [12] 1478 	inc	r0
      0001FB 86 07            [24] 1479 	mov	ar7,@r0
      0001FD 8D 82            [24] 1480 	mov	dpl,r5
      0001FF 8E 83            [24] 1481 	mov	dph,r6
      000201 8F F0            [24] 1482 	mov	b,r7
      000203 12r00r00         [24] 1483 	lcall	_ctimer_stop
                                   1484 ;	/home/user/contiki/core/net/rime/polite.c:74: if(c->cb->dropped) {
      000206 A8 81            [24] 1485 	mov	r0,sp
      000208 18               [12] 1486 	dec	r0
      000209 18               [12] 1487 	dec	r0
      00020A 74 0C            [12] 1488 	mov	a,#0x0C
      00020C 26               [12] 1489 	add	a,@r0
      00020D FD               [12] 1490 	mov	r5,a
      00020E E4               [12] 1491 	clr	a
      00020F 08               [12] 1492 	inc	r0
      000210 36               [12] 1493 	addc	a,@r0
      000211 FE               [12] 1494 	mov	r6,a
      000212 08               [12] 1495 	inc	r0
      000213 86 07            [24] 1496 	mov	ar7,@r0
      000215 8D 82            [24] 1497 	mov	dpl,r5
      000217 8E 83            [24] 1498 	mov	dph,r6
      000219 8F F0            [24] 1499 	mov	b,r7
      00021B 12r00r00         [24] 1500 	lcall	__gptrget
      00021E FD               [12] 1501 	mov	r5,a
      00021F A3               [24] 1502 	inc	dptr
      000220 12r00r00         [24] 1503 	lcall	__gptrget
      000223 FE               [12] 1504 	mov	r6,a
      000224 A3               [24] 1505 	inc	dptr
      000225 12r00r00         [24] 1506 	lcall	__gptrget
      000228 FF               [12] 1507 	mov	r7,a
      000229 74 04            [12] 1508 	mov	a,#0x04
      00022B 2D               [12] 1509 	add	a,r5
      00022C FD               [12] 1510 	mov	r5,a
      00022D E4               [12] 1511 	clr	a
      00022E 3E               [12] 1512 	addc	a,r6
      00022F FE               [12] 1513 	mov	r6,a
      000230 8D 82            [24] 1514 	mov	dpl,r5
      000232 8E 83            [24] 1515 	mov	dph,r6
      000234 8F F0            [24] 1516 	mov	b,r7
      000236 12r00r00         [24] 1517 	lcall	__gptrget
      000239 FE               [12] 1518 	mov	r6,a
      00023A A3               [24] 1519 	inc	dptr
      00023B 12r00r00         [24] 1520 	lcall	__gptrget
      00023E FF               [12] 1521 	mov	r7,a
      00023F 4E               [12] 1522 	orl	a,r6
      000240 60 1F            [24] 1523 	jz	00104$
                                   1524 ;	/home/user/contiki/core/net/rime/polite.c:75: c->cb->dropped(c);
      000242 C0 07            [24] 1525 	push	ar7
      000244 C0 06            [24] 1526 	push	ar6
      000246 12r02r4B         [24] 1527 	lcall	00137$
      000249 80 12            [24] 1528 	sjmp	00138$
      00024B                       1529 00137$:
      00024B C0 06            [24] 1530 	push	ar6
      00024D C0 07            [24] 1531 	push	ar7
      00024F E5 81            [12] 1532 	mov	a,sp
      000251 24 F8            [12] 1533 	add	a,#0xf8
      000253 F8               [12] 1534 	mov	r0,a
      000254 86 82            [24] 1535 	mov	dpl,@r0
      000256 08               [12] 1536 	inc	r0
      000257 86 83            [24] 1537 	mov	dph,@r0
      000259 08               [12] 1538 	inc	r0
      00025A 86 F0            [24] 1539 	mov	b,@r0
      00025C 22               [24] 1540 	ret
      00025D                       1541 00138$:
      00025D D0 06            [24] 1542 	pop	ar6
      00025F D0 07            [24] 1543 	pop	ar7
      000261                       1544 00104$:
                                   1545 ;	/home/user/contiki/core/net/rime/polite.c:78: if(c->cb->recv) {
      000261 A8 81            [24] 1546 	mov	r0,sp
      000263 18               [12] 1547 	dec	r0
      000264 18               [12] 1548 	dec	r0
      000265 74 0C            [12] 1549 	mov	a,#0x0C
      000267 26               [12] 1550 	add	a,@r0
      000268 FD               [12] 1551 	mov	r5,a
      000269 E4               [12] 1552 	clr	a
      00026A 08               [12] 1553 	inc	r0
      00026B 36               [12] 1554 	addc	a,@r0
      00026C FE               [12] 1555 	mov	r6,a
      00026D 08               [12] 1556 	inc	r0
      00026E 86 07            [24] 1557 	mov	ar7,@r0
      000270 8D 82            [24] 1558 	mov	dpl,r5
      000272 8E 83            [24] 1559 	mov	dph,r6
      000274 8F F0            [24] 1560 	mov	b,r7
      000276 12r00r00         [24] 1561 	lcall	__gptrget
      000279 FD               [12] 1562 	mov	r5,a
      00027A A3               [24] 1563 	inc	dptr
      00027B 12r00r00         [24] 1564 	lcall	__gptrget
      00027E FE               [12] 1565 	mov	r6,a
      00027F A3               [24] 1566 	inc	dptr
      000280 12r00r00         [24] 1567 	lcall	__gptrget
      000283 FF               [12] 1568 	mov	r7,a
      000284 8D 82            [24] 1569 	mov	dpl,r5
      000286 8E 83            [24] 1570 	mov	dph,r6
      000288 8F F0            [24] 1571 	mov	b,r7
      00028A 12r00r00         [24] 1572 	lcall	__gptrget
      00028D FE               [12] 1573 	mov	r6,a
      00028E A3               [24] 1574 	inc	dptr
      00028F 12r00r00         [24] 1575 	lcall	__gptrget
      000292 FF               [12] 1576 	mov	r7,a
      000293 4E               [12] 1577 	orl	a,r6
      000294 60 1F            [24] 1578 	jz	00109$
                                   1579 ;	/home/user/contiki/core/net/rime/polite.c:79: c->cb->recv(c);
      000296 C0 07            [24] 1580 	push	ar7
      000298 C0 06            [24] 1581 	push	ar6
      00029A 12r02r9F         [24] 1582 	lcall	00140$
      00029D 80 12            [24] 1583 	sjmp	00141$
      00029F                       1584 00140$:
      00029F C0 06            [24] 1585 	push	ar6
      0002A1 C0 07            [24] 1586 	push	ar7
      0002A3 E5 81            [12] 1587 	mov	a,sp
      0002A5 24 F8            [12] 1588 	add	a,#0xf8
      0002A7 F8               [12] 1589 	mov	r0,a
      0002A8 86 82            [24] 1590 	mov	dpl,@r0
      0002AA 08               [12] 1591 	inc	r0
      0002AB 86 83            [24] 1592 	mov	dph,@r0
      0002AD 08               [12] 1593 	inc	r0
      0002AE 86 F0            [24] 1594 	mov	b,@r0
      0002B0 22               [24] 1595 	ret
      0002B1                       1596 00141$:
      0002B1 D0 06            [24] 1597 	pop	ar6
      0002B3 D0 07            [24] 1598 	pop	ar7
      0002B5                       1599 00109$:
      0002B5 E5 81            [12] 1600 	mov	a,sp
      0002B7 24 FB            [12] 1601 	add	a,#0xFB
      0002B9 F5 81            [12] 1602 	mov	sp,a
      0002BB 22               [24] 1603 	ret
                                   1604 ;------------------------------------------------------------
                                   1605 ;Allocation info for local variables in function 'sent'
                                   1606 ;------------------------------------------------------------
                                   1607 ;status                    Allocated to stack - sp -3
                                   1608 ;num_tx                    Allocated to stack - sp -5
                                   1609 ;c                         Allocated to registers 
                                   1610 ;------------------------------------------------------------
                                   1611 ;	/home/user/contiki/core/net/rime/polite.c:84: sent(struct abc_conn *c, int status, int num_tx)
                                   1612 ;	-----------------------------------------
                                   1613 ;	 function sent
                                   1614 ;	-----------------------------------------
      0002BC                       1615 _sent:
                                   1616 ;	/home/user/contiki/core/net/rime/polite.c:87: }
      0002BC 22               [24] 1617 	ret
                                   1618 ;------------------------------------------------------------
                                   1619 ;Allocation info for local variables in function 'send'
                                   1620 ;------------------------------------------------------------
                                   1621 ;ptr                       Allocated to registers r5 r6 r7 
                                   1622 ;c                         Allocated to stack - sp -2
                                   1623 ;sloc0                     Allocated to stack - sp +4
                                   1624 ;------------------------------------------------------------
                                   1625 ;	/home/user/contiki/core/net/rime/polite.c:90: send(void *ptr)
                                   1626 ;	-----------------------------------------
                                   1627 ;	 function send
                                   1628 ;	-----------------------------------------
      0002BD                       1629 _send:
      0002BD 05 81            [12] 1630 	inc	sp
      0002BF 05 81            [12] 1631 	inc	sp
      0002C1 05 81            [12] 1632 	inc	sp
      0002C3 AD 82            [24] 1633 	mov	r5,dpl
      0002C5 AE 83            [24] 1634 	mov	r6,dph
      0002C7 AF F0            [24] 1635 	mov	r7,b
                                   1636 ;	/home/user/contiki/core/net/rime/polite.c:92: struct polite_conn *c = ptr;
      0002C9 A8 81            [24] 1637 	mov	r0,sp
      0002CB 18               [12] 1638 	dec	r0
      0002CC 18               [12] 1639 	dec	r0
      0002CD A6 05            [24] 1640 	mov	@r0,ar5
      0002CF 08               [12] 1641 	inc	r0
      0002D0 A6 06            [24] 1642 	mov	@r0,ar6
      0002D2 08               [12] 1643 	inc	r0
      0002D3 A6 07            [24] 1644 	mov	@r0,ar7
                                   1645 ;	/home/user/contiki/core/net/rime/polite.c:94: if(c->q != NULL) {
      0002D5 A8 81            [24] 1646 	mov	r0,sp
      0002D7 18               [12] 1647 	dec	r0
      0002D8 18               [12] 1648 	dec	r0
      0002D9 74 24            [12] 1649 	mov	a,#0x24
      0002DB 26               [12] 1650 	add	a,@r0
      0002DC FA               [12] 1651 	mov	r2,a
      0002DD E4               [12] 1652 	clr	a
      0002DE 08               [12] 1653 	inc	r0
      0002DF 36               [12] 1654 	addc	a,@r0
      0002E0 FB               [12] 1655 	mov	r3,a
      0002E1 08               [12] 1656 	inc	r0
      0002E2 86 04            [24] 1657 	mov	ar4,@r0
      0002E4 8A 82            [24] 1658 	mov	dpl,r2
      0002E6 8B 83            [24] 1659 	mov	dph,r3
      0002E8 8C F0            [24] 1660 	mov	b,r4
      0002EA 12r00r00         [24] 1661 	lcall	__gptrget
      0002ED FF               [12] 1662 	mov	r7,a
      0002EE A3               [24] 1663 	inc	dptr
      0002EF 12r00r00         [24] 1664 	lcall	__gptrget
      0002F2 FE               [12] 1665 	mov	r6,a
      0002F3 A3               [24] 1666 	inc	dptr
      0002F4 12r00r00         [24] 1667 	lcall	__gptrget
      0002F7 FD               [12] 1668 	mov	r5,a
      0002F8 EF               [12] 1669 	mov	a,r7
      0002F9 4E               [12] 1670 	orl	a,r6
      0002FA 70 03            [24] 1671 	jnz	00113$
      0002FC 02r03rBB         [24] 1672 	ljmp	00105$
      0002FF                       1673 00113$:
                                   1674 ;	/home/user/contiki/core/net/rime/polite.c:95: queuebuf_to_packetbuf(c->q);
      0002FF 8F 82            [24] 1675 	mov	dpl,r7
      000301 8E 83            [24] 1676 	mov	dph,r6
      000303 8D F0            [24] 1677 	mov	b,r5
      000305 C0 04            [24] 1678 	push	ar4
      000307 C0 03            [24] 1679 	push	ar3
      000309 C0 02            [24] 1680 	push	ar2
      00030B 12r00r00         [24] 1681 	lcall	_queuebuf_to_packetbuf
      00030E D0 02            [24] 1682 	pop	ar2
      000310 D0 03            [24] 1683 	pop	ar3
      000312 D0 04            [24] 1684 	pop	ar4
                                   1685 ;	/home/user/contiki/core/net/rime/polite.c:96: queuebuf_free(c->q);
      000314 8A 82            [24] 1686 	mov	dpl,r2
      000316 8B 83            [24] 1687 	mov	dph,r3
      000318 8C F0            [24] 1688 	mov	b,r4
      00031A 12r00r00         [24] 1689 	lcall	__gptrget
      00031D FD               [12] 1690 	mov	r5,a
      00031E A3               [24] 1691 	inc	dptr
      00031F 12r00r00         [24] 1692 	lcall	__gptrget
      000322 FE               [12] 1693 	mov	r6,a
      000323 A3               [24] 1694 	inc	dptr
      000324 12r00r00         [24] 1695 	lcall	__gptrget
      000327 FF               [12] 1696 	mov	r7,a
      000328 8D 82            [24] 1697 	mov	dpl,r5
      00032A 8E 83            [24] 1698 	mov	dph,r6
      00032C 8F F0            [24] 1699 	mov	b,r7
      00032E C0 04            [24] 1700 	push	ar4
      000330 C0 03            [24] 1701 	push	ar3
      000332 C0 02            [24] 1702 	push	ar2
      000334 12r00r00         [24] 1703 	lcall	_queuebuf_free
      000337 D0 02            [24] 1704 	pop	ar2
      000339 D0 03            [24] 1705 	pop	ar3
      00033B D0 04            [24] 1706 	pop	ar4
                                   1707 ;	/home/user/contiki/core/net/rime/polite.c:97: c->q = NULL;
      00033D 8A 82            [24] 1708 	mov	dpl,r2
      00033F 8B 83            [24] 1709 	mov	dph,r3
      000341 8C F0            [24] 1710 	mov	b,r4
      000343 E4               [12] 1711 	clr	a
      000344 12r00r00         [24] 1712 	lcall	__gptrput
      000347 A3               [24] 1713 	inc	dptr
      000348 E4               [12] 1714 	clr	a
      000349 12r00r00         [24] 1715 	lcall	__gptrput
      00034C A3               [24] 1716 	inc	dptr
      00034D E4               [12] 1717 	clr	a
      00034E 12r00r00         [24] 1718 	lcall	__gptrput
                                   1719 ;	/home/user/contiki/core/net/rime/polite.c:98: abc_send(&c->c);
      000351 A8 81            [24] 1720 	mov	r0,sp
      000353 18               [12] 1721 	dec	r0
      000354 18               [12] 1722 	dec	r0
      000355 86 82            [24] 1723 	mov	dpl,@r0
      000357 08               [12] 1724 	inc	r0
      000358 86 83            [24] 1725 	mov	dph,@r0
      00035A 08               [12] 1726 	inc	r0
      00035B 86 F0            [24] 1727 	mov	b,@r0
      00035D 12r00r00         [24] 1728 	lcall	_abc_send
                                   1729 ;	/home/user/contiki/core/net/rime/polite.c:99: if(c->cb->sent) {
      000360 A8 81            [24] 1730 	mov	r0,sp
      000362 18               [12] 1731 	dec	r0
      000363 18               [12] 1732 	dec	r0
      000364 74 0C            [12] 1733 	mov	a,#0x0C
      000366 26               [12] 1734 	add	a,@r0
      000367 FD               [12] 1735 	mov	r5,a
      000368 E4               [12] 1736 	clr	a
      000369 08               [12] 1737 	inc	r0
      00036A 36               [12] 1738 	addc	a,@r0
      00036B FE               [12] 1739 	mov	r6,a
      00036C 08               [12] 1740 	inc	r0
      00036D 86 07            [24] 1741 	mov	ar7,@r0
      00036F 8D 82            [24] 1742 	mov	dpl,r5
      000371 8E 83            [24] 1743 	mov	dph,r6
      000373 8F F0            [24] 1744 	mov	b,r7
      000375 12r00r00         [24] 1745 	lcall	__gptrget
      000378 FD               [12] 1746 	mov	r5,a
      000379 A3               [24] 1747 	inc	dptr
      00037A 12r00r00         [24] 1748 	lcall	__gptrget
      00037D FE               [12] 1749 	mov	r6,a
      00037E A3               [24] 1750 	inc	dptr
      00037F 12r00r00         [24] 1751 	lcall	__gptrget
      000382 FF               [12] 1752 	mov	r7,a
      000383 74 02            [12] 1753 	mov	a,#0x02
      000385 2D               [12] 1754 	add	a,r5
      000386 FD               [12] 1755 	mov	r5,a
      000387 E4               [12] 1756 	clr	a
      000388 3E               [12] 1757 	addc	a,r6
      000389 FE               [12] 1758 	mov	r6,a
      00038A 8D 82            [24] 1759 	mov	dpl,r5
      00038C 8E 83            [24] 1760 	mov	dph,r6
      00038E 8F F0            [24] 1761 	mov	b,r7
      000390 12r00r00         [24] 1762 	lcall	__gptrget
      000393 FE               [12] 1763 	mov	r6,a
      000394 A3               [24] 1764 	inc	dptr
      000395 12r00r00         [24] 1765 	lcall	__gptrget
      000398 FF               [12] 1766 	mov	r7,a
      000399 4E               [12] 1767 	orl	a,r6
      00039A 60 1F            [24] 1768 	jz	00105$
                                   1769 ;	/home/user/contiki/core/net/rime/polite.c:100: c->cb->sent(c);
      00039C C0 07            [24] 1770 	push	ar7
      00039E C0 06            [24] 1771 	push	ar6
      0003A0 12r03rA5         [24] 1772 	lcall	00115$
      0003A3 80 12            [24] 1773 	sjmp	00116$
      0003A5                       1774 00115$:
      0003A5 C0 06            [24] 1775 	push	ar6
      0003A7 C0 07            [24] 1776 	push	ar7
      0003A9 E5 81            [12] 1777 	mov	a,sp
      0003AB 24 F8            [12] 1778 	add	a,#0xf8
      0003AD F8               [12] 1779 	mov	r0,a
      0003AE 86 82            [24] 1780 	mov	dpl,@r0
      0003B0 08               [12] 1781 	inc	r0
      0003B1 86 83            [24] 1782 	mov	dph,@r0
      0003B3 08               [12] 1783 	inc	r0
      0003B4 86 F0            [24] 1784 	mov	b,@r0
      0003B6 22               [24] 1785 	ret
      0003B7                       1786 00116$:
      0003B7 D0 06            [24] 1787 	pop	ar6
      0003B9 D0 07            [24] 1788 	pop	ar7
      0003BB                       1789 00105$:
      0003BB 15 81            [12] 1790 	dec	sp
      0003BD 15 81            [12] 1791 	dec	sp
      0003BF 15 81            [12] 1792 	dec	sp
      0003C1 22               [24] 1793 	ret
                                   1794 ;------------------------------------------------------------
                                   1795 ;Allocation info for local variables in function 'polite_open'
                                   1796 ;------------------------------------------------------------
                                   1797 ;channel                   Allocated to stack - sp -3
                                   1798 ;cb                        Allocated to stack - sp -6
                                   1799 ;c                         Allocated to registers r5 r6 r7 
                                   1800 ;------------------------------------------------------------
                                   1801 ;	/home/user/contiki/core/net/rime/polite.c:108: polite_open(struct polite_conn *c, uint16_t channel,
                                   1802 ;	-----------------------------------------
                                   1803 ;	 function polite_open
                                   1804 ;	-----------------------------------------
      0003C2                       1805 _polite_open:
      0003C2 AD 82            [24] 1806 	mov	r5,dpl
      0003C4 AE 83            [24] 1807 	mov	r6,dph
      0003C6 AF F0            [24] 1808 	mov	r7,b
                                   1809 ;	/home/user/contiki/core/net/rime/polite.c:111: abc_open(&c->c, channel, &abc);
      0003C8 C0 07            [24] 1810 	push	ar7
      0003CA C0 06            [24] 1811 	push	ar6
      0003CC C0 05            [24] 1812 	push	ar5
      0003CE 74r00            [12] 1813 	mov	a,#_abc
      0003D0 C0 E0            [24] 1814 	push	acc
      0003D2 74s00            [12] 1815 	mov	a,#(_abc >> 8)
      0003D4 C0 E0            [24] 1816 	push	acc
      0003D6 74 80            [12] 1817 	mov	a,#0x80
      0003D8 C0 E0            [24] 1818 	push	acc
      0003DA E5 81            [12] 1819 	mov	a,sp
      0003DC 24 F7            [12] 1820 	add	a,#0xf7
      0003DE F8               [12] 1821 	mov	r0,a
      0003DF E6               [12] 1822 	mov	a,@r0
      0003E0 C0 E0            [24] 1823 	push	acc
      0003E2 08               [12] 1824 	inc	r0
      0003E3 E6               [12] 1825 	mov	a,@r0
      0003E4 C0 E0            [24] 1826 	push	acc
      0003E6 8D 82            [24] 1827 	mov	dpl,r5
      0003E8 8E 83            [24] 1828 	mov	dph,r6
      0003EA 8F F0            [24] 1829 	mov	b,r7
      0003EC 12r00r00         [24] 1830 	lcall	_abc_open
      0003EF E5 81            [12] 1831 	mov	a,sp
      0003F1 24 FB            [12] 1832 	add	a,#0xfb
      0003F3 F5 81            [12] 1833 	mov	sp,a
      0003F5 D0 05            [24] 1834 	pop	ar5
      0003F7 D0 06            [24] 1835 	pop	ar6
      0003F9 D0 07            [24] 1836 	pop	ar7
                                   1837 ;	/home/user/contiki/core/net/rime/polite.c:112: c->cb = cb;
      0003FB 74 0C            [12] 1838 	mov	a,#0x0C
      0003FD 2D               [12] 1839 	add	a,r5
      0003FE FD               [12] 1840 	mov	r5,a
      0003FF E4               [12] 1841 	clr	a
      000400 3E               [12] 1842 	addc	a,r6
      000401 FE               [12] 1843 	mov	r6,a
      000402 8D 82            [24] 1844 	mov	dpl,r5
      000404 8E 83            [24] 1845 	mov	dph,r6
      000406 8F F0            [24] 1846 	mov	b,r7
      000408 E5 81            [12] 1847 	mov	a,sp
      00040A 24 FA            [12] 1848 	add	a,#0xfa
      00040C F8               [12] 1849 	mov	r0,a
      00040D E6               [12] 1850 	mov	a,@r0
      00040E 12r00r00         [24] 1851 	lcall	__gptrput
      000411 A3               [24] 1852 	inc	dptr
      000412 08               [12] 1853 	inc	r0
      000413 E6               [12] 1854 	mov	a,@r0
      000414 12r00r00         [24] 1855 	lcall	__gptrput
      000417 A3               [24] 1856 	inc	dptr
      000418 08               [12] 1857 	inc	r0
      000419 E6               [12] 1858 	mov	a,@r0
      00041A 02r00r00         [24] 1859 	ljmp	__gptrput
                                   1860 ;------------------------------------------------------------
                                   1861 ;Allocation info for local variables in function 'polite_close'
                                   1862 ;------------------------------------------------------------
                                   1863 ;c                         Allocated to registers r5 r6 r7 
                                   1864 ;------------------------------------------------------------
                                   1865 ;	/home/user/contiki/core/net/rime/polite.c:116: polite_close(struct polite_conn *c)
                                   1866 ;	-----------------------------------------
                                   1867 ;	 function polite_close
                                   1868 ;	-----------------------------------------
      00041D                       1869 _polite_close:
                                   1870 ;	/home/user/contiki/core/net/rime/polite.c:118: abc_close(&c->c);
      00041D AD 82            [24] 1871 	mov	r5,dpl
      00041F AE 83            [24] 1872 	mov	r6,dph
      000421 AF F0            [24] 1873 	mov	r7,b
      000423 C0 07            [24] 1874 	push	ar7
      000425 C0 06            [24] 1875 	push	ar6
      000427 C0 05            [24] 1876 	push	ar5
      000429 12r00r00         [24] 1877 	lcall	_abc_close
      00042C D0 05            [24] 1878 	pop	ar5
      00042E D0 06            [24] 1879 	pop	ar6
      000430 D0 07            [24] 1880 	pop	ar7
                                   1881 ;	/home/user/contiki/core/net/rime/polite.c:119: ctimer_stop(&c->t);
      000432 74 0F            [12] 1882 	mov	a,#0x0F
      000434 2D               [12] 1883 	add	a,r5
      000435 FA               [12] 1884 	mov	r2,a
      000436 E4               [12] 1885 	clr	a
      000437 3E               [12] 1886 	addc	a,r6
      000438 FB               [12] 1887 	mov	r3,a
      000439 8F 04            [24] 1888 	mov	ar4,r7
      00043B 8A 82            [24] 1889 	mov	dpl,r2
      00043D 8B 83            [24] 1890 	mov	dph,r3
      00043F 8C F0            [24] 1891 	mov	b,r4
      000441 C0 07            [24] 1892 	push	ar7
      000443 C0 06            [24] 1893 	push	ar6
      000445 C0 05            [24] 1894 	push	ar5
      000447 12r00r00         [24] 1895 	lcall	_ctimer_stop
      00044A D0 05            [24] 1896 	pop	ar5
      00044C D0 06            [24] 1897 	pop	ar6
      00044E D0 07            [24] 1898 	pop	ar7
                                   1899 ;	/home/user/contiki/core/net/rime/polite.c:120: if(c->q != NULL) {
      000450 74 24            [12] 1900 	mov	a,#0x24
      000452 2D               [12] 1901 	add	a,r5
      000453 FD               [12] 1902 	mov	r5,a
      000454 E4               [12] 1903 	clr	a
      000455 3E               [12] 1904 	addc	a,r6
      000456 FE               [12] 1905 	mov	r6,a
      000457 8D 82            [24] 1906 	mov	dpl,r5
      000459 8E 83            [24] 1907 	mov	dph,r6
      00045B 8F F0            [24] 1908 	mov	b,r7
      00045D 12r00r00         [24] 1909 	lcall	__gptrget
      000460 FA               [12] 1910 	mov	r2,a
      000461 A3               [24] 1911 	inc	dptr
      000462 12r00r00         [24] 1912 	lcall	__gptrget
      000465 FB               [12] 1913 	mov	r3,a
      000466 A3               [24] 1914 	inc	dptr
      000467 12r00r00         [24] 1915 	lcall	__gptrget
      00046A FC               [12] 1916 	mov	r4,a
      00046B EA               [12] 1917 	mov	a,r2
      00046C 4B               [12] 1918 	orl	a,r3
      00046D 60 29            [24] 1919 	jz	00103$
                                   1920 ;	/home/user/contiki/core/net/rime/polite.c:121: queuebuf_free(c->q);
      00046F 8A 82            [24] 1921 	mov	dpl,r2
      000471 8B 83            [24] 1922 	mov	dph,r3
      000473 8C F0            [24] 1923 	mov	b,r4
      000475 C0 07            [24] 1924 	push	ar7
      000477 C0 06            [24] 1925 	push	ar6
      000479 C0 05            [24] 1926 	push	ar5
      00047B 12r00r00         [24] 1927 	lcall	_queuebuf_free
      00047E D0 05            [24] 1928 	pop	ar5
      000480 D0 06            [24] 1929 	pop	ar6
      000482 D0 07            [24] 1930 	pop	ar7
                                   1931 ;	/home/user/contiki/core/net/rime/polite.c:122: c->q = NULL;
      000484 8D 82            [24] 1932 	mov	dpl,r5
      000486 8E 83            [24] 1933 	mov	dph,r6
      000488 8F F0            [24] 1934 	mov	b,r7
      00048A E4               [12] 1935 	clr	a
      00048B 12r00r00         [24] 1936 	lcall	__gptrput
      00048E A3               [24] 1937 	inc	dptr
      00048F E4               [12] 1938 	clr	a
      000490 12r00r00         [24] 1939 	lcall	__gptrput
      000493 A3               [24] 1940 	inc	dptr
      000494 E4               [12] 1941 	clr	a
      000495 02r00r00         [24] 1942 	ljmp	__gptrput
      000498                       1943 00103$:
      000498 22               [24] 1944 	ret
                                   1945 ;------------------------------------------------------------
                                   1946 ;Allocation info for local variables in function 'polite_send'
                                   1947 ;------------------------------------------------------------
                                   1948 ;interval                  Allocated to stack - sp -9
                                   1949 ;hdrsize                   Allocated to stack - sp -10
                                   1950 ;c                         Allocated to stack - sp -5
                                   1951 ;sloc0                     Allocated to stack - sp -2
                                   1952 ;------------------------------------------------------------
                                   1953 ;	/home/user/contiki/core/net/rime/polite.c:127: polite_send(struct polite_conn *c, clock_time_t interval, uint8_t hdrsize)
                                   1954 ;	-----------------------------------------
                                   1955 ;	 function polite_send
                                   1956 ;	-----------------------------------------
      000499                       1957 _polite_send:
      000499 C0 82            [24] 1958 	push	dpl
      00049B C0 83            [24] 1959 	push	dph
      00049D C0 F0            [24] 1960 	push	b
      00049F 05 81            [12] 1961 	inc	sp
      0004A1 05 81            [12] 1962 	inc	sp
      0004A3 05 81            [12] 1963 	inc	sp
                                   1964 ;	/home/user/contiki/core/net/rime/polite.c:129: if(c->q != NULL) {
      0004A5 E5 81            [12] 1965 	mov	a,sp
      0004A7 24 FB            [12] 1966 	add	a,#0xfb
      0004A9 F8               [12] 1967 	mov	r0,a
      0004AA 74 24            [12] 1968 	mov	a,#0x24
      0004AC 26               [12] 1969 	add	a,@r0
      0004AD FA               [12] 1970 	mov	r2,a
      0004AE E4               [12] 1971 	clr	a
      0004AF 08               [12] 1972 	inc	r0
      0004B0 36               [12] 1973 	addc	a,@r0
      0004B1 FB               [12] 1974 	mov	r3,a
      0004B2 08               [12] 1975 	inc	r0
      0004B3 86 04            [24] 1976 	mov	ar4,@r0
      0004B5 8A 82            [24] 1977 	mov	dpl,r2
      0004B7 8B 83            [24] 1978 	mov	dph,r3
      0004B9 8C F0            [24] 1979 	mov	b,r4
      0004BB 12r00r00         [24] 1980 	lcall	__gptrget
      0004BE FF               [12] 1981 	mov	r7,a
      0004BF A3               [24] 1982 	inc	dptr
      0004C0 12r00r00         [24] 1983 	lcall	__gptrget
      0004C3 FE               [12] 1984 	mov	r6,a
      0004C4 A3               [24] 1985 	inc	dptr
      0004C5 12r00r00         [24] 1986 	lcall	__gptrget
      0004C8 FD               [12] 1987 	mov	r5,a
      0004C9 EF               [12] 1988 	mov	a,r7
      0004CA 4E               [12] 1989 	orl	a,r6
      0004CB 60 15            [24] 1990 	jz	00102$
                                   1991 ;	/home/user/contiki/core/net/rime/polite.c:131: queuebuf_free(c->q);
      0004CD 8F 82            [24] 1992 	mov	dpl,r7
      0004CF 8E 83            [24] 1993 	mov	dph,r6
      0004D1 8D F0            [24] 1994 	mov	b,r5
      0004D3 C0 04            [24] 1995 	push	ar4
      0004D5 C0 03            [24] 1996 	push	ar3
      0004D7 C0 02            [24] 1997 	push	ar2
      0004D9 12r00r00         [24] 1998 	lcall	_queuebuf_free
      0004DC D0 02            [24] 1999 	pop	ar2
      0004DE D0 03            [24] 2000 	pop	ar3
      0004E0 D0 04            [24] 2001 	pop	ar4
      0004E2                       2002 00102$:
                                   2003 ;	/home/user/contiki/core/net/rime/polite.c:133: c->hdrsize = hdrsize;
      0004E2 E5 81            [12] 2004 	mov	a,sp
      0004E4 24 FB            [12] 2005 	add	a,#0xfb
      0004E6 F8               [12] 2006 	mov	r0,a
      0004E7 74 27            [12] 2007 	mov	a,#0x27
      0004E9 26               [12] 2008 	add	a,@r0
      0004EA FD               [12] 2009 	mov	r5,a
      0004EB E4               [12] 2010 	clr	a
      0004EC 08               [12] 2011 	inc	r0
      0004ED 36               [12] 2012 	addc	a,@r0
      0004EE FE               [12] 2013 	mov	r6,a
      0004EF 08               [12] 2014 	inc	r0
      0004F0 86 07            [24] 2015 	mov	ar7,@r0
      0004F2 8D 82            [24] 2016 	mov	dpl,r5
      0004F4 8E 83            [24] 2017 	mov	dph,r6
      0004F6 8F F0            [24] 2018 	mov	b,r7
      0004F8 E5 81            [12] 2019 	mov	a,sp
      0004FA 24 F6            [12] 2020 	add	a,#0xf6
      0004FC F8               [12] 2021 	mov	r0,a
      0004FD E6               [12] 2022 	mov	a,@r0
      0004FE 12r00r00         [24] 2023 	lcall	__gptrput
                                   2024 ;	/home/user/contiki/core/net/rime/polite.c:134: c->q = queuebuf_new_from_packetbuf();
      000501 C0 04            [24] 2025 	push	ar4
      000503 C0 03            [24] 2026 	push	ar3
      000505 C0 02            [24] 2027 	push	ar2
      000507 12r00r00         [24] 2028 	lcall	_queuebuf_new_from_packetbuf
      00050A AD 82            [24] 2029 	mov	r5,dpl
      00050C AE 83            [24] 2030 	mov	r6,dph
      00050E AF F0            [24] 2031 	mov	r7,b
      000510 D0 02            [24] 2032 	pop	ar2
      000512 D0 03            [24] 2033 	pop	ar3
      000514 D0 04            [24] 2034 	pop	ar4
      000516 8A 82            [24] 2035 	mov	dpl,r2
      000518 8B 83            [24] 2036 	mov	dph,r3
      00051A 8C F0            [24] 2037 	mov	b,r4
      00051C ED               [12] 2038 	mov	a,r5
      00051D 12r00r00         [24] 2039 	lcall	__gptrput
      000520 A3               [24] 2040 	inc	dptr
      000521 EE               [12] 2041 	mov	a,r6
      000522 12r00r00         [24] 2042 	lcall	__gptrput
      000525 A3               [24] 2043 	inc	dptr
      000526 EF               [12] 2044 	mov	a,r7
      000527 12r00r00         [24] 2045 	lcall	__gptrput
                                   2046 ;	/home/user/contiki/core/net/rime/polite.c:135: if(c->q != NULL) {
      00052A ED               [12] 2047 	mov	a,r5
      00052B 4E               [12] 2048 	orl	a,r6
      00052C 70 03            [24] 2049 	jnz	00114$
      00052E 02r05rC2         [24] 2050 	ljmp	00104$
      000531                       2051 00114$:
                                   2052 ;	/home/user/contiki/core/net/rime/polite.c:136: ctimer_set(&c->t, interval / 2 + (random_rand() % (interval / 2)), send, c);
      000531 E5 81            [12] 2053 	mov	a,sp
      000533 24 FB            [12] 2054 	add	a,#0xfb
      000535 F8               [12] 2055 	mov	r0,a
      000536 A9 81            [24] 2056 	mov	r1,sp
      000538 19               [12] 2057 	dec	r1
      000539 19               [12] 2058 	dec	r1
      00053A E6               [12] 2059 	mov	a,@r0
      00053B F7               [12] 2060 	mov	@r1,a
      00053C 08               [12] 2061 	inc	r0
      00053D 09               [12] 2062 	inc	r1
      00053E E6               [12] 2063 	mov	a,@r0
      00053F F7               [12] 2064 	mov	@r1,a
      000540 08               [12] 2065 	inc	r0
      000541 09               [12] 2066 	inc	r1
      000542 E6               [12] 2067 	mov	a,@r0
      000543 F7               [12] 2068 	mov	@r1,a
      000544 E5 81            [12] 2069 	mov	a,sp
      000546 24 F7            [12] 2070 	add	a,#0xf7
      000548 F8               [12] 2071 	mov	r0,a
      000549 86 03            [24] 2072 	mov	ar3,@r0
      00054B 08               [12] 2073 	inc	r0
      00054C E6               [12] 2074 	mov	a,@r0
      00054D C3               [12] 2075 	clr	c
      00054E 13               [12] 2076 	rrc	a
      00054F CB               [12] 2077 	xch	a,r3
      000550 13               [12] 2078 	rrc	a
      000551 CB               [12] 2079 	xch	a,r3
      000552 FC               [12] 2080 	mov	r4,a
      000553 C0 04            [24] 2081 	push	ar4
      000555 C0 03            [24] 2082 	push	ar3
      000557 12r00r00         [24] 2083 	lcall	_random_rand
      00055A AA 82            [24] 2084 	mov	r2,dpl
      00055C AF 83            [24] 2085 	mov	r7,dph
      00055E D0 03            [24] 2086 	pop	ar3
      000560 D0 04            [24] 2087 	pop	ar4
      000562 C0 04            [24] 2088 	push	ar4
      000564 C0 03            [24] 2089 	push	ar3
      000566 C0 03            [24] 2090 	push	ar3
      000568 C0 04            [24] 2091 	push	ar4
      00056A 8A 82            [24] 2092 	mov	dpl,r2
      00056C 8F 83            [24] 2093 	mov	dph,r7
      00056E 12r00r00         [24] 2094 	lcall	__moduint
      000571 AE 82            [24] 2095 	mov	r6,dpl
      000573 AF 83            [24] 2096 	mov	r7,dph
      000575 15 81            [12] 2097 	dec	sp
      000577 15 81            [12] 2098 	dec	sp
      000579 D0 03            [24] 2099 	pop	ar3
      00057B D0 04            [24] 2100 	pop	ar4
      00057D EE               [12] 2101 	mov	a,r6
      00057E 2B               [12] 2102 	add	a,r3
      00057F FB               [12] 2103 	mov	r3,a
      000580 EF               [12] 2104 	mov	a,r7
      000581 3C               [12] 2105 	addc	a,r4
      000582 FC               [12] 2106 	mov	r4,a
      000583 E5 81            [12] 2107 	mov	a,sp
      000585 24 FB            [12] 2108 	add	a,#0xfb
      000587 F8               [12] 2109 	mov	r0,a
      000588 74 0F            [12] 2110 	mov	a,#0x0F
      00058A 26               [12] 2111 	add	a,@r0
      00058B FD               [12] 2112 	mov	r5,a
      00058C E4               [12] 2113 	clr	a
      00058D 08               [12] 2114 	inc	r0
      00058E 36               [12] 2115 	addc	a,@r0
      00058F FE               [12] 2116 	mov	r6,a
      000590 08               [12] 2117 	inc	r0
      000591 86 07            [24] 2118 	mov	ar7,@r0
      000593 A8 81            [24] 2119 	mov	r0,sp
      000595 18               [12] 2120 	dec	r0
      000596 18               [12] 2121 	dec	r0
      000597 E6               [12] 2122 	mov	a,@r0
      000598 C0 E0            [24] 2123 	push	acc
      00059A 08               [12] 2124 	inc	r0
      00059B E6               [12] 2125 	mov	a,@r0
      00059C C0 E0            [24] 2126 	push	acc
      00059E 08               [12] 2127 	inc	r0
      00059F E6               [12] 2128 	mov	a,@r0
      0005A0 C0 E0            [24] 2129 	push	acc
      0005A2 74rBD            [12] 2130 	mov	a,#_send
      0005A4 C0 E0            [24] 2131 	push	acc
      0005A6 74s02            [12] 2132 	mov	a,#(_send >> 8)
      0005A8 C0 E0            [24] 2133 	push	acc
      0005AA C0 03            [24] 2134 	push	ar3
      0005AC C0 04            [24] 2135 	push	ar4
      0005AE 8D 82            [24] 2136 	mov	dpl,r5
      0005B0 8E 83            [24] 2137 	mov	dph,r6
      0005B2 8F F0            [24] 2138 	mov	b,r7
      0005B4 12r00r00         [24] 2139 	lcall	_ctimer_set
      0005B7 E5 81            [12] 2140 	mov	a,sp
      0005B9 24 F9            [12] 2141 	add	a,#0xf9
      0005BB F5 81            [12] 2142 	mov	sp,a
                                   2143 ;	/home/user/contiki/core/net/rime/polite.c:137: return 1;
      0005BD 90 00 01         [24] 2144 	mov	dptr,#0x0001
      0005C0 80 03            [24] 2145 	sjmp	00105$
      0005C2                       2146 00104$:
                                   2147 ;	/home/user/contiki/core/net/rime/polite.c:139: return 0;
      0005C2 90 00 00         [24] 2148 	mov	dptr,#0x0000
      0005C5                       2149 00105$:
      0005C5 E5 81            [12] 2150 	mov	a,sp
      0005C7 24 FA            [12] 2151 	add	a,#0xFA
      0005C9 F5 81            [12] 2152 	mov	sp,a
      0005CB 22               [24] 2153 	ret
                                   2154 ;------------------------------------------------------------
                                   2155 ;Allocation info for local variables in function 'polite_cancel'
                                   2156 ;------------------------------------------------------------
                                   2157 ;c                         Allocated to registers r5 r6 r7 
                                   2158 ;------------------------------------------------------------
                                   2159 ;	/home/user/contiki/core/net/rime/polite.c:143: polite_cancel(struct polite_conn *c)
                                   2160 ;	-----------------------------------------
                                   2161 ;	 function polite_cancel
                                   2162 ;	-----------------------------------------
      0005CC                       2163 _polite_cancel:
      0005CC AD 82            [24] 2164 	mov	r5,dpl
      0005CE AE 83            [24] 2165 	mov	r6,dph
      0005D0 AF F0            [24] 2166 	mov	r7,b
                                   2167 ;	/home/user/contiki/core/net/rime/polite.c:145: ctimer_stop(&c->t);
      0005D2 74 0F            [12] 2168 	mov	a,#0x0F
      0005D4 2D               [12] 2169 	add	a,r5
      0005D5 FA               [12] 2170 	mov	r2,a
      0005D6 E4               [12] 2171 	clr	a
      0005D7 3E               [12] 2172 	addc	a,r6
      0005D8 FB               [12] 2173 	mov	r3,a
      0005D9 8F 04            [24] 2174 	mov	ar4,r7
      0005DB 8A 82            [24] 2175 	mov	dpl,r2
      0005DD 8B 83            [24] 2176 	mov	dph,r3
      0005DF 8C F0            [24] 2177 	mov	b,r4
      0005E1 C0 07            [24] 2178 	push	ar7
      0005E3 C0 06            [24] 2179 	push	ar6
      0005E5 C0 05            [24] 2180 	push	ar5
      0005E7 12r00r00         [24] 2181 	lcall	_ctimer_stop
      0005EA D0 05            [24] 2182 	pop	ar5
      0005EC D0 06            [24] 2183 	pop	ar6
      0005EE D0 07            [24] 2184 	pop	ar7
                                   2185 ;	/home/user/contiki/core/net/rime/polite.c:146: if(c->q != NULL) {
      0005F0 74 24            [12] 2186 	mov	a,#0x24
      0005F2 2D               [12] 2187 	add	a,r5
      0005F3 FD               [12] 2188 	mov	r5,a
      0005F4 E4               [12] 2189 	clr	a
      0005F5 3E               [12] 2190 	addc	a,r6
      0005F6 FE               [12] 2191 	mov	r6,a
      0005F7 8D 82            [24] 2192 	mov	dpl,r5
      0005F9 8E 83            [24] 2193 	mov	dph,r6
      0005FB 8F F0            [24] 2194 	mov	b,r7
      0005FD 12r00r00         [24] 2195 	lcall	__gptrget
      000600 FA               [12] 2196 	mov	r2,a
      000601 A3               [24] 2197 	inc	dptr
      000602 12r00r00         [24] 2198 	lcall	__gptrget
      000605 FB               [12] 2199 	mov	r3,a
      000606 A3               [24] 2200 	inc	dptr
      000607 12r00r00         [24] 2201 	lcall	__gptrget
      00060A FC               [12] 2202 	mov	r4,a
      00060B EA               [12] 2203 	mov	a,r2
      00060C 4B               [12] 2204 	orl	a,r3
      00060D 60 29            [24] 2205 	jz	00103$
                                   2206 ;	/home/user/contiki/core/net/rime/polite.c:147: queuebuf_free(c->q);
      00060F 8A 82            [24] 2207 	mov	dpl,r2
      000611 8B 83            [24] 2208 	mov	dph,r3
      000613 8C F0            [24] 2209 	mov	b,r4
      000615 C0 07            [24] 2210 	push	ar7
      000617 C0 06            [24] 2211 	push	ar6
      000619 C0 05            [24] 2212 	push	ar5
      00061B 12r00r00         [24] 2213 	lcall	_queuebuf_free
      00061E D0 05            [24] 2214 	pop	ar5
      000620 D0 06            [24] 2215 	pop	ar6
      000622 D0 07            [24] 2216 	pop	ar7
                                   2217 ;	/home/user/contiki/core/net/rime/polite.c:148: c->q = NULL;
      000624 8D 82            [24] 2218 	mov	dpl,r5
      000626 8E 83            [24] 2219 	mov	dph,r6
      000628 8F F0            [24] 2220 	mov	b,r7
      00062A E4               [12] 2221 	clr	a
      00062B 12r00r00         [24] 2222 	lcall	__gptrput
      00062E A3               [24] 2223 	inc	dptr
      00062F E4               [12] 2224 	clr	a
      000630 12r00r00         [24] 2225 	lcall	__gptrput
      000633 A3               [24] 2226 	inc	dptr
      000634 E4               [12] 2227 	clr	a
      000635 02r00r00         [24] 2228 	ljmp	__gptrput
      000638                       2229 00103$:
      000638 22               [24] 2230 	ret
                                   2231 	.area CSEG    (CODE)
                                   2232 	.area CONST   (CODE)
      000000                       2233 _abc:
      000000r00s00                 2234 	.byte _recv,(_recv >> 8)
      000002rBCs02                 2235 	.byte _sent,(_sent >> 8)
                                   2236 	.area XINIT   (CODE)
                                   2237 	.area CABS    (ABS,CODE)
