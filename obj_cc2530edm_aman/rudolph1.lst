                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Tue Feb 10 06:19:33 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module rudolph1
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _trickle_send
                                     13 	.globl _trickle_close
                                     14 	.globl _trickle_open
                                     15 	.globl _ipolite_send
                                     16 	.globl _ipolite_close
                                     17 	.globl _ipolite_open
                                     18 	.globl _packetbuf_hdralloc
                                     19 	.globl _packetbuf_set_datalen
                                     20 	.globl _packetbuf_hdrptr
                                     21 	.globl _packetbuf_dataptr
                                     22 	.globl _packetbuf_clear
                                     23 	.globl _ctimer_stop
                                     24 	.globl _ctimer_set
                                     25 	.globl _ACTIVE
                                     26 	.globl _TX_BYTE
                                     27 	.globl _RX_BYTE
                                     28 	.globl _ERR
                                     29 	.globl _FE
                                     30 	.globl _SLAVE
                                     31 	.globl _RE
                                     32 	.globl _MODE
                                     33 	.globl _T3OVFIF
                                     34 	.globl _T3CH0IF
                                     35 	.globl _T3CH1IF
                                     36 	.globl _T4OVFIF
                                     37 	.globl _T4CH0IF
                                     38 	.globl _T4CH1IF
                                     39 	.globl _OVFIM
                                     40 	.globl _B_0
                                     41 	.globl _B_1
                                     42 	.globl _B_2
                                     43 	.globl _B_3
                                     44 	.globl _B_4
                                     45 	.globl _B_5
                                     46 	.globl _B_6
                                     47 	.globl _B_7
                                     48 	.globl _P2IF
                                     49 	.globl _UTX0IF
                                     50 	.globl _UTX1IF
                                     51 	.globl _P1IF
                                     52 	.globl _WDTIF
                                     53 	.globl _ACC_0
                                     54 	.globl _ACC_1
                                     55 	.globl _ACC_2
                                     56 	.globl _ACC_3
                                     57 	.globl _ACC_4
                                     58 	.globl _ACC_5
                                     59 	.globl _ACC_6
                                     60 	.globl _ACC_7
                                     61 	.globl _P
                                     62 	.globl _F1
                                     63 	.globl _OV
                                     64 	.globl _RS0
                                     65 	.globl _RS1
                                     66 	.globl _F0
                                     67 	.globl _AC
                                     68 	.globl _CY
                                     69 	.globl _DMAIF
                                     70 	.globl _T1IF
                                     71 	.globl _T2IF
                                     72 	.globl _T3IF
                                     73 	.globl _T4IF
                                     74 	.globl _P0IF
                                     75 	.globl _STIF
                                     76 	.globl _DMAIE
                                     77 	.globl _T1IE
                                     78 	.globl _T2IE
                                     79 	.globl _T3IE
                                     80 	.globl _T4IE
                                     81 	.globl _P0IE
                                     82 	.globl _RFERRIE
                                     83 	.globl _ADCIE
                                     84 	.globl _URX0IE
                                     85 	.globl _URX1IE
                                     86 	.globl _ENCIE
                                     87 	.globl _STIE
                                     88 	.globl _EA
                                     89 	.globl _P2_0
                                     90 	.globl _P2_1
                                     91 	.globl _P2_2
                                     92 	.globl _P2_3
                                     93 	.globl _P2_4
                                     94 	.globl _P2_5
                                     95 	.globl _P2_6
                                     96 	.globl _P2_7
                                     97 	.globl _ENCIF_0
                                     98 	.globl _ENCIF_1
                                     99 	.globl _P1_0
                                    100 	.globl _P1_1
                                    101 	.globl _P1_2
                                    102 	.globl _P1_3
                                    103 	.globl _P1_4
                                    104 	.globl _P1_5
                                    105 	.globl _P1_6
                                    106 	.globl _P1_7
                                    107 	.globl _IT0
                                    108 	.globl _RFERRIF
                                    109 	.globl _IT1
                                    110 	.globl _URX0IF
                                    111 	.globl _ADCIF
                                    112 	.globl _URX1IF
                                    113 	.globl _P0_0
                                    114 	.globl _P0_1
                                    115 	.globl _P0_2
                                    116 	.globl _P0_3
                                    117 	.globl _P0_4
                                    118 	.globl _P0_5
                                    119 	.globl _P0_6
                                    120 	.globl _P0_7
                                    121 	.globl _WDCTL
                                    122 	.globl _U1GCR
                                    123 	.globl _U1UCR
                                    124 	.globl _U1BAUD
                                    125 	.globl _U1DBUF
                                    126 	.globl _U1CSR
                                    127 	.globl _U0GCR
                                    128 	.globl _U0UCR
                                    129 	.globl _U0BAUD
                                    130 	.globl _U0DBUF
                                    131 	.globl _U0CSR
                                    132 	.globl _TIMIF
                                    133 	.globl _T4CC1
                                    134 	.globl _T4CCTL1
                                    135 	.globl _T4CC0
                                    136 	.globl _T4CCTL0
                                    137 	.globl _T4CTL
                                    138 	.globl _T4CNT
                                    139 	.globl _T3CC1
                                    140 	.globl _T3CCTL1
                                    141 	.globl _T3CC0
                                    142 	.globl _T3CCTL0
                                    143 	.globl _T3CTL
                                    144 	.globl _T3CNT
                                    145 	.globl _T2MSEL
                                    146 	.globl _T2IRQM
                                    147 	.globl _T2MOVF2
                                    148 	.globl _T2MOVF1
                                    149 	.globl _T2MOVF0
                                    150 	.globl _T2M1
                                    151 	.globl _T2M0
                                    152 	.globl _T2IRQF
                                    153 	.globl _T2EVTCFG
                                    154 	.globl _T2CTRL
                                    155 	.globl _T1STAT
                                    156 	.globl _T1CCTL2
                                    157 	.globl _T1CCTL1
                                    158 	.globl _T1CCTL0
                                    159 	.globl _T1CTL
                                    160 	.globl _T1CNTH
                                    161 	.globl _T1CNTL
                                    162 	.globl _T1CC2H
                                    163 	.globl _T1CC2L
                                    164 	.globl _T1CC1H
                                    165 	.globl _T1CC1L
                                    166 	.globl _T1CC0H
                                    167 	.globl _T1CC0L
                                    168 	.globl _CLKCONSTA
                                    169 	.globl _CLKCONCMD
                                    170 	.globl _SLEEPSTA
                                    171 	.globl _SLEEPCMD
                                    172 	.globl _STLOAD
                                    173 	.globl _ST2
                                    174 	.globl _ST1
                                    175 	.globl _ST0
                                    176 	.globl _RFERRF
                                    177 	.globl _RFIRQF0
                                    178 	.globl _RFST
                                    179 	.globl _RFD
                                    180 	.globl _RFIRQF1
                                    181 	.globl _PSBANK
                                    182 	.globl _FMAP
                                    183 	.globl _MEMCTR
                                    184 	.globl __XPAGE
                                    185 	.globl _MPAGE
                                    186 	.globl _PMUX
                                    187 	.globl _P2DIR
                                    188 	.globl _P1DIR
                                    189 	.globl _P0DIR
                                    190 	.globl _P2INP
                                    191 	.globl _P1INP
                                    192 	.globl _P2SEL
                                    193 	.globl _P1SEL
                                    194 	.globl _P0SEL
                                    195 	.globl _APCFG
                                    196 	.globl _PERCFG
                                    197 	.globl _P0INP
                                    198 	.globl _P2IEN
                                    199 	.globl _P1IEN
                                    200 	.globl _P0IEN
                                    201 	.globl _PICTL
                                    202 	.globl _P2IFG
                                    203 	.globl _P1IFG
                                    204 	.globl _P0IFG
                                    205 	.globl _DMAREQ
                                    206 	.globl _DMAARM
                                    207 	.globl _DMA0CFGH
                                    208 	.globl _DMA0CFGL
                                    209 	.globl _DMA1CFGH
                                    210 	.globl _DMA1CFGL
                                    211 	.globl _DMAIRQ
                                    212 	.globl _ENCCS
                                    213 	.globl _ENCDO
                                    214 	.globl _ENCDI
                                    215 	.globl _RNDH
                                    216 	.globl _RNDL
                                    217 	.globl _ADCH
                                    218 	.globl _ADCL
                                    219 	.globl _ADCCON3
                                    220 	.globl _ADCCON2
                                    221 	.globl _ADCCON1
                                    222 	.globl _B
                                    223 	.globl _IRCON2
                                    224 	.globl _ACC
                                    225 	.globl _PSW
                                    226 	.globl _IRCON
                                    227 	.globl _IP1
                                    228 	.globl _IEN1
                                    229 	.globl _IP0
                                    230 	.globl _IEN0
                                    231 	.globl _P2
                                    232 	.globl _S1CON
                                    233 	.globl _IEN2
                                    234 	.globl _S0CON
                                    235 	.globl _DPS
                                    236 	.globl _P1
                                    237 	.globl _TCON
                                    238 	.globl _PCON
                                    239 	.globl _DPH1
                                    240 	.globl _DPL1
                                    241 	.globl _DPH0
                                    242 	.globl _DPL0
                                    243 	.globl _SP
                                    244 	.globl _P0
                                    245 	.globl _X_IEEE_ADDR
                                    246 	.globl _X_INFOPAGE
                                    247 	.globl _X_P2DIR
                                    248 	.globl _X_P1DIR
                                    249 	.globl _X_P0DIR
                                    250 	.globl _X_U1GCR
                                    251 	.globl _X_U1UCR
                                    252 	.globl _X_U1BAUD
                                    253 	.globl _X_U1DBUF
                                    254 	.globl _X_U1CSR
                                    255 	.globl _X_P2INP
                                    256 	.globl _X_P1INP
                                    257 	.globl _X_P2SEL
                                    258 	.globl _X_P1SEL
                                    259 	.globl _X_P0SEL
                                    260 	.globl _X_APCFG
                                    261 	.globl _X_PERCFG
                                    262 	.globl _X_T4CC1
                                    263 	.globl _X_T4CCTL1
                                    264 	.globl _X_T4CC0
                                    265 	.globl _X_T4CCTL0
                                    266 	.globl _X_T4CTL
                                    267 	.globl _X_T4CNT
                                    268 	.globl _X_RFIRQF0
                                    269 	.globl _X_T1CCTL2
                                    270 	.globl _X_T1CCTL1
                                    271 	.globl _X_T1CCTL0
                                    272 	.globl _X_T1CTL
                                    273 	.globl _X_T1CNTH
                                    274 	.globl _X_T1CNTL
                                    275 	.globl _X_RFST
                                    276 	.globl _X_T1CC2H
                                    277 	.globl _X_T1CC2L
                                    278 	.globl _X_T1CC1H
                                    279 	.globl _X_T1CC1L
                                    280 	.globl _X_T1CC0H
                                    281 	.globl _X_T1CC0L
                                    282 	.globl _X_RFD
                                    283 	.globl _X_TIMIF
                                    284 	.globl _X_DMAREQ
                                    285 	.globl _X_DMAARM
                                    286 	.globl _X_DMA0CFGH
                                    287 	.globl _X_DMA0CFGL
                                    288 	.globl _X_DMA1CFGH
                                    289 	.globl _X_DMA1CFGL
                                    290 	.globl _X_DMAIRQ
                                    291 	.globl _X_T3CC1
                                    292 	.globl _X_T3CCTL1
                                    293 	.globl _X_T3CC0
                                    294 	.globl _X_T3CCTL0
                                    295 	.globl _X_T3CTL
                                    296 	.globl _X_T3CNT
                                    297 	.globl _X_WDCTL
                                    298 	.globl _X_MEMCTR
                                    299 	.globl _X_CLKCONCMD
                                    300 	.globl _X_U0GCR
                                    301 	.globl _X_U0UCR
                                    302 	.globl _X_T2MSEL
                                    303 	.globl _X_U0BAUD
                                    304 	.globl _X_U0DBUF
                                    305 	.globl _X_RFERRF
                                    306 	.globl _X_SLEEPCMD
                                    307 	.globl _X_RNDH
                                    308 	.globl _X_RNDL
                                    309 	.globl _X_ADCH
                                    310 	.globl _X_ADCL
                                    311 	.globl _X_ADCCON3
                                    312 	.globl _X_ADCCON2
                                    313 	.globl _X_ADCCON1
                                    314 	.globl _X_ENCCS
                                    315 	.globl _X_ENCDO
                                    316 	.globl _X_ENCDI
                                    317 	.globl _X_T1STAT
                                    318 	.globl _X_PMUX
                                    319 	.globl _X_STLOAD
                                    320 	.globl _X_P2IEN
                                    321 	.globl _X_P0IEN
                                    322 	.globl _X_T2IRQM
                                    323 	.globl _X_T2MOVF2
                                    324 	.globl _X_T2MOVF1
                                    325 	.globl _X_T2MOVF0
                                    326 	.globl _X_T2M1
                                    327 	.globl _X_T2M0
                                    328 	.globl _X_T2IRQF
                                    329 	.globl _X_P2
                                    330 	.globl _X_PSBANK
                                    331 	.globl _X_FMAP
                                    332 	.globl _X_CLKCONSTA
                                    333 	.globl _X_SLEEPSTA
                                    334 	.globl _X_T2EVTCFG
                                    335 	.globl _X_ST2
                                    336 	.globl _X_ST1
                                    337 	.globl _X_ST0
                                    338 	.globl _X_T2CTRL
                                    339 	.globl _X__XPAGE
                                    340 	.globl _X_MPAGE
                                    341 	.globl _X_RFIRQF1
                                    342 	.globl _X_P1
                                    343 	.globl _X_P0INP
                                    344 	.globl _X_P1IEN
                                    345 	.globl _X_PICTL
                                    346 	.globl _X_P2IFG
                                    347 	.globl _X_P1IFG
                                    348 	.globl _X_P0IFG
                                    349 	.globl _X_U0CSR
                                    350 	.globl _X_P0
                                    351 	.globl _USBF5
                                    352 	.globl _USBF4
                                    353 	.globl _USBF3
                                    354 	.globl _USBF2
                                    355 	.globl _USBF1
                                    356 	.globl _USBF0
                                    357 	.globl _USBCNTH
                                    358 	.globl _USBCNTL
                                    359 	.globl _USBCNT0
                                    360 	.globl _USBCSOH
                                    361 	.globl _USBCSOL
                                    362 	.globl _USBMAXO
                                    363 	.globl _USBCSIH
                                    364 	.globl _USBCSIL
                                    365 	.globl _USBCS0
                                    366 	.globl _USBMAXI
                                    367 	.globl _USBCTRL
                                    368 	.globl _USBINDEX
                                    369 	.globl _USBFRMH
                                    370 	.globl _USBFRML
                                    371 	.globl _USBCIE
                                    372 	.globl _USBOIE
                                    373 	.globl _USBIIE
                                    374 	.globl _USBCIF
                                    375 	.globl _USBOIF
                                    376 	.globl _USBIIF
                                    377 	.globl _USBPOW
                                    378 	.globl _USBADDR
                                    379 	.globl _CSPT
                                    380 	.globl _CSPZ
                                    381 	.globl _CSPY
                                    382 	.globl _CSPX
                                    383 	.globl _CSPSTAT
                                    384 	.globl _CSPCTRL
                                    385 	.globl _CSPPROG23
                                    386 	.globl _CSPPROG22
                                    387 	.globl _CSPPROG21
                                    388 	.globl _CSPPROG20
                                    389 	.globl _CSPPROG19
                                    390 	.globl _CSPPROG18
                                    391 	.globl _CSPPROG17
                                    392 	.globl _CSPPROG16
                                    393 	.globl _CSPPROG15
                                    394 	.globl _CSPPROG14
                                    395 	.globl _CSPPROG13
                                    396 	.globl _CSPPROG12
                                    397 	.globl _CSPPROG11
                                    398 	.globl _CSPPROG10
                                    399 	.globl _CSPPROG9
                                    400 	.globl _CSPPROG8
                                    401 	.globl _CSPPROG7
                                    402 	.globl _CSPPROG6
                                    403 	.globl _CSPPROG5
                                    404 	.globl _CSPPROG4
                                    405 	.globl _CSPPROG3
                                    406 	.globl _CSPPROG2
                                    407 	.globl _CSPPROG1
                                    408 	.globl _CSPPROG0
                                    409 	.globl _RFC_OBS_CTRL2
                                    410 	.globl _RFC_OBS_CTRL1
                                    411 	.globl _RFC_OBS_CTRL0
                                    412 	.globl _TXFILTCFG
                                    413 	.globl _PTEST1
                                    414 	.globl _PTEST0
                                    415 	.globl _ATEST
                                    416 	.globl _DACTEST2
                                    417 	.globl _DACTEST1
                                    418 	.globl _DACTEST0
                                    419 	.globl _MDMTEST1
                                    420 	.globl _MDMTEST0
                                    421 	.globl _ADCTEST2
                                    422 	.globl _ADCTEST1
                                    423 	.globl _ADCTEST0
                                    424 	.globl _AGCCTRL3
                                    425 	.globl _AGCCTRL2
                                    426 	.globl _AGCCTRL1
                                    427 	.globl _AGCCTRL0
                                    428 	.globl _FSCAL3
                                    429 	.globl _FSCAL2
                                    430 	.globl _FSCAL1
                                    431 	.globl _FSCAL0
                                    432 	.globl _FSCTRL
                                    433 	.globl _RXCTRL
                                    434 	.globl _FREQEST
                                    435 	.globl _MDMCTRL1
                                    436 	.globl _MDMCTRL0
                                    437 	.globl _RFRND
                                    438 	.globl _RFERRM
                                    439 	.globl _RFIRQM1
                                    440 	.globl _RFIRQM0
                                    441 	.globl _TXLAST_PTR
                                    442 	.globl _TXFIRST_PTR
                                    443 	.globl _RXP1_PTR
                                    444 	.globl _RXLAST_PTR
                                    445 	.globl _RXFIRST_PTR
                                    446 	.globl _TXFIFOCNT
                                    447 	.globl _RXFIFOCNT
                                    448 	.globl _RXFIRST
                                    449 	.globl _RSSISTAT
                                    450 	.globl _RSSI
                                    451 	.globl _CCACTRL1
                                    452 	.globl _CCACTRL0
                                    453 	.globl _FSMCTRL
                                    454 	.globl _FIFOPCTRL
                                    455 	.globl _FSMSTAT1
                                    456 	.globl _FSMSTAT0
                                    457 	.globl _TXCTRL
                                    458 	.globl _TXPOWER
                                    459 	.globl _FREQCTRL
                                    460 	.globl _FREQTUNE
                                    461 	.globl _RXMASKCLR
                                    462 	.globl _RXMASKSET
                                    463 	.globl _RXENABLE
                                    464 	.globl _FRMCTRL1
                                    465 	.globl _FRMCTRL0
                                    466 	.globl _SRCEXTEN2
                                    467 	.globl _SRCEXTEN1
                                    468 	.globl _SRCEXTEN0
                                    469 	.globl _SRCSHORTEN2
                                    470 	.globl _SRCSHORTEN1
                                    471 	.globl _SRCSHORTEN0
                                    472 	.globl _SRCMATCH
                                    473 	.globl _FRMFILT1
                                    474 	.globl _FRMFILT0
                                    475 	.globl _SHORT_ADDR1
                                    476 	.globl _SHORT_ADDR0
                                    477 	.globl _PAN_ID1
                                    478 	.globl _PAN_ID0
                                    479 	.globl _EXT_ADDR7
                                    480 	.globl _EXT_ADDR6
                                    481 	.globl _EXT_ADDR5
                                    482 	.globl _EXT_ADDR4
                                    483 	.globl _EXT_ADDR3
                                    484 	.globl _EXT_ADDR2
                                    485 	.globl _EXT_ADDR1
                                    486 	.globl _EXT_ADDR0
                                    487 	.globl _SRCSHORTPENDEN2
                                    488 	.globl _SRCSHORTPENDEN1
                                    489 	.globl _SRCSHORTPENDEN0
                                    490 	.globl _SRCEXTPENDEN2
                                    491 	.globl _SRCEXTPENDEN1
                                    492 	.globl _SRCEXTPENDEN0
                                    493 	.globl _SRCRESINDEX
                                    494 	.globl _SRCRESMASK2
                                    495 	.globl _SRCRESMASK1
                                    496 	.globl _SRCRESMASK0
                                    497 	.globl _SRC_ADDR_TABLE
                                    498 	.globl _TXFIFO
                                    499 	.globl _RXFIFO
                                    500 	.globl _RFCORE_RAM
                                    501 	.globl _CMPCTL
                                    502 	.globl _OPAMPS
                                    503 	.globl _OPAMPC
                                    504 	.globl _STCV2
                                    505 	.globl _STCV1
                                    506 	.globl _STCV0
                                    507 	.globl _STCS
                                    508 	.globl _STCC
                                    509 	.globl _T1CC4H
                                    510 	.globl _T1CC4L
                                    511 	.globl _T1CC3H
                                    512 	.globl _T1CC3L
                                    513 	.globl _XX_T1CC2H
                                    514 	.globl _XX_T1CC2L
                                    515 	.globl _XX_T1CC1H
                                    516 	.globl _XX_T1CC1L
                                    517 	.globl _XX_T1CC0H
                                    518 	.globl _XX_T1CC0L
                                    519 	.globl _T1CCTL4
                                    520 	.globl _T1CCTL3
                                    521 	.globl _XX_T1CCTL2
                                    522 	.globl _XX_T1CCTL1
                                    523 	.globl _XX_T1CCTL0
                                    524 	.globl _CLD
                                    525 	.globl _IRCTL
                                    526 	.globl _CHIPINFO1
                                    527 	.globl _CHIPINFO0
                                    528 	.globl _FWDATA
                                    529 	.globl _FADDRH
                                    530 	.globl _FADDRL
                                    531 	.globl _FCTL
                                    532 	.globl _IVCTRL
                                    533 	.globl _BATTMON
                                    534 	.globl _SRCRC
                                    535 	.globl _DBGDATA
                                    536 	.globl _TESTREG0
                                    537 	.globl _CHIPID
                                    538 	.globl _CHVER
                                    539 	.globl _OBSSEL5
                                    540 	.globl _OBSSEL4
                                    541 	.globl _OBSSEL3
                                    542 	.globl _OBSSEL2
                                    543 	.globl _OBSSEL1
                                    544 	.globl _OBSSEL0
                                    545 	.globl _I2CIO
                                    546 	.globl _I2CWC
                                    547 	.globl _I2CADDR
                                    548 	.globl _I2CDATA
                                    549 	.globl _I2CSTAT
                                    550 	.globl _I2CCFG
                                    551 	.globl _OPAMPMC
                                    552 	.globl _MONMUX
                                    553 	.globl _rudolph1_open
                                    554 	.globl _rudolph1_close
                                    555 	.globl _rudolph1_send
                                    556 	.globl _rudolph1_stop
                                    557 ;--------------------------------------------------------
                                    558 ; special function registers
                                    559 ;--------------------------------------------------------
                                    560 	.area RSEG    (ABS,DATA)
      000000                        561 	.org 0x0000
                           000080   562 _P0	=	0x0080
                           000081   563 _SP	=	0x0081
                           000082   564 _DPL0	=	0x0082
                           000083   565 _DPH0	=	0x0083
                           000084   566 _DPL1	=	0x0084
                           000085   567 _DPH1	=	0x0085
                           000087   568 _PCON	=	0x0087
                           000088   569 _TCON	=	0x0088
                           000090   570 _P1	=	0x0090
                           000092   571 _DPS	=	0x0092
                           000098   572 _S0CON	=	0x0098
                           00009A   573 _IEN2	=	0x009a
                           00009B   574 _S1CON	=	0x009b
                           0000A0   575 _P2	=	0x00a0
                           0000A8   576 _IEN0	=	0x00a8
                           0000A9   577 _IP0	=	0x00a9
                           0000B8   578 _IEN1	=	0x00b8
                           0000B9   579 _IP1	=	0x00b9
                           0000C0   580 _IRCON	=	0x00c0
                           0000D0   581 _PSW	=	0x00d0
                           0000E0   582 _ACC	=	0x00e0
                           0000E8   583 _IRCON2	=	0x00e8
                           0000F0   584 _B	=	0x00f0
                           0000B4   585 _ADCCON1	=	0x00b4
                           0000B5   586 _ADCCON2	=	0x00b5
                           0000B6   587 _ADCCON3	=	0x00b6
                           0000BA   588 _ADCL	=	0x00ba
                           0000BB   589 _ADCH	=	0x00bb
                           0000BC   590 _RNDL	=	0x00bc
                           0000BD   591 _RNDH	=	0x00bd
                           0000B1   592 _ENCDI	=	0x00b1
                           0000B2   593 _ENCDO	=	0x00b2
                           0000B3   594 _ENCCS	=	0x00b3
                           0000D1   595 _DMAIRQ	=	0x00d1
                           0000D2   596 _DMA1CFGL	=	0x00d2
                           0000D3   597 _DMA1CFGH	=	0x00d3
                           0000D4   598 _DMA0CFGL	=	0x00d4
                           0000D5   599 _DMA0CFGH	=	0x00d5
                           0000D6   600 _DMAARM	=	0x00d6
                           0000D7   601 _DMAREQ	=	0x00d7
                           000089   602 _P0IFG	=	0x0089
                           00008A   603 _P1IFG	=	0x008a
                           00008B   604 _P2IFG	=	0x008b
                           00008C   605 _PICTL	=	0x008c
                           0000AB   606 _P0IEN	=	0x00ab
                           00008D   607 _P1IEN	=	0x008d
                           0000AC   608 _P2IEN	=	0x00ac
                           00008F   609 _P0INP	=	0x008f
                           0000F1   610 _PERCFG	=	0x00f1
                           0000F2   611 _APCFG	=	0x00f2
                           0000F3   612 _P0SEL	=	0x00f3
                           0000F4   613 _P1SEL	=	0x00f4
                           0000F5   614 _P2SEL	=	0x00f5
                           0000F6   615 _P1INP	=	0x00f6
                           0000F7   616 _P2INP	=	0x00f7
                           0000FD   617 _P0DIR	=	0x00fd
                           0000FE   618 _P1DIR	=	0x00fe
                           0000FF   619 _P2DIR	=	0x00ff
                           0000AE   620 _PMUX	=	0x00ae
                           000093   621 _MPAGE	=	0x0093
                           000093   622 __XPAGE	=	0x0093
                           0000C7   623 _MEMCTR	=	0x00c7
                           00009F   624 _FMAP	=	0x009f
                           00009F   625 _PSBANK	=	0x009f
                           000091   626 _RFIRQF1	=	0x0091
                           0000D9   627 _RFD	=	0x00d9
                           0000E1   628 _RFST	=	0x00e1
                           0000E9   629 _RFIRQF0	=	0x00e9
                           0000BF   630 _RFERRF	=	0x00bf
                           000095   631 _ST0	=	0x0095
                           000096   632 _ST1	=	0x0096
                           000097   633 _ST2	=	0x0097
                           0000AD   634 _STLOAD	=	0x00ad
                           0000BE   635 _SLEEPCMD	=	0x00be
                           00009D   636 _SLEEPSTA	=	0x009d
                           0000C6   637 _CLKCONCMD	=	0x00c6
                           00009E   638 _CLKCONSTA	=	0x009e
                           0000DA   639 _T1CC0L	=	0x00da
                           0000DB   640 _T1CC0H	=	0x00db
                           0000DC   641 _T1CC1L	=	0x00dc
                           0000DD   642 _T1CC1H	=	0x00dd
                           0000DE   643 _T1CC2L	=	0x00de
                           0000DF   644 _T1CC2H	=	0x00df
                           0000E2   645 _T1CNTL	=	0x00e2
                           0000E3   646 _T1CNTH	=	0x00e3
                           0000E4   647 _T1CTL	=	0x00e4
                           0000E5   648 _T1CCTL0	=	0x00e5
                           0000E6   649 _T1CCTL1	=	0x00e6
                           0000E7   650 _T1CCTL2	=	0x00e7
                           0000AF   651 _T1STAT	=	0x00af
                           000094   652 _T2CTRL	=	0x0094
                           00009C   653 _T2EVTCFG	=	0x009c
                           0000A1   654 _T2IRQF	=	0x00a1
                           0000A2   655 _T2M0	=	0x00a2
                           0000A3   656 _T2M1	=	0x00a3
                           0000A4   657 _T2MOVF0	=	0x00a4
                           0000A5   658 _T2MOVF1	=	0x00a5
                           0000A6   659 _T2MOVF2	=	0x00a6
                           0000A7   660 _T2IRQM	=	0x00a7
                           0000C3   661 _T2MSEL	=	0x00c3
                           0000CA   662 _T3CNT	=	0x00ca
                           0000CB   663 _T3CTL	=	0x00cb
                           0000CC   664 _T3CCTL0	=	0x00cc
                           0000CD   665 _T3CC0	=	0x00cd
                           0000CE   666 _T3CCTL1	=	0x00ce
                           0000CF   667 _T3CC1	=	0x00cf
                           0000EA   668 _T4CNT	=	0x00ea
                           0000EB   669 _T4CTL	=	0x00eb
                           0000EC   670 _T4CCTL0	=	0x00ec
                           0000ED   671 _T4CC0	=	0x00ed
                           0000EE   672 _T4CCTL1	=	0x00ee
                           0000EF   673 _T4CC1	=	0x00ef
                           0000D8   674 _TIMIF	=	0x00d8
                           000086   675 _U0CSR	=	0x0086
                           0000C1   676 _U0DBUF	=	0x00c1
                           0000C2   677 _U0BAUD	=	0x00c2
                           0000C4   678 _U0UCR	=	0x00c4
                           0000C5   679 _U0GCR	=	0x00c5
                           0000F8   680 _U1CSR	=	0x00f8
                           0000F9   681 _U1DBUF	=	0x00f9
                           0000FA   682 _U1BAUD	=	0x00fa
                           0000FB   683 _U1UCR	=	0x00fb
                           0000FC   684 _U1GCR	=	0x00fc
                           0000C9   685 _WDCTL	=	0x00c9
                                    686 ;--------------------------------------------------------
                                    687 ; special function bits
                                    688 ;--------------------------------------------------------
                                    689 	.area RSEG    (ABS,DATA)
      000000                        690 	.org 0x0000
                           000087   691 _P0_7	=	0x0087
                           000086   692 _P0_6	=	0x0086
                           000085   693 _P0_5	=	0x0085
                           000084   694 _P0_4	=	0x0084
                           000083   695 _P0_3	=	0x0083
                           000082   696 _P0_2	=	0x0082
                           000081   697 _P0_1	=	0x0081
                           000080   698 _P0_0	=	0x0080
                           00008F   699 _URX1IF	=	0x008f
                           00008D   700 _ADCIF	=	0x008d
                           00008B   701 _URX0IF	=	0x008b
                           00008A   702 _IT1	=	0x008a
                           000089   703 _RFERRIF	=	0x0089
                           000088   704 _IT0	=	0x0088
                           000097   705 _P1_7	=	0x0097
                           000096   706 _P1_6	=	0x0096
                           000095   707 _P1_5	=	0x0095
                           000094   708 _P1_4	=	0x0094
                           000093   709 _P1_3	=	0x0093
                           000092   710 _P1_2	=	0x0092
                           000091   711 _P1_1	=	0x0091
                           000090   712 _P1_0	=	0x0090
                           000099   713 _ENCIF_1	=	0x0099
                           000098   714 _ENCIF_0	=	0x0098
                           0000A7   715 _P2_7	=	0x00a7
                           0000A6   716 _P2_6	=	0x00a6
                           0000A5   717 _P2_5	=	0x00a5
                           0000A4   718 _P2_4	=	0x00a4
                           0000A3   719 _P2_3	=	0x00a3
                           0000A2   720 _P2_2	=	0x00a2
                           0000A1   721 _P2_1	=	0x00a1
                           0000A0   722 _P2_0	=	0x00a0
                           0000AF   723 _EA	=	0x00af
                           0000AD   724 _STIE	=	0x00ad
                           0000AC   725 _ENCIE	=	0x00ac
                           0000AB   726 _URX1IE	=	0x00ab
                           0000AA   727 _URX0IE	=	0x00aa
                           0000A9   728 _ADCIE	=	0x00a9
                           0000A8   729 _RFERRIE	=	0x00a8
                           0000BD   730 _P0IE	=	0x00bd
                           0000BC   731 _T4IE	=	0x00bc
                           0000BB   732 _T3IE	=	0x00bb
                           0000BA   733 _T2IE	=	0x00ba
                           0000B9   734 _T1IE	=	0x00b9
                           0000B8   735 _DMAIE	=	0x00b8
                           0000C7   736 _STIF	=	0x00c7
                           0000C5   737 _P0IF	=	0x00c5
                           0000C4   738 _T4IF	=	0x00c4
                           0000C3   739 _T3IF	=	0x00c3
                           0000C2   740 _T2IF	=	0x00c2
                           0000C1   741 _T1IF	=	0x00c1
                           0000C0   742 _DMAIF	=	0x00c0
                           0000D7   743 _CY	=	0x00d7
                           0000D6   744 _AC	=	0x00d6
                           0000D5   745 _F0	=	0x00d5
                           0000D4   746 _RS1	=	0x00d4
                           0000D3   747 _RS0	=	0x00d3
                           0000D2   748 _OV	=	0x00d2
                           0000D1   749 _F1	=	0x00d1
                           0000D0   750 _P	=	0x00d0
                           0000E7   751 _ACC_7	=	0x00e7
                           0000E6   752 _ACC_6	=	0x00e6
                           0000E5   753 _ACC_5	=	0x00e5
                           0000E4   754 _ACC_4	=	0x00e4
                           0000E3   755 _ACC_3	=	0x00e3
                           0000E2   756 _ACC_2	=	0x00e2
                           0000E1   757 _ACC_1	=	0x00e1
                           0000E0   758 _ACC_0	=	0x00e0
                           0000EC   759 _WDTIF	=	0x00ec
                           0000EB   760 _P1IF	=	0x00eb
                           0000EA   761 _UTX1IF	=	0x00ea
                           0000E9   762 _UTX0IF	=	0x00e9
                           0000E8   763 _P2IF	=	0x00e8
                           0000F7   764 _B_7	=	0x00f7
                           0000F6   765 _B_6	=	0x00f6
                           0000F5   766 _B_5	=	0x00f5
                           0000F4   767 _B_4	=	0x00f4
                           0000F3   768 _B_3	=	0x00f3
                           0000F2   769 _B_2	=	0x00f2
                           0000F1   770 _B_1	=	0x00f1
                           0000F0   771 _B_0	=	0x00f0
                           0000DE   772 _OVFIM	=	0x00de
                           0000DD   773 _T4CH1IF	=	0x00dd
                           0000DC   774 _T4CH0IF	=	0x00dc
                           0000DB   775 _T4OVFIF	=	0x00db
                           0000DA   776 _T3CH1IF	=	0x00da
                           0000D9   777 _T3CH0IF	=	0x00d9
                           0000D8   778 _T3OVFIF	=	0x00d8
                           0000FF   779 _MODE	=	0x00ff
                           0000FE   780 _RE	=	0x00fe
                           0000FD   781 _SLAVE	=	0x00fd
                           0000FC   782 _FE	=	0x00fc
                           0000FB   783 _ERR	=	0x00fb
                           0000FA   784 _RX_BYTE	=	0x00fa
                           0000F9   785 _TX_BYTE	=	0x00f9
                           0000F8   786 _ACTIVE	=	0x00f8
                                    787 ;--------------------------------------------------------
                                    788 ; overlayable register banks
                                    789 ;--------------------------------------------------------
                                    790 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        791 	.ds 8
                                    792 ;--------------------------------------------------------
                                    793 ; internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area DSEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable items in internal ram 
                                    798 ;--------------------------------------------------------
                                    799 ;--------------------------------------------------------
                                    800 ; indirectly addressable internal ram data
                                    801 ;--------------------------------------------------------
                                    802 	.area ISEG    (DATA)
                                    803 ;--------------------------------------------------------
                                    804 ; absolute internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area IABS    (ABS,DATA)
                                    807 	.area IABS    (ABS,DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; bit data
                                    810 ;--------------------------------------------------------
                                    811 	.area BSEG    (BIT)
                                    812 ;--------------------------------------------------------
                                    813 ; paged external ram data
                                    814 ;--------------------------------------------------------
                                    815 	.area PSEG    (PAG,XDATA)
                                    816 ;--------------------------------------------------------
                                    817 ; external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area XSEG    (XDATA)
                           0061A6   820 _MONMUX	=	0x61a6
                           0061A6   821 _OPAMPMC	=	0x61a6
                           006230   822 _I2CCFG	=	0x6230
                           006231   823 _I2CSTAT	=	0x6231
                           006232   824 _I2CDATA	=	0x6232
                           006233   825 _I2CADDR	=	0x6233
                           006234   826 _I2CWC	=	0x6234
                           006235   827 _I2CIO	=	0x6235
                           006243   828 _OBSSEL0	=	0x6243
                           006244   829 _OBSSEL1	=	0x6244
                           006245   830 _OBSSEL2	=	0x6245
                           006246   831 _OBSSEL3	=	0x6246
                           006247   832 _OBSSEL4	=	0x6247
                           006248   833 _OBSSEL5	=	0x6248
                           006249   834 _CHVER	=	0x6249
                           00624A   835 _CHIPID	=	0x624a
                           00624B   836 _TESTREG0	=	0x624b
                           006260   837 _DBGDATA	=	0x6260
                           006262   838 _SRCRC	=	0x6262
                           006264   839 _BATTMON	=	0x6264
                           006265   840 _IVCTRL	=	0x6265
                           006270   841 _FCTL	=	0x6270
                           006271   842 _FADDRL	=	0x6271
                           006272   843 _FADDRH	=	0x6272
                           006273   844 _FWDATA	=	0x6273
                           006276   845 _CHIPINFO0	=	0x6276
                           006277   846 _CHIPINFO1	=	0x6277
                           006281   847 _IRCTL	=	0x6281
                           006290   848 _CLD	=	0x6290
                           0062A0   849 _XX_T1CCTL0	=	0x62a0
                           0062A1   850 _XX_T1CCTL1	=	0x62a1
                           0062A2   851 _XX_T1CCTL2	=	0x62a2
                           0062A3   852 _T1CCTL3	=	0x62a3
                           0062A4   853 _T1CCTL4	=	0x62a4
                           0062A6   854 _XX_T1CC0L	=	0x62a6
                           0062A7   855 _XX_T1CC0H	=	0x62a7
                           0062A8   856 _XX_T1CC1L	=	0x62a8
                           0062A9   857 _XX_T1CC1H	=	0x62a9
                           0062AA   858 _XX_T1CC2L	=	0x62aa
                           0062AB   859 _XX_T1CC2H	=	0x62ab
                           0062AC   860 _T1CC3L	=	0x62ac
                           0062AD   861 _T1CC3H	=	0x62ad
                           0062AE   862 _T1CC4L	=	0x62ae
                           0062AF   863 _T1CC4H	=	0x62af
                           0062B0   864 _STCC	=	0x62b0
                           0062B1   865 _STCS	=	0x62b1
                           0062B2   866 _STCV0	=	0x62b2
                           0062B3   867 _STCV1	=	0x62b3
                           0062B4   868 _STCV2	=	0x62b4
                           0062C0   869 _OPAMPC	=	0x62c0
                           0062C1   870 _OPAMPS	=	0x62c1
                           0062D0   871 _CMPCTL	=	0x62d0
                           006000   872 _RFCORE_RAM	=	0x6000
                           006000   873 _RXFIFO	=	0x6000
                           006080   874 _TXFIFO	=	0x6080
                           006100   875 _SRC_ADDR_TABLE	=	0x6100
                           006160   876 _SRCRESMASK0	=	0x6160
                           006161   877 _SRCRESMASK1	=	0x6161
                           006162   878 _SRCRESMASK2	=	0x6162
                           006163   879 _SRCRESINDEX	=	0x6163
                           006164   880 _SRCEXTPENDEN0	=	0x6164
                           006165   881 _SRCEXTPENDEN1	=	0x6165
                           006166   882 _SRCEXTPENDEN2	=	0x6166
                           006167   883 _SRCSHORTPENDEN0	=	0x6167
                           006168   884 _SRCSHORTPENDEN1	=	0x6168
                           006169   885 _SRCSHORTPENDEN2	=	0x6169
                           00616A   886 _EXT_ADDR0	=	0x616a
                           00616B   887 _EXT_ADDR1	=	0x616b
                           00616C   888 _EXT_ADDR2	=	0x616c
                           00616D   889 _EXT_ADDR3	=	0x616d
                           00616E   890 _EXT_ADDR4	=	0x616e
                           00616F   891 _EXT_ADDR5	=	0x616f
                           006170   892 _EXT_ADDR6	=	0x6170
                           006171   893 _EXT_ADDR7	=	0x6171
                           006172   894 _PAN_ID0	=	0x6172
                           006173   895 _PAN_ID1	=	0x6173
                           006174   896 _SHORT_ADDR0	=	0x6174
                           006175   897 _SHORT_ADDR1	=	0x6175
                           006180   898 _FRMFILT0	=	0x6180
                           006181   899 _FRMFILT1	=	0x6181
                           006182   900 _SRCMATCH	=	0x6182
                           006183   901 _SRCSHORTEN0	=	0x6183
                           006184   902 _SRCSHORTEN1	=	0x6184
                           006185   903 _SRCSHORTEN2	=	0x6185
                           006186   904 _SRCEXTEN0	=	0x6186
                           006187   905 _SRCEXTEN1	=	0x6187
                           006188   906 _SRCEXTEN2	=	0x6188
                           006189   907 _FRMCTRL0	=	0x6189
                           00618A   908 _FRMCTRL1	=	0x618a
                           00618B   909 _RXENABLE	=	0x618b
                           00618C   910 _RXMASKSET	=	0x618c
                           00618D   911 _RXMASKCLR	=	0x618d
                           00618E   912 _FREQTUNE	=	0x618e
                           00618F   913 _FREQCTRL	=	0x618f
                           006190   914 _TXPOWER	=	0x6190
                           006191   915 _TXCTRL	=	0x6191
                           006192   916 _FSMSTAT0	=	0x6192
                           006193   917 _FSMSTAT1	=	0x6193
                           006194   918 _FIFOPCTRL	=	0x6194
                           006195   919 _FSMCTRL	=	0x6195
                           006196   920 _CCACTRL0	=	0x6196
                           006197   921 _CCACTRL1	=	0x6197
                           006198   922 _RSSI	=	0x6198
                           006199   923 _RSSISTAT	=	0x6199
                           00619A   924 _RXFIRST	=	0x619a
                           00619B   925 _RXFIFOCNT	=	0x619b
                           00619C   926 _TXFIFOCNT	=	0x619c
                           00619D   927 _RXFIRST_PTR	=	0x619d
                           00619E   928 _RXLAST_PTR	=	0x619e
                           00619F   929 _RXP1_PTR	=	0x619f
                           0061A1   930 _TXFIRST_PTR	=	0x61a1
                           0061A2   931 _TXLAST_PTR	=	0x61a2
                           0061A3   932 _RFIRQM0	=	0x61a3
                           0061A4   933 _RFIRQM1	=	0x61a4
                           0061A5   934 _RFERRM	=	0x61a5
                           0061A7   935 _RFRND	=	0x61a7
                           0061A8   936 _MDMCTRL0	=	0x61a8
                           0061A9   937 _MDMCTRL1	=	0x61a9
                           0061AA   938 _FREQEST	=	0x61aa
                           0061AB   939 _RXCTRL	=	0x61ab
                           0061AC   940 _FSCTRL	=	0x61ac
                           0061AD   941 _FSCAL0	=	0x61ad
                           0061AE   942 _FSCAL1	=	0x61ae
                           0061AF   943 _FSCAL2	=	0x61af
                           0061B0   944 _FSCAL3	=	0x61b0
                           0061B1   945 _AGCCTRL0	=	0x61b1
                           0061B2   946 _AGCCTRL1	=	0x61b2
                           0061B3   947 _AGCCTRL2	=	0x61b3
                           0061B4   948 _AGCCTRL3	=	0x61b4
                           0061B5   949 _ADCTEST0	=	0x61b5
                           0061B6   950 _ADCTEST1	=	0x61b6
                           0061B7   951 _ADCTEST2	=	0x61b7
                           0061B8   952 _MDMTEST0	=	0x61b8
                           0061B9   953 _MDMTEST1	=	0x61b9
                           0061BA   954 _DACTEST0	=	0x61ba
                           0061BB   955 _DACTEST1	=	0x61bb
                           0061BC   956 _DACTEST2	=	0x61bc
                           0061BD   957 _ATEST	=	0x61bd
                           0061BE   958 _PTEST0	=	0x61be
                           0061BF   959 _PTEST1	=	0x61bf
                           0061FA   960 _TXFILTCFG	=	0x61fa
                           0061EB   961 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   962 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   963 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   964 _CSPPROG0	=	0x61c0
                           0061C1   965 _CSPPROG1	=	0x61c1
                           0061C2   966 _CSPPROG2	=	0x61c2
                           0061C3   967 _CSPPROG3	=	0x61c3
                           0061C4   968 _CSPPROG4	=	0x61c4
                           0061C5   969 _CSPPROG5	=	0x61c5
                           0061C6   970 _CSPPROG6	=	0x61c6
                           0061C7   971 _CSPPROG7	=	0x61c7
                           0061C8   972 _CSPPROG8	=	0x61c8
                           0061C9   973 _CSPPROG9	=	0x61c9
                           0061CA   974 _CSPPROG10	=	0x61ca
                           0061CB   975 _CSPPROG11	=	0x61cb
                           0061CC   976 _CSPPROG12	=	0x61cc
                           0061CD   977 _CSPPROG13	=	0x61cd
                           0061CE   978 _CSPPROG14	=	0x61ce
                           0061CF   979 _CSPPROG15	=	0x61cf
                           0061D0   980 _CSPPROG16	=	0x61d0
                           0061D1   981 _CSPPROG17	=	0x61d1
                           0061D2   982 _CSPPROG18	=	0x61d2
                           0061D3   983 _CSPPROG19	=	0x61d3
                           0061D4   984 _CSPPROG20	=	0x61d4
                           0061D5   985 _CSPPROG21	=	0x61d5
                           0061D6   986 _CSPPROG22	=	0x61d6
                           0061D7   987 _CSPPROG23	=	0x61d7
                           0061E0   988 _CSPCTRL	=	0x61e0
                           0061E1   989 _CSPSTAT	=	0x61e1
                           0061E2   990 _CSPX	=	0x61e2
                           0061E3   991 _CSPY	=	0x61e3
                           0061E4   992 _CSPZ	=	0x61e4
                           0061E5   993 _CSPT	=	0x61e5
                           006200   994 _USBADDR	=	0x6200
                           006201   995 _USBPOW	=	0x6201
                           006202   996 _USBIIF	=	0x6202
                           006204   997 _USBOIF	=	0x6204
                           006206   998 _USBCIF	=	0x6206
                           006207   999 _USBIIE	=	0x6207
                           006209  1000 _USBOIE	=	0x6209
                           00620B  1001 _USBCIE	=	0x620b
                           00620C  1002 _USBFRML	=	0x620c
                           00620D  1003 _USBFRMH	=	0x620d
                           00620E  1004 _USBINDEX	=	0x620e
                           00620F  1005 _USBCTRL	=	0x620f
                           006210  1006 _USBMAXI	=	0x6210
                           006211  1007 _USBCS0	=	0x6211
                           006211  1008 _USBCSIL	=	0x6211
                           006212  1009 _USBCSIH	=	0x6212
                           006213  1010 _USBMAXO	=	0x6213
                           006214  1011 _USBCSOL	=	0x6214
                           006215  1012 _USBCSOH	=	0x6215
                           006216  1013 _USBCNT0	=	0x6216
                           006216  1014 _USBCNTL	=	0x6216
                           006217  1015 _USBCNTH	=	0x6217
                           006220  1016 _USBF0	=	0x6220
                           006222  1017 _USBF1	=	0x6222
                           006224  1018 _USBF2	=	0x6224
                           006226  1019 _USBF3	=	0x6226
                           006228  1020 _USBF4	=	0x6228
                           00622A  1021 _USBF5	=	0x622a
                           007080  1022 _X_P0	=	0x7080
                           007086  1023 _X_U0CSR	=	0x7086
                           007089  1024 _X_P0IFG	=	0x7089
                           00708A  1025 _X_P1IFG	=	0x708a
                           00708B  1026 _X_P2IFG	=	0x708b
                           00708C  1027 _X_PICTL	=	0x708c
                           00708D  1028 _X_P1IEN	=	0x708d
                           00708F  1029 _X_P0INP	=	0x708f
                           007090  1030 _X_P1	=	0x7090
                           007091  1031 _X_RFIRQF1	=	0x7091
                           007093  1032 _X_MPAGE	=	0x7093
                           007093  1033 _X__XPAGE	=	0x7093
                           007094  1034 _X_T2CTRL	=	0x7094
                           007095  1035 _X_ST0	=	0x7095
                           007096  1036 _X_ST1	=	0x7096
                           007097  1037 _X_ST2	=	0x7097
                           00709C  1038 _X_T2EVTCFG	=	0x709c
                           00709D  1039 _X_SLEEPSTA	=	0x709d
                           00709E  1040 _X_CLKCONSTA	=	0x709e
                           00709F  1041 _X_FMAP	=	0x709f
                           00709F  1042 _X_PSBANK	=	0x709f
                           0070A0  1043 _X_P2	=	0x70a0
                           0070A1  1044 _X_T2IRQF	=	0x70a1
                           0070A2  1045 _X_T2M0	=	0x70a2
                           0070A3  1046 _X_T2M1	=	0x70a3
                           0070A4  1047 _X_T2MOVF0	=	0x70a4
                           0070A5  1048 _X_T2MOVF1	=	0x70a5
                           0070A6  1049 _X_T2MOVF2	=	0x70a6
                           0070A7  1050 _X_T2IRQM	=	0x70a7
                           0070AB  1051 _X_P0IEN	=	0x70ab
                           0070AC  1052 _X_P2IEN	=	0x70ac
                           0070AD  1053 _X_STLOAD	=	0x70ad
                           0070AE  1054 _X_PMUX	=	0x70ae
                           0070AF  1055 _X_T1STAT	=	0x70af
                           0070B1  1056 _X_ENCDI	=	0x70b1
                           0070B2  1057 _X_ENCDO	=	0x70b2
                           0070B3  1058 _X_ENCCS	=	0x70b3
                           0070B4  1059 _X_ADCCON1	=	0x70b4
                           0070B5  1060 _X_ADCCON2	=	0x70b5
                           0070B6  1061 _X_ADCCON3	=	0x70b6
                           0070BA  1062 _X_ADCL	=	0x70ba
                           0070BB  1063 _X_ADCH	=	0x70bb
                           0070BC  1064 _X_RNDL	=	0x70bc
                           0070BD  1065 _X_RNDH	=	0x70bd
                           0070BE  1066 _X_SLEEPCMD	=	0x70be
                           0070BF  1067 _X_RFERRF	=	0x70bf
                           0070C1  1068 _X_U0DBUF	=	0x70c1
                           0070C2  1069 _X_U0BAUD	=	0x70c2
                           0070C3  1070 _X_T2MSEL	=	0x70c3
                           0070C4  1071 _X_U0UCR	=	0x70c4
                           0070C5  1072 _X_U0GCR	=	0x70c5
                           0070C6  1073 _X_CLKCONCMD	=	0x70c6
                           0070C7  1074 _X_MEMCTR	=	0x70c7
                           0070C9  1075 _X_WDCTL	=	0x70c9
                           0070CA  1076 _X_T3CNT	=	0x70ca
                           0070CB  1077 _X_T3CTL	=	0x70cb
                           0070CC  1078 _X_T3CCTL0	=	0x70cc
                           0070CD  1079 _X_T3CC0	=	0x70cd
                           0070CE  1080 _X_T3CCTL1	=	0x70ce
                           0070CF  1081 _X_T3CC1	=	0x70cf
                           0070D1  1082 _X_DMAIRQ	=	0x70d1
                           0070D2  1083 _X_DMA1CFGL	=	0x70d2
                           0070D3  1084 _X_DMA1CFGH	=	0x70d3
                           0070D4  1085 _X_DMA0CFGL	=	0x70d4
                           0070D5  1086 _X_DMA0CFGH	=	0x70d5
                           0070D6  1087 _X_DMAARM	=	0x70d6
                           0070D7  1088 _X_DMAREQ	=	0x70d7
                           0070D8  1089 _X_TIMIF	=	0x70d8
                           0070D9  1090 _X_RFD	=	0x70d9
                           0070DA  1091 _X_T1CC0L	=	0x70da
                           0070DB  1092 _X_T1CC0H	=	0x70db
                           0070DC  1093 _X_T1CC1L	=	0x70dc
                           0070DD  1094 _X_T1CC1H	=	0x70dd
                           0070DE  1095 _X_T1CC2L	=	0x70de
                           0070DF  1096 _X_T1CC2H	=	0x70df
                           0070E1  1097 _X_RFST	=	0x70e1
                           0070E2  1098 _X_T1CNTL	=	0x70e2
                           0070E3  1099 _X_T1CNTH	=	0x70e3
                           0070E4  1100 _X_T1CTL	=	0x70e4
                           0070E5  1101 _X_T1CCTL0	=	0x70e5
                           0070E6  1102 _X_T1CCTL1	=	0x70e6
                           0070E7  1103 _X_T1CCTL2	=	0x70e7
                           0070E9  1104 _X_RFIRQF0	=	0x70e9
                           0070EA  1105 _X_T4CNT	=	0x70ea
                           0070EB  1106 _X_T4CTL	=	0x70eb
                           0070EC  1107 _X_T4CCTL0	=	0x70ec
                           0070ED  1108 _X_T4CC0	=	0x70ed
                           0070EE  1109 _X_T4CCTL1	=	0x70ee
                           0070EF  1110 _X_T4CC1	=	0x70ef
                           0070F1  1111 _X_PERCFG	=	0x70f1
                           0070F2  1112 _X_APCFG	=	0x70f2
                           0070F3  1113 _X_P0SEL	=	0x70f3
                           0070F4  1114 _X_P1SEL	=	0x70f4
                           0070F5  1115 _X_P2SEL	=	0x70f5
                           0070F6  1116 _X_P1INP	=	0x70f6
                           0070F7  1117 _X_P2INP	=	0x70f7
                           0070F8  1118 _X_U1CSR	=	0x70f8
                           0070F9  1119 _X_U1DBUF	=	0x70f9
                           0070FA  1120 _X_U1BAUD	=	0x70fa
                           0070FB  1121 _X_U1UCR	=	0x70fb
                           0070FC  1122 _X_U1GCR	=	0x70fc
                           0070FD  1123 _X_P0DIR	=	0x70fd
                           0070FE  1124 _X_P1DIR	=	0x70fe
                           0070FF  1125 _X_P2DIR	=	0x70ff
                           007800  1126 _X_INFOPAGE	=	0x7800
                           00780C  1127 _X_IEEE_ADDR	=	0x780c
                                   1128 ;--------------------------------------------------------
                                   1129 ; absolute external ram data
                                   1130 ;--------------------------------------------------------
                                   1131 	.area XABS    (ABS,XDATA)
                                   1132 ;--------------------------------------------------------
                                   1133 ; external initialized ram data
                                   1134 ;--------------------------------------------------------
                                   1135 	.area XISEG   (XDATA)
                                   1136 	.area HOME    (CODE)
                                   1137 	.area GSINIT0 (CODE)
                                   1138 	.area GSINIT1 (CODE)
                                   1139 	.area GSINIT2 (CODE)
                                   1140 	.area GSINIT3 (CODE)
                                   1141 	.area GSINIT4 (CODE)
                                   1142 	.area GSINIT5 (CODE)
                                   1143 	.area GSINIT  (CODE)
                                   1144 	.area GSFINAL (CODE)
                                   1145 	.area CSEG    (CODE)
                                   1146 ;--------------------------------------------------------
                                   1147 ; global & static initialisations
                                   1148 ;--------------------------------------------------------
                                   1149 	.area HOME    (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 	.area GSFINAL (CODE)
                                   1152 	.area GSINIT  (CODE)
                                   1153 ;--------------------------------------------------------
                                   1154 ; Home
                                   1155 ;--------------------------------------------------------
                                   1156 	.area HOME    (CODE)
                                   1157 	.area HOME    (CODE)
                                   1158 ;--------------------------------------------------------
                                   1159 ; code
                                   1160 ;--------------------------------------------------------
                                   1161 	.area CSEG    (CODE)
                                   1162 ;------------------------------------------------------------
                                   1163 ;Allocation info for local variables in function 'read_data'
                                   1164 ;------------------------------------------------------------
                                   1165 ;dataptr                   Allocated to stack - sp -7
                                   1166 ;chunk                     Allocated to stack - sp -9
                                   1167 ;c                         Allocated to stack - sp -2
                                   1168 ;len                       Allocated to registers r3 r4 
                                   1169 ;------------------------------------------------------------
                                   1170 ;	/home/user/contiki/core/net/rime/rudolph1.c:88: read_data(struct rudolph1_conn *c, uint8_t *dataptr, int chunk)
                                   1171 ;	-----------------------------------------
                                   1172 ;	 function read_data
                                   1173 ;	-----------------------------------------
      000000                       1174 _read_data:
                           000007  1175 	ar7 = 0x07
                           000006  1176 	ar6 = 0x06
                           000005  1177 	ar5 = 0x05
                           000004  1178 	ar4 = 0x04
                           000003  1179 	ar3 = 0x03
                           000002  1180 	ar2 = 0x02
                           000001  1181 	ar1 = 0x01
                           000000  1182 	ar0 = 0x00
      000000 C0 82            [24] 1183 	push	dpl
      000002 C0 83            [24] 1184 	push	dph
      000004 C0 F0            [24] 1185 	push	b
                                   1186 ;	/home/user/contiki/core/net/rime/rudolph1.c:90: int len = 0;
      000006 7B 00            [12] 1187 	mov	r3,#0x00
      000008 7C 00            [12] 1188 	mov	r4,#0x00
                                   1189 ;	/home/user/contiki/core/net/rime/rudolph1.c:92: if(c->cb->read_chunk) {
      00000A A8 81            [24] 1190 	mov	r0,sp
      00000C 18               [12] 1191 	dec	r0
      00000D 18               [12] 1192 	dec	r0
      00000E 74 88            [12] 1193 	mov	a,#0x88
      000010 26               [12] 1194 	add	a,@r0
      000011 FA               [12] 1195 	mov	r2,a
      000012 E4               [12] 1196 	clr	a
      000013 08               [12] 1197 	inc	r0
      000014 36               [12] 1198 	addc	a,@r0
      000015 FE               [12] 1199 	mov	r6,a
      000016 08               [12] 1200 	inc	r0
      000017 86 07            [24] 1201 	mov	ar7,@r0
      000019 8A 82            [24] 1202 	mov	dpl,r2
      00001B 8E 83            [24] 1203 	mov	dph,r6
      00001D 8F F0            [24] 1204 	mov	b,r7
      00001F 12r00r00         [24] 1205 	lcall	__gptrget
      000022 FA               [12] 1206 	mov	r2,a
      000023 A3               [24] 1207 	inc	dptr
      000024 12r00r00         [24] 1208 	lcall	__gptrget
      000027 FE               [12] 1209 	mov	r6,a
      000028 A3               [24] 1210 	inc	dptr
      000029 12r00r00         [24] 1211 	lcall	__gptrget
      00002C FF               [12] 1212 	mov	r7,a
      00002D 74 02            [12] 1213 	mov	a,#0x02
      00002F 2A               [12] 1214 	add	a,r2
      000030 FA               [12] 1215 	mov	r2,a
      000031 E4               [12] 1216 	clr	a
      000032 3E               [12] 1217 	addc	a,r6
      000033 FE               [12] 1218 	mov	r6,a
      000034 8A 82            [24] 1219 	mov	dpl,r2
      000036 8E 83            [24] 1220 	mov	dph,r6
      000038 8F F0            [24] 1221 	mov	b,r7
      00003A 12r00r00         [24] 1222 	lcall	__gptrget
      00003D FE               [12] 1223 	mov	r6,a
      00003E A3               [24] 1224 	inc	dptr
      00003F 12r00r00         [24] 1225 	lcall	__gptrget
      000042 FF               [12] 1226 	mov	r7,a
      000043 4E               [12] 1227 	orl	a,r6
      000044 60 59            [24] 1228 	jz	00102$
                                   1229 ;	/home/user/contiki/core/net/rime/rudolph1.c:93: len = c->cb->read_chunk(c, chunk * RUDOLPH1_DATASIZE,
      000046 E5 81            [12] 1230 	mov	a,sp
      000048 24 F7            [12] 1231 	add	a,#0xf7
      00004A F8               [12] 1232 	mov	r0,a
      00004B 86 02            [24] 1233 	mov	ar2,@r0
      00004D 08               [12] 1234 	inc	r0
      00004E E6               [12] 1235 	mov	a,@r0
      00004F 54 03            [12] 1236 	anl	a,#0x03
      000051 A2 E0            [12] 1237 	mov	c,acc.0
      000053 CA               [12] 1238 	xch	a,r2
      000054 13               [12] 1239 	rrc	a
      000055 CA               [12] 1240 	xch	a,r2
      000056 13               [12] 1241 	rrc	a
      000057 A2 E0            [12] 1242 	mov	c,acc.0
      000059 CA               [12] 1243 	xch	a,r2
      00005A 13               [12] 1244 	rrc	a
      00005B CA               [12] 1245 	xch	a,r2
      00005C 13               [12] 1246 	rrc	a
      00005D CA               [12] 1247 	xch	a,r2
      00005E FD               [12] 1248 	mov	r5,a
      00005F 74 40            [12] 1249 	mov	a,#0x40
      000061 C0 E0            [24] 1250 	push	acc
      000063 E4               [12] 1251 	clr	a
      000064 C0 E0            [24] 1252 	push	acc
      000066 E5 81            [12] 1253 	mov	a,sp
      000068 24 F7            [12] 1254 	add	a,#0xf7
      00006A F8               [12] 1255 	mov	r0,a
      00006B E6               [12] 1256 	mov	a,@r0
      00006C C0 E0            [24] 1257 	push	acc
      00006E 08               [12] 1258 	inc	r0
      00006F E6               [12] 1259 	mov	a,@r0
      000070 C0 E0            [24] 1260 	push	acc
      000072 08               [12] 1261 	inc	r0
      000073 E6               [12] 1262 	mov	a,@r0
      000074 C0 E0            [24] 1263 	push	acc
      000076 C0 02            [24] 1264 	push	ar2
      000078 C0 05            [24] 1265 	push	ar5
      00007A 12r00r7F         [24] 1266 	lcall	00109$
      00007D 80 12            [24] 1267 	sjmp	00110$
      00007F                       1268 00109$:
      00007F C0 06            [24] 1269 	push	ar6
      000081 C0 07            [24] 1270 	push	ar7
      000083 E5 81            [12] 1271 	mov	a,sp
      000085 24 F3            [12] 1272 	add	a,#0xf3
      000087 F8               [12] 1273 	mov	r0,a
      000088 86 82            [24] 1274 	mov	dpl,@r0
      00008A 08               [12] 1275 	inc	r0
      00008B 86 83            [24] 1276 	mov	dph,@r0
      00008D 08               [12] 1277 	inc	r0
      00008E 86 F0            [24] 1278 	mov	b,@r0
      000090 22               [24] 1279 	ret
      000091                       1280 00110$:
      000091 AE 82            [24] 1281 	mov	r6,dpl
      000093 AF 83            [24] 1282 	mov	r7,dph
      000095 E5 81            [12] 1283 	mov	a,sp
      000097 24 F9            [12] 1284 	add	a,#0xf9
      000099 F5 81            [12] 1285 	mov	sp,a
      00009B 8E 03            [24] 1286 	mov	ar3,r6
      00009D 8F 04            [24] 1287 	mov	ar4,r7
      00009F                       1288 00102$:
                                   1289 ;	/home/user/contiki/core/net/rime/rudolph1.c:96: return len;
      00009F 8B 82            [24] 1290 	mov	dpl,r3
      0000A1 8C 83            [24] 1291 	mov	dph,r4
      0000A3 15 81            [12] 1292 	dec	sp
      0000A5 15 81            [12] 1293 	dec	sp
      0000A7 15 81            [12] 1294 	dec	sp
      0000A9 22               [24] 1295 	ret
                                   1296 ;------------------------------------------------------------
                                   1297 ;Allocation info for local variables in function 'format_data'
                                   1298 ;------------------------------------------------------------
                                   1299 ;chunk                     Allocated to stack - sp -9
                                   1300 ;c                         Allocated to stack - sp -5
                                   1301 ;p                         Allocated to stack - sp -2
                                   1302 ;------------------------------------------------------------
                                   1303 ;	/home/user/contiki/core/net/rime/rudolph1.c:100: format_data(struct rudolph1_conn *c, int chunk)
                                   1304 ;	-----------------------------------------
                                   1305 ;	 function format_data
                                   1306 ;	-----------------------------------------
      0000AA                       1307 _format_data:
      0000AA C0 82            [24] 1308 	push	dpl
      0000AC C0 83            [24] 1309 	push	dph
      0000AE C0 F0            [24] 1310 	push	b
      0000B0 05 81            [12] 1311 	inc	sp
      0000B2 05 81            [12] 1312 	inc	sp
      0000B4 05 81            [12] 1313 	inc	sp
                                   1314 ;	/home/user/contiki/core/net/rime/rudolph1.c:104: packetbuf_clear();
      0000B6 12r00r00         [24] 1315 	lcall	_packetbuf_clear
                                   1316 ;	/home/user/contiki/core/net/rime/rudolph1.c:105: p = packetbuf_dataptr();
      0000B9 12r00r00         [24] 1317 	lcall	_packetbuf_dataptr
      0000BC AA 82            [24] 1318 	mov	r2,dpl
      0000BE AB 83            [24] 1319 	mov	r3,dph
      0000C0 AC F0            [24] 1320 	mov	r4,b
      0000C2 A8 81            [24] 1321 	mov	r0,sp
      0000C4 18               [12] 1322 	dec	r0
      0000C5 18               [12] 1323 	dec	r0
      0000C6 A6 02            [24] 1324 	mov	@r0,ar2
      0000C8 08               [12] 1325 	inc	r0
      0000C9 A6 03            [24] 1326 	mov	@r0,ar3
      0000CB 08               [12] 1327 	inc	r0
      0000CC A6 04            [24] 1328 	mov	@r0,ar4
                                   1329 ;	/home/user/contiki/core/net/rime/rudolph1.c:106: p->h.type = TYPE_DATA;
      0000CE A8 81            [24] 1330 	mov	r0,sp
      0000D0 18               [12] 1331 	dec	r0
      0000D1 18               [12] 1332 	dec	r0
      0000D2 86 82            [24] 1333 	mov	dpl,@r0
      0000D4 08               [12] 1334 	inc	r0
      0000D5 86 83            [24] 1335 	mov	dph,@r0
      0000D7 08               [12] 1336 	inc	r0
      0000D8 86 F0            [24] 1337 	mov	b,@r0
      0000DA E4               [12] 1338 	clr	a
      0000DB 12r00r00         [24] 1339 	lcall	__gptrput
                                   1340 ;	/home/user/contiki/core/net/rime/rudolph1.c:107: p->h.version = c->version;
      0000DE A8 81            [24] 1341 	mov	r0,sp
      0000E0 18               [12] 1342 	dec	r0
      0000E1 18               [12] 1343 	dec	r0
      0000E2 74 01            [12] 1344 	mov	a,#0x01
      0000E4 26               [12] 1345 	add	a,@r0
      0000E5 FD               [12] 1346 	mov	r5,a
      0000E6 E4               [12] 1347 	clr	a
      0000E7 08               [12] 1348 	inc	r0
      0000E8 36               [12] 1349 	addc	a,@r0
      0000E9 FE               [12] 1350 	mov	r6,a
      0000EA 08               [12] 1351 	inc	r0
      0000EB 86 07            [24] 1352 	mov	ar7,@r0
      0000ED E5 81            [12] 1353 	mov	a,sp
      0000EF 24 FB            [12] 1354 	add	a,#0xfb
      0000F1 F8               [12] 1355 	mov	r0,a
      0000F2 74 A6            [12] 1356 	mov	a,#0xA6
      0000F4 26               [12] 1357 	add	a,@r0
      0000F5 FA               [12] 1358 	mov	r2,a
      0000F6 E4               [12] 1359 	clr	a
      0000F7 08               [12] 1360 	inc	r0
      0000F8 36               [12] 1361 	addc	a,@r0
      0000F9 FB               [12] 1362 	mov	r3,a
      0000FA 08               [12] 1363 	inc	r0
      0000FB 86 04            [24] 1364 	mov	ar4,@r0
      0000FD 8A 82            [24] 1365 	mov	dpl,r2
      0000FF 8B 83            [24] 1366 	mov	dph,r3
      000101 8C F0            [24] 1367 	mov	b,r4
      000103 12r00r00         [24] 1368 	lcall	__gptrget
      000106 8D 82            [24] 1369 	mov	dpl,r5
      000108 8E 83            [24] 1370 	mov	dph,r6
      00010A 8F F0            [24] 1371 	mov	b,r7
      00010C 12r00r00         [24] 1372 	lcall	__gptrput
                                   1373 ;	/home/user/contiki/core/net/rime/rudolph1.c:108: p->h.chunk = chunk;
      00010F A8 81            [24] 1374 	mov	r0,sp
      000111 18               [12] 1375 	dec	r0
      000112 18               [12] 1376 	dec	r0
      000113 74 02            [12] 1377 	mov	a,#0x02
      000115 26               [12] 1378 	add	a,@r0
      000116 FD               [12] 1379 	mov	r5,a
      000117 E4               [12] 1380 	clr	a
      000118 08               [12] 1381 	inc	r0
      000119 36               [12] 1382 	addc	a,@r0
      00011A FE               [12] 1383 	mov	r6,a
      00011B 08               [12] 1384 	inc	r0
      00011C 86 07            [24] 1385 	mov	ar7,@r0
      00011E 8D 82            [24] 1386 	mov	dpl,r5
      000120 8E 83            [24] 1387 	mov	dph,r6
      000122 8F F0            [24] 1388 	mov	b,r7
      000124 E5 81            [12] 1389 	mov	a,sp
      000126 24 F7            [12] 1390 	add	a,#0xf7
      000128 F8               [12] 1391 	mov	r0,a
      000129 E6               [12] 1392 	mov	a,@r0
      00012A 12r00r00         [24] 1393 	lcall	__gptrput
      00012D A3               [24] 1394 	inc	dptr
      00012E 08               [12] 1395 	inc	r0
      00012F E6               [12] 1396 	mov	a,@r0
      000130 12r00r00         [24] 1397 	lcall	__gptrput
                                   1398 ;	/home/user/contiki/core/net/rime/rudolph1.c:109: p->datalen = read_data(c, p->data, chunk);
      000133 A8 81            [24] 1399 	mov	r0,sp
      000135 18               [12] 1400 	dec	r0
      000136 18               [12] 1401 	dec	r0
      000137 74 04            [12] 1402 	mov	a,#0x04
      000139 26               [12] 1403 	add	a,@r0
      00013A FD               [12] 1404 	mov	r5,a
      00013B E4               [12] 1405 	clr	a
      00013C 08               [12] 1406 	inc	r0
      00013D 36               [12] 1407 	addc	a,@r0
      00013E FE               [12] 1408 	mov	r6,a
      00013F 08               [12] 1409 	inc	r0
      000140 86 07            [24] 1410 	mov	ar7,@r0
      000142 A8 81            [24] 1411 	mov	r0,sp
      000144 18               [12] 1412 	dec	r0
      000145 18               [12] 1413 	dec	r0
      000146 74 05            [12] 1414 	mov	a,#0x05
      000148 26               [12] 1415 	add	a,@r0
      000149 FA               [12] 1416 	mov	r2,a
      00014A E4               [12] 1417 	clr	a
      00014B 08               [12] 1418 	inc	r0
      00014C 36               [12] 1419 	addc	a,@r0
      00014D FB               [12] 1420 	mov	r3,a
      00014E 08               [12] 1421 	inc	r0
      00014F 86 04            [24] 1422 	mov	ar4,@r0
      000151 C0 07            [24] 1423 	push	ar7
      000153 C0 06            [24] 1424 	push	ar6
      000155 C0 05            [24] 1425 	push	ar5
      000157 E5 81            [12] 1426 	mov	a,sp
      000159 24 F4            [12] 1427 	add	a,#0xf4
      00015B F8               [12] 1428 	mov	r0,a
      00015C E6               [12] 1429 	mov	a,@r0
      00015D C0 E0            [24] 1430 	push	acc
      00015F 08               [12] 1431 	inc	r0
      000160 E6               [12] 1432 	mov	a,@r0
      000161 C0 E0            [24] 1433 	push	acc
      000163 C0 02            [24] 1434 	push	ar2
      000165 C0 03            [24] 1435 	push	ar3
      000167 C0 04            [24] 1436 	push	ar4
      000169 E5 81            [12] 1437 	mov	a,sp
      00016B 24 F3            [12] 1438 	add	a,#0xf3
      00016D F8               [12] 1439 	mov	r0,a
      00016E 86 82            [24] 1440 	mov	dpl,@r0
      000170 08               [12] 1441 	inc	r0
      000171 86 83            [24] 1442 	mov	dph,@r0
      000173 08               [12] 1443 	inc	r0
      000174 86 F0            [24] 1444 	mov	b,@r0
      000176 12r00r00         [24] 1445 	lcall	_read_data
      000179 AB 82            [24] 1446 	mov	r3,dpl
      00017B E5 81            [12] 1447 	mov	a,sp
      00017D 24 FB            [12] 1448 	add	a,#0xfb
      00017F F5 81            [12] 1449 	mov	sp,a
      000181 D0 05            [24] 1450 	pop	ar5
      000183 D0 06            [24] 1451 	pop	ar6
      000185 D0 07            [24] 1452 	pop	ar7
      000187 8D 82            [24] 1453 	mov	dpl,r5
      000189 8E 83            [24] 1454 	mov	dph,r6
      00018B 8F F0            [24] 1455 	mov	b,r7
      00018D EB               [12] 1456 	mov	a,r3
      00018E 12r00r00         [24] 1457 	lcall	__gptrput
                                   1458 ;	/home/user/contiki/core/net/rime/rudolph1.c:111: (RUDOLPH1_DATASIZE - p->datalen));
      000191 7C 00            [12] 1459 	mov	r4,#0x00
      000193 74 40            [12] 1460 	mov	a,#0x40
      000195 C3               [12] 1461 	clr	c
      000196 9B               [12] 1462 	subb	a,r3
      000197 FB               [12] 1463 	mov	r3,a
      000198 E4               [12] 1464 	clr	a
      000199 9C               [12] 1465 	subb	a,r4
      00019A FC               [12] 1466 	mov	r4,a
      00019B 74 45            [12] 1467 	mov	a,#0x45
      00019D C3               [12] 1468 	clr	c
      00019E 9B               [12] 1469 	subb	a,r3
      00019F FB               [12] 1470 	mov	r3,a
      0001A0 E4               [12] 1471 	clr	a
      0001A1 9C               [12] 1472 	subb	a,r4
      0001A2 FC               [12] 1473 	mov	r4,a
      0001A3 8B 82            [24] 1474 	mov	dpl,r3
      0001A5 8C 83            [24] 1475 	mov	dph,r4
      0001A7 C0 07            [24] 1476 	push	ar7
      0001A9 C0 06            [24] 1477 	push	ar6
      0001AB C0 05            [24] 1478 	push	ar5
      0001AD 12r00r00         [24] 1479 	lcall	_packetbuf_set_datalen
      0001B0 D0 05            [24] 1480 	pop	ar5
      0001B2 D0 06            [24] 1481 	pop	ar6
      0001B4 D0 07            [24] 1482 	pop	ar7
                                   1483 ;	/home/user/contiki/core/net/rime/rudolph1.c:113: return p->datalen;
      0001B6 8D 82            [24] 1484 	mov	dpl,r5
      0001B8 8E 83            [24] 1485 	mov	dph,r6
      0001BA 8F F0            [24] 1486 	mov	b,r7
      0001BC 12r00r00         [24] 1487 	lcall	__gptrget
      0001BF FD               [12] 1488 	mov	r5,a
      0001C0 7F 00            [12] 1489 	mov	r7,#0x00
      0001C2 8D 82            [24] 1490 	mov	dpl,r5
      0001C4 8F 83            [24] 1491 	mov	dph,r7
      0001C6 E5 81            [12] 1492 	mov	a,sp
      0001C8 24 FA            [12] 1493 	add	a,#0xFA
      0001CA F5 81            [12] 1494 	mov	sp,a
      0001CC 22               [24] 1495 	ret
                                   1496 ;------------------------------------------------------------
                                   1497 ;Allocation info for local variables in function 'write_data'
                                   1498 ;------------------------------------------------------------
                                   1499 ;chunk                     Allocated to stack - sp -6
                                   1500 ;data                      Allocated to stack - sp -9
                                   1501 ;datalen                   Allocated to stack - sp -11
                                   1502 ;c                         Allocated to stack - sp -2
                                   1503 ;------------------------------------------------------------
                                   1504 ;	/home/user/contiki/core/net/rime/rudolph1.c:117: write_data(struct rudolph1_conn *c, int chunk, uint8_t *data, int datalen)
                                   1505 ;	-----------------------------------------
                                   1506 ;	 function write_data
                                   1507 ;	-----------------------------------------
      0001CD                       1508 _write_data:
      0001CD C0 82            [24] 1509 	push	dpl
      0001CF C0 83            [24] 1510 	push	dph
      0001D1 C0 F0            [24] 1511 	push	b
                                   1512 ;	/home/user/contiki/core/net/rime/rudolph1.c:119: if(chunk == 0) {
      0001D3 E5 81            [12] 1513 	mov	a,sp
      0001D5 24 FA            [12] 1514 	add	a,#0xfa
      0001D7 F8               [12] 1515 	mov	r0,a
      0001D8 E6               [12] 1516 	mov	a,@r0
      0001D9 08               [12] 1517 	inc	r0
      0001DA 46               [12] 1518 	orl	a,@r0
      0001DB 70 78            [24] 1519 	jnz	00102$
                                   1520 ;	/home/user/contiki/core/net/rime/rudolph1.c:120: c->cb->write_chunk(c, 0, RUDOLPH1_FLAG_NEWFILE, data, 0);
      0001DD A8 81            [24] 1521 	mov	r0,sp
      0001DF 18               [12] 1522 	dec	r0
      0001E0 18               [12] 1523 	dec	r0
      0001E1 74 88            [12] 1524 	mov	a,#0x88
      0001E3 26               [12] 1525 	add	a,@r0
      0001E4 FA               [12] 1526 	mov	r2,a
      0001E5 E4               [12] 1527 	clr	a
      0001E6 08               [12] 1528 	inc	r0
      0001E7 36               [12] 1529 	addc	a,@r0
      0001E8 FB               [12] 1530 	mov	r3,a
      0001E9 08               [12] 1531 	inc	r0
      0001EA 86 04            [24] 1532 	mov	ar4,@r0
      0001EC 8A 82            [24] 1533 	mov	dpl,r2
      0001EE 8B 83            [24] 1534 	mov	dph,r3
      0001F0 8C F0            [24] 1535 	mov	b,r4
      0001F2 12r00r00         [24] 1536 	lcall	__gptrget
      0001F5 FA               [12] 1537 	mov	r2,a
      0001F6 A3               [24] 1538 	inc	dptr
      0001F7 12r00r00         [24] 1539 	lcall	__gptrget
      0001FA FB               [12] 1540 	mov	r3,a
      0001FB A3               [24] 1541 	inc	dptr
      0001FC 12r00r00         [24] 1542 	lcall	__gptrget
      0001FF FC               [12] 1543 	mov	r4,a
      000200 8A 82            [24] 1544 	mov	dpl,r2
      000202 8B 83            [24] 1545 	mov	dph,r3
      000204 8C F0            [24] 1546 	mov	b,r4
      000206 12r00r00         [24] 1547 	lcall	__gptrget
      000209 FA               [12] 1548 	mov	r2,a
      00020A A3               [24] 1549 	inc	dptr
      00020B 12r00r00         [24] 1550 	lcall	__gptrget
      00020E FB               [12] 1551 	mov	r3,a
      00020F C0 03            [24] 1552 	push	ar3
      000211 C0 02            [24] 1553 	push	ar2
      000213 E4               [12] 1554 	clr	a
      000214 C0 E0            [24] 1555 	push	acc
      000216 C0 E0            [24] 1556 	push	acc
      000218 E5 81            [12] 1557 	mov	a,sp
      00021A 24 F3            [12] 1558 	add	a,#0xf3
      00021C F8               [12] 1559 	mov	r0,a
      00021D E6               [12] 1560 	mov	a,@r0
      00021E C0 E0            [24] 1561 	push	acc
      000220 08               [12] 1562 	inc	r0
      000221 E6               [12] 1563 	mov	a,@r0
      000222 C0 E0            [24] 1564 	push	acc
      000224 08               [12] 1565 	inc	r0
      000225 E6               [12] 1566 	mov	a,@r0
      000226 C0 E0            [24] 1567 	push	acc
      000228 74 01            [12] 1568 	mov	a,#0x01
      00022A C0 E0            [24] 1569 	push	acc
      00022C E4               [12] 1570 	clr	a
      00022D C0 E0            [24] 1571 	push	acc
      00022F E4               [12] 1572 	clr	a
      000230 C0 E0            [24] 1573 	push	acc
      000232 C0 E0            [24] 1574 	push	acc
      000234 12r02r39         [24] 1575 	lcall	00115$
      000237 80 12            [24] 1576 	sjmp	00116$
      000239                       1577 00115$:
      000239 C0 02            [24] 1578 	push	ar2
      00023B C0 03            [24] 1579 	push	ar3
      00023D E5 81            [12] 1580 	mov	a,sp
      00023F 24 EF            [12] 1581 	add	a,#0xef
      000241 F8               [12] 1582 	mov	r0,a
      000242 86 82            [24] 1583 	mov	dpl,@r0
      000244 08               [12] 1584 	inc	r0
      000245 86 83            [24] 1585 	mov	dph,@r0
      000247 08               [12] 1586 	inc	r0
      000248 86 F0            [24] 1587 	mov	b,@r0
      00024A 22               [24] 1588 	ret
      00024B                       1589 00116$:
      00024B E5 81            [12] 1590 	mov	a,sp
      00024D 24 F7            [12] 1591 	add	a,#0xf7
      00024F F5 81            [12] 1592 	mov	sp,a
      000251 D0 02            [24] 1593 	pop	ar2
      000253 D0 03            [24] 1594 	pop	ar3
      000255                       1595 00102$:
                                   1596 ;	/home/user/contiki/core/net/rime/rudolph1.c:123: if(datalen < RUDOLPH1_DATASIZE) {
      000255 E5 81            [12] 1597 	mov	a,sp
      000257 24 F5            [12] 1598 	add	a,#0xf5
      000259 F8               [12] 1599 	mov	r0,a
      00025A C3               [12] 1600 	clr	c
      00025B E6               [12] 1601 	mov	a,@r0
      00025C 94 40            [12] 1602 	subb	a,#0x40
      00025E 08               [12] 1603 	inc	r0
      00025F E6               [12] 1604 	mov	a,@r0
      000260 64 80            [12] 1605 	xrl	a,#0x80
      000262 94 80            [12] 1606 	subb	a,#0x80
      000264 40 03            [24] 1607 	jc	00117$
      000266 02r03r03         [24] 1608 	ljmp	00104$
      000269                       1609 00117$:
                                   1610 ;	/home/user/contiki/core/net/rime/rudolph1.c:127: c->cb->write_chunk(c, chunk * RUDOLPH1_DATASIZE,
      000269 A8 81            [24] 1611 	mov	r0,sp
      00026B 18               [12] 1612 	dec	r0
      00026C 18               [12] 1613 	dec	r0
      00026D 74 88            [12] 1614 	mov	a,#0x88
      00026F 26               [12] 1615 	add	a,@r0
      000270 FA               [12] 1616 	mov	r2,a
      000271 E4               [12] 1617 	clr	a
      000272 08               [12] 1618 	inc	r0
      000273 36               [12] 1619 	addc	a,@r0
      000274 FB               [12] 1620 	mov	r3,a
      000275 08               [12] 1621 	inc	r0
      000276 86 04            [24] 1622 	mov	ar4,@r0
      000278 8A 82            [24] 1623 	mov	dpl,r2
      00027A 8B 83            [24] 1624 	mov	dph,r3
      00027C 8C F0            [24] 1625 	mov	b,r4
      00027E 12r00r00         [24] 1626 	lcall	__gptrget
      000281 FA               [12] 1627 	mov	r2,a
      000282 A3               [24] 1628 	inc	dptr
      000283 12r00r00         [24] 1629 	lcall	__gptrget
      000286 FB               [12] 1630 	mov	r3,a
      000287 A3               [24] 1631 	inc	dptr
      000288 12r00r00         [24] 1632 	lcall	__gptrget
      00028B FC               [12] 1633 	mov	r4,a
      00028C 8A 82            [24] 1634 	mov	dpl,r2
      00028E 8B 83            [24] 1635 	mov	dph,r3
      000290 8C F0            [24] 1636 	mov	b,r4
      000292 12r00r00         [24] 1637 	lcall	__gptrget
      000295 FA               [12] 1638 	mov	r2,a
      000296 A3               [24] 1639 	inc	dptr
      000297 12r00r00         [24] 1640 	lcall	__gptrget
      00029A FB               [12] 1641 	mov	r3,a
      00029B E5 81            [12] 1642 	mov	a,sp
      00029D 24 FA            [12] 1643 	add	a,#0xfa
      00029F F8               [12] 1644 	mov	r0,a
      0002A0 86 04            [24] 1645 	mov	ar4,@r0
      0002A2 08               [12] 1646 	inc	r0
      0002A3 E6               [12] 1647 	mov	a,@r0
      0002A4 54 03            [12] 1648 	anl	a,#0x03
      0002A6 A2 E0            [12] 1649 	mov	c,acc.0
      0002A8 CC               [12] 1650 	xch	a,r4
      0002A9 13               [12] 1651 	rrc	a
      0002AA CC               [12] 1652 	xch	a,r4
      0002AB 13               [12] 1653 	rrc	a
      0002AC A2 E0            [12] 1654 	mov	c,acc.0
      0002AE CC               [12] 1655 	xch	a,r4
      0002AF 13               [12] 1656 	rrc	a
      0002B0 CC               [12] 1657 	xch	a,r4
      0002B1 13               [12] 1658 	rrc	a
      0002B2 CC               [12] 1659 	xch	a,r4
      0002B3 FF               [12] 1660 	mov	r7,a
      0002B4 C0 03            [24] 1661 	push	ar3
      0002B6 C0 02            [24] 1662 	push	ar2
      0002B8 E5 81            [12] 1663 	mov	a,sp
      0002BA 24 F3            [12] 1664 	add	a,#0xf3
      0002BC F8               [12] 1665 	mov	r0,a
      0002BD E6               [12] 1666 	mov	a,@r0
      0002BE C0 E0            [24] 1667 	push	acc
      0002C0 08               [12] 1668 	inc	r0
      0002C1 E6               [12] 1669 	mov	a,@r0
      0002C2 C0 E0            [24] 1670 	push	acc
      0002C4 E5 81            [12] 1671 	mov	a,sp
      0002C6 24 F3            [12] 1672 	add	a,#0xf3
      0002C8 F8               [12] 1673 	mov	r0,a
      0002C9 E6               [12] 1674 	mov	a,@r0
      0002CA C0 E0            [24] 1675 	push	acc
      0002CC 08               [12] 1676 	inc	r0
      0002CD E6               [12] 1677 	mov	a,@r0
      0002CE C0 E0            [24] 1678 	push	acc
      0002D0 08               [12] 1679 	inc	r0
      0002D1 E6               [12] 1680 	mov	a,@r0
      0002D2 C0 E0            [24] 1681 	push	acc
      0002D4 74 02            [12] 1682 	mov	a,#0x02
      0002D6 C0 E0            [24] 1683 	push	acc
      0002D8 E4               [12] 1684 	clr	a
      0002D9 C0 E0            [24] 1685 	push	acc
      0002DB C0 04            [24] 1686 	push	ar4
      0002DD C0 07            [24] 1687 	push	ar7
      0002DF 12r02rE4         [24] 1688 	lcall	00118$
      0002E2 80 12            [24] 1689 	sjmp	00119$
      0002E4                       1690 00118$:
      0002E4 C0 02            [24] 1691 	push	ar2
      0002E6 C0 03            [24] 1692 	push	ar3
      0002E8 E5 81            [12] 1693 	mov	a,sp
      0002EA 24 EF            [12] 1694 	add	a,#0xef
      0002EC F8               [12] 1695 	mov	r0,a
      0002ED 86 82            [24] 1696 	mov	dpl,@r0
      0002EF 08               [12] 1697 	inc	r0
      0002F0 86 83            [24] 1698 	mov	dph,@r0
      0002F2 08               [12] 1699 	inc	r0
      0002F3 86 F0            [24] 1700 	mov	b,@r0
      0002F5 22               [24] 1701 	ret
      0002F6                       1702 00119$:
      0002F6 E5 81            [12] 1703 	mov	a,sp
      0002F8 24 F7            [12] 1704 	add	a,#0xf7
      0002FA F5 81            [12] 1705 	mov	sp,a
      0002FC D0 02            [24] 1706 	pop	ar2
      0002FE D0 03            [24] 1707 	pop	ar3
      000300 02r03r98         [24] 1708 	ljmp	00106$
      000303                       1709 00104$:
                                   1710 ;	/home/user/contiki/core/net/rime/rudolph1.c:130: c->cb->write_chunk(c, chunk * RUDOLPH1_DATASIZE,
      000303 A8 81            [24] 1711 	mov	r0,sp
      000305 18               [12] 1712 	dec	r0
      000306 18               [12] 1713 	dec	r0
      000307 74 88            [12] 1714 	mov	a,#0x88
      000309 26               [12] 1715 	add	a,@r0
      00030A FD               [12] 1716 	mov	r5,a
      00030B E4               [12] 1717 	clr	a
      00030C 08               [12] 1718 	inc	r0
      00030D 36               [12] 1719 	addc	a,@r0
      00030E FE               [12] 1720 	mov	r6,a
      00030F 08               [12] 1721 	inc	r0
      000310 86 07            [24] 1722 	mov	ar7,@r0
      000312 8D 82            [24] 1723 	mov	dpl,r5
      000314 8E 83            [24] 1724 	mov	dph,r6
      000316 8F F0            [24] 1725 	mov	b,r7
      000318 12r00r00         [24] 1726 	lcall	__gptrget
      00031B FD               [12] 1727 	mov	r5,a
      00031C A3               [24] 1728 	inc	dptr
      00031D 12r00r00         [24] 1729 	lcall	__gptrget
      000320 FE               [12] 1730 	mov	r6,a
      000321 A3               [24] 1731 	inc	dptr
      000322 12r00r00         [24] 1732 	lcall	__gptrget
      000325 FF               [12] 1733 	mov	r7,a
      000326 8D 82            [24] 1734 	mov	dpl,r5
      000328 8E 83            [24] 1735 	mov	dph,r6
      00032A 8F F0            [24] 1736 	mov	b,r7
      00032C 12r00r00         [24] 1737 	lcall	__gptrget
      00032F FD               [12] 1738 	mov	r5,a
      000330 A3               [24] 1739 	inc	dptr
      000331 12r00r00         [24] 1740 	lcall	__gptrget
      000334 FE               [12] 1741 	mov	r6,a
      000335 E5 81            [12] 1742 	mov	a,sp
      000337 24 FA            [12] 1743 	add	a,#0xfa
      000339 F8               [12] 1744 	mov	r0,a
      00033A 86 04            [24] 1745 	mov	ar4,@r0
      00033C 08               [12] 1746 	inc	r0
      00033D E6               [12] 1747 	mov	a,@r0
      00033E 54 03            [12] 1748 	anl	a,#0x03
      000340 A2 E0            [12] 1749 	mov	c,acc.0
      000342 CC               [12] 1750 	xch	a,r4
      000343 13               [12] 1751 	rrc	a
      000344 CC               [12] 1752 	xch	a,r4
      000345 13               [12] 1753 	rrc	a
      000346 A2 E0            [12] 1754 	mov	c,acc.0
      000348 CC               [12] 1755 	xch	a,r4
      000349 13               [12] 1756 	rrc	a
      00034A CC               [12] 1757 	xch	a,r4
      00034B 13               [12] 1758 	rrc	a
      00034C CC               [12] 1759 	xch	a,r4
      00034D FF               [12] 1760 	mov	r7,a
      00034E C0 06            [24] 1761 	push	ar6
      000350 C0 05            [24] 1762 	push	ar5
      000352 E5 81            [12] 1763 	mov	a,sp
      000354 24 F3            [12] 1764 	add	a,#0xf3
      000356 F8               [12] 1765 	mov	r0,a
      000357 E6               [12] 1766 	mov	a,@r0
      000358 C0 E0            [24] 1767 	push	acc
      00035A 08               [12] 1768 	inc	r0
      00035B E6               [12] 1769 	mov	a,@r0
      00035C C0 E0            [24] 1770 	push	acc
      00035E E5 81            [12] 1771 	mov	a,sp
      000360 24 F3            [12] 1772 	add	a,#0xf3
      000362 F8               [12] 1773 	mov	r0,a
      000363 E6               [12] 1774 	mov	a,@r0
      000364 C0 E0            [24] 1775 	push	acc
      000366 08               [12] 1776 	inc	r0
      000367 E6               [12] 1777 	mov	a,@r0
      000368 C0 E0            [24] 1778 	push	acc
      00036A 08               [12] 1779 	inc	r0
      00036B E6               [12] 1780 	mov	a,@r0
      00036C C0 E0            [24] 1781 	push	acc
      00036E E4               [12] 1782 	clr	a
      00036F C0 E0            [24] 1783 	push	acc
      000371 C0 E0            [24] 1784 	push	acc
      000373 C0 04            [24] 1785 	push	ar4
      000375 C0 07            [24] 1786 	push	ar7
      000377 12r03r7C         [24] 1787 	lcall	00120$
      00037A 80 12            [24] 1788 	sjmp	00121$
      00037C                       1789 00120$:
      00037C C0 05            [24] 1790 	push	ar5
      00037E C0 06            [24] 1791 	push	ar6
      000380 E5 81            [12] 1792 	mov	a,sp
      000382 24 EF            [12] 1793 	add	a,#0xef
      000384 F8               [12] 1794 	mov	r0,a
      000385 86 82            [24] 1795 	mov	dpl,@r0
      000387 08               [12] 1796 	inc	r0
      000388 86 83            [24] 1797 	mov	dph,@r0
      00038A 08               [12] 1798 	inc	r0
      00038B 86 F0            [24] 1799 	mov	b,@r0
      00038D 22               [24] 1800 	ret
      00038E                       1801 00121$:
      00038E E5 81            [12] 1802 	mov	a,sp
      000390 24 F7            [12] 1803 	add	a,#0xf7
      000392 F5 81            [12] 1804 	mov	sp,a
      000394 D0 05            [24] 1805 	pop	ar5
      000396 D0 06            [24] 1806 	pop	ar6
      000398                       1807 00106$:
      000398 15 81            [12] 1808 	dec	sp
      00039A 15 81            [12] 1809 	dec	sp
      00039C 15 81            [12] 1810 	dec	sp
      00039E 22               [24] 1811 	ret
                                   1812 ;------------------------------------------------------------
                                   1813 ;Allocation info for local variables in function 'send_nack'
                                   1814 ;------------------------------------------------------------
                                   1815 ;c                         Allocated to stack - sp -5
                                   1816 ;hdr                       Allocated to stack - sp -2
                                   1817 ;------------------------------------------------------------
                                   1818 ;	/home/user/contiki/core/net/rime/rudolph1.c:136: send_nack(struct rudolph1_conn *c)
                                   1819 ;	-----------------------------------------
                                   1820 ;	 function send_nack
                                   1821 ;	-----------------------------------------
      00039F                       1822 _send_nack:
      00039F C0 82            [24] 1823 	push	dpl
      0003A1 C0 83            [24] 1824 	push	dph
      0003A3 C0 F0            [24] 1825 	push	b
      0003A5 05 81            [12] 1826 	inc	sp
      0003A7 05 81            [12] 1827 	inc	sp
      0003A9 05 81            [12] 1828 	inc	sp
                                   1829 ;	/home/user/contiki/core/net/rime/rudolph1.c:139: packetbuf_clear();
      0003AB 12r00r00         [24] 1830 	lcall	_packetbuf_clear
                                   1831 ;	/home/user/contiki/core/net/rime/rudolph1.c:140: packetbuf_hdralloc(sizeof(struct rudolph1_hdr));
      0003AE 90 00 04         [24] 1832 	mov	dptr,#0x0004
      0003B1 12r00r00         [24] 1833 	lcall	_packetbuf_hdralloc
                                   1834 ;	/home/user/contiki/core/net/rime/rudolph1.c:141: hdr = packetbuf_hdrptr();
      0003B4 12r00r00         [24] 1835 	lcall	_packetbuf_hdrptr
      0003B7 AA 82            [24] 1836 	mov	r2,dpl
      0003B9 AB 83            [24] 1837 	mov	r3,dph
      0003BB AC F0            [24] 1838 	mov	r4,b
      0003BD A8 81            [24] 1839 	mov	r0,sp
      0003BF 18               [12] 1840 	dec	r0
      0003C0 18               [12] 1841 	dec	r0
      0003C1 A6 02            [24] 1842 	mov	@r0,ar2
      0003C3 08               [12] 1843 	inc	r0
      0003C4 A6 03            [24] 1844 	mov	@r0,ar3
      0003C6 08               [12] 1845 	inc	r0
      0003C7 A6 04            [24] 1846 	mov	@r0,ar4
                                   1847 ;	/home/user/contiki/core/net/rime/rudolph1.c:143: hdr->type = TYPE_NACK;
      0003C9 A8 81            [24] 1848 	mov	r0,sp
      0003CB 18               [12] 1849 	dec	r0
      0003CC 18               [12] 1850 	dec	r0
      0003CD 86 82            [24] 1851 	mov	dpl,@r0
      0003CF 08               [12] 1852 	inc	r0
      0003D0 86 83            [24] 1853 	mov	dph,@r0
      0003D2 08               [12] 1854 	inc	r0
      0003D3 86 F0            [24] 1855 	mov	b,@r0
      0003D5 74 01            [12] 1856 	mov	a,#0x01
      0003D7 12r00r00         [24] 1857 	lcall	__gptrput
                                   1858 ;	/home/user/contiki/core/net/rime/rudolph1.c:144: hdr->version = c->version;
      0003DA A8 81            [24] 1859 	mov	r0,sp
      0003DC 18               [12] 1860 	dec	r0
      0003DD 18               [12] 1861 	dec	r0
      0003DE 74 01            [12] 1862 	mov	a,#0x01
      0003E0 26               [12] 1863 	add	a,@r0
      0003E1 FD               [12] 1864 	mov	r5,a
      0003E2 E4               [12] 1865 	clr	a
      0003E3 08               [12] 1866 	inc	r0
      0003E4 36               [12] 1867 	addc	a,@r0
      0003E5 FE               [12] 1868 	mov	r6,a
      0003E6 08               [12] 1869 	inc	r0
      0003E7 86 07            [24] 1870 	mov	ar7,@r0
      0003E9 E5 81            [12] 1871 	mov	a,sp
      0003EB 24 FB            [12] 1872 	add	a,#0xfb
      0003ED F8               [12] 1873 	mov	r0,a
      0003EE 74 A6            [12] 1874 	mov	a,#0xA6
      0003F0 26               [12] 1875 	add	a,@r0
      0003F1 FA               [12] 1876 	mov	r2,a
      0003F2 E4               [12] 1877 	clr	a
      0003F3 08               [12] 1878 	inc	r0
      0003F4 36               [12] 1879 	addc	a,@r0
      0003F5 FB               [12] 1880 	mov	r3,a
      0003F6 08               [12] 1881 	inc	r0
      0003F7 86 04            [24] 1882 	mov	ar4,@r0
      0003F9 8A 82            [24] 1883 	mov	dpl,r2
      0003FB 8B 83            [24] 1884 	mov	dph,r3
      0003FD 8C F0            [24] 1885 	mov	b,r4
      0003FF 12r00r00         [24] 1886 	lcall	__gptrget
      000402 8D 82            [24] 1887 	mov	dpl,r5
      000404 8E 83            [24] 1888 	mov	dph,r6
      000406 8F F0            [24] 1889 	mov	b,r7
      000408 12r00r00         [24] 1890 	lcall	__gptrput
                                   1891 ;	/home/user/contiki/core/net/rime/rudolph1.c:145: hdr->chunk = c->chunk;
      00040B A8 81            [24] 1892 	mov	r0,sp
      00040D 18               [12] 1893 	dec	r0
      00040E 18               [12] 1894 	dec	r0
      00040F 74 02            [12] 1895 	mov	a,#0x02
      000411 26               [12] 1896 	add	a,@r0
      000412 FD               [12] 1897 	mov	r5,a
      000413 E4               [12] 1898 	clr	a
      000414 08               [12] 1899 	inc	r0
      000415 36               [12] 1900 	addc	a,@r0
      000416 FE               [12] 1901 	mov	r6,a
      000417 08               [12] 1902 	inc	r0
      000418 86 07            [24] 1903 	mov	ar7,@r0
      00041A E5 81            [12] 1904 	mov	a,sp
      00041C 24 FB            [12] 1905 	add	a,#0xfb
      00041E F8               [12] 1906 	mov	r0,a
      00041F 74 A2            [12] 1907 	mov	a,#0xA2
      000421 26               [12] 1908 	add	a,@r0
      000422 FA               [12] 1909 	mov	r2,a
      000423 E4               [12] 1910 	clr	a
      000424 08               [12] 1911 	inc	r0
      000425 36               [12] 1912 	addc	a,@r0
      000426 FB               [12] 1913 	mov	r3,a
      000427 08               [12] 1914 	inc	r0
      000428 86 04            [24] 1915 	mov	ar4,@r0
      00042A 8A 82            [24] 1916 	mov	dpl,r2
      00042C 8B 83            [24] 1917 	mov	dph,r3
      00042E 8C F0            [24] 1918 	mov	b,r4
      000430 12r00r00         [24] 1919 	lcall	__gptrget
      000433 FA               [12] 1920 	mov	r2,a
      000434 A3               [24] 1921 	inc	dptr
      000435 12r00r00         [24] 1922 	lcall	__gptrget
      000438 FB               [12] 1923 	mov	r3,a
      000439 8D 82            [24] 1924 	mov	dpl,r5
      00043B 8E 83            [24] 1925 	mov	dph,r6
      00043D 8F F0            [24] 1926 	mov	b,r7
      00043F EA               [12] 1927 	mov	a,r2
      000440 12r00r00         [24] 1928 	lcall	__gptrput
      000443 A3               [24] 1929 	inc	dptr
      000444 EB               [12] 1930 	mov	a,r3
      000445 12r00r00         [24] 1931 	lcall	__gptrput
                                   1932 ;	/home/user/contiki/core/net/rime/rudolph1.c:150: ipolite_send(&c->ipolite, NACK_TIMEOUT, sizeof(struct rudolph1_hdr));
      000448 E5 81            [12] 1933 	mov	a,sp
      00044A 24 FB            [12] 1934 	add	a,#0xfb
      00044C F8               [12] 1935 	mov	r0,a
      00044D 74 5B            [12] 1936 	mov	a,#0x5B
      00044F 26               [12] 1937 	add	a,@r0
      000450 FD               [12] 1938 	mov	r5,a
      000451 E4               [12] 1939 	clr	a
      000452 08               [12] 1940 	inc	r0
      000453 36               [12] 1941 	addc	a,@r0
      000454 FE               [12] 1942 	mov	r6,a
      000455 08               [12] 1943 	inc	r0
      000456 86 07            [24] 1944 	mov	ar7,@r0
      000458 74 04            [12] 1945 	mov	a,#0x04
      00045A C0 E0            [24] 1946 	push	acc
      00045C 74 20            [12] 1947 	mov	a,#0x20
      00045E C0 E0            [24] 1948 	push	acc
      000460 E4               [12] 1949 	clr	a
      000461 C0 E0            [24] 1950 	push	acc
      000463 8D 82            [24] 1951 	mov	dpl,r5
      000465 8E 83            [24] 1952 	mov	dph,r6
      000467 8F F0            [24] 1953 	mov	b,r7
      000469 12r00r00         [24] 1954 	lcall	_ipolite_send
      00046C 15 81            [12] 1955 	dec	sp
      00046E 15 81            [12] 1956 	dec	sp
      000470 15 81            [12] 1957 	dec	sp
      000472 E5 81            [12] 1958 	mov	a,sp
      000474 24 FA            [12] 1959 	add	a,#0xFA
      000476 F5 81            [12] 1960 	mov	sp,a
      000478 22               [24] 1961 	ret
                                   1962 ;------------------------------------------------------------
                                   1963 ;Allocation info for local variables in function 'handle_data'
                                   1964 ;------------------------------------------------------------
                                   1965 ;p                         Allocated to stack - sp -19
                                   1966 ;c                         Allocated to stack - sp -14
                                   1967 ;sloc0                     Allocated to stack - sp -11
                                   1968 ;sloc1                     Allocated to stack - sp -10
                                   1969 ;sloc2                     Allocated to stack - sp -7
                                   1970 ;sloc3                     Allocated to stack - sp -4
                                   1971 ;sloc4                     Allocated to stack - sp -2
                                   1972 ;------------------------------------------------------------
                                   1973 ;	/home/user/contiki/core/net/rime/rudolph1.c:154: handle_data(struct rudolph1_conn *c, struct rudolph1_datapacket *p)
                                   1974 ;	-----------------------------------------
                                   1975 ;	 function handle_data
                                   1976 ;	-----------------------------------------
      000479                       1977 _handle_data:
      000479 C0 82            [24] 1978 	push	dpl
      00047B C0 83            [24] 1979 	push	dph
      00047D C0 F0            [24] 1980 	push	b
      00047F E5 81            [12] 1981 	mov	a,sp
      000481 24 0C            [12] 1982 	add	a,#0x0C
                                   1983 ;	/home/user/contiki/core/net/rime/rudolph1.c:156: if(LT(c->version, p->h.version)) {
      000483 F5 81            [12] 1984 	mov	sp,a
      000485 24 F2            [12] 1985 	add	a,#0xf2
      000487 F8               [12] 1986 	mov	r0,a
      000488 74 A6            [12] 1987 	mov	a,#0xA6
      00048A 26               [12] 1988 	add	a,@r0
      00048B FA               [12] 1989 	mov	r2,a
      00048C E4               [12] 1990 	clr	a
      00048D 08               [12] 1991 	inc	r0
      00048E 36               [12] 1992 	addc	a,@r0
      00048F FB               [12] 1993 	mov	r3,a
      000490 08               [12] 1994 	inc	r0
      000491 86 04            [24] 1995 	mov	ar4,@r0
      000493 8A 82            [24] 1996 	mov	dpl,r2
      000495 8B 83            [24] 1997 	mov	dph,r3
      000497 8C F0            [24] 1998 	mov	b,r4
      000499 E5 81            [12] 1999 	mov	a,sp
      00049B 24 F5            [12] 2000 	add	a,#0xf5
      00049D F8               [12] 2001 	mov	r0,a
      00049E 12r00r00         [24] 2002 	lcall	__gptrget
      0004A1 F6               [12] 2003 	mov	@r0,a
      0004A2 E5 81            [12] 2004 	mov	a,sp
      0004A4 24 ED            [12] 2005 	add	a,#0xed
      0004A6 F8               [12] 2006 	mov	r0,a
      0004A7 E5 81            [12] 2007 	mov	a,sp
      0004A9 24 F6            [12] 2008 	add	a,#0xf6
      0004AB F9               [12] 2009 	mov	r1,a
      0004AC E6               [12] 2010 	mov	a,@r0
      0004AD F7               [12] 2011 	mov	@r1,a
      0004AE 08               [12] 2012 	inc	r0
      0004AF 09               [12] 2013 	inc	r1
      0004B0 E6               [12] 2014 	mov	a,@r0
      0004B1 F7               [12] 2015 	mov	@r1,a
      0004B2 08               [12] 2016 	inc	r0
      0004B3 09               [12] 2017 	inc	r1
      0004B4 E6               [12] 2018 	mov	a,@r0
      0004B5 F7               [12] 2019 	mov	@r1,a
      0004B6 E5 81            [12] 2020 	mov	a,sp
      0004B8 24 F6            [12] 2021 	add	a,#0xf6
      0004BA F8               [12] 2022 	mov	r0,a
      0004BB 74 01            [12] 2023 	mov	a,#0x01
      0004BD 26               [12] 2024 	add	a,@r0
      0004BE FD               [12] 2025 	mov	r5,a
      0004BF E4               [12] 2026 	clr	a
      0004C0 08               [12] 2027 	inc	r0
      0004C1 36               [12] 2028 	addc	a,@r0
      0004C2 FE               [12] 2029 	mov	r6,a
      0004C3 08               [12] 2030 	inc	r0
      0004C4 86 07            [24] 2031 	mov	ar7,@r0
      0004C6 8D 82            [24] 2032 	mov	dpl,r5
      0004C8 8E 83            [24] 2033 	mov	dph,r6
      0004CA 8F F0            [24] 2034 	mov	b,r7
      0004CC 12r00r00         [24] 2035 	lcall	__gptrget
      0004CF FF               [12] 2036 	mov	r7,a
      0004D0 E5 81            [12] 2037 	mov	a,sp
      0004D2 24 F5            [12] 2038 	add	a,#0xf5
      0004D4 F8               [12] 2039 	mov	r0,a
      0004D5 E6               [12] 2040 	mov	a,@r0
      0004D6 C3               [12] 2041 	clr	c
      0004D7 9F               [12] 2042 	subb	a,r7
      0004D8 FE               [12] 2043 	mov	r6,a
      0004D9 20 E7 03         [24] 2044 	jb	acc.7,00142$
      0004DC 02r05rCE         [24] 2045 	ljmp	00117$
      0004DF                       2046 00142$:
                                   2047 ;	/home/user/contiki/core/net/rime/rudolph1.c:160: c->version = p->h.version;
      0004DF 8A 82            [24] 2048 	mov	dpl,r2
      0004E1 8B 83            [24] 2049 	mov	dph,r3
      0004E3 8C F0            [24] 2050 	mov	b,r4
      0004E5 EF               [12] 2051 	mov	a,r7
      0004E6 12r00r00         [24] 2052 	lcall	__gptrput
                                   2053 ;	/home/user/contiki/core/net/rime/rudolph1.c:161: c->highest_chunk_heard = c->chunk = 0;
      0004E9 E5 81            [12] 2054 	mov	a,sp
      0004EB 24 F2            [12] 2055 	add	a,#0xf2
      0004ED F8               [12] 2056 	mov	r0,a
      0004EE 74 A4            [12] 2057 	mov	a,#0xA4
      0004F0 26               [12] 2058 	add	a,@r0
      0004F1 FF               [12] 2059 	mov	r7,a
      0004F2 E4               [12] 2060 	clr	a
      0004F3 08               [12] 2061 	inc	r0
      0004F4 36               [12] 2062 	addc	a,@r0
      0004F5 FD               [12] 2063 	mov	r5,a
      0004F6 08               [12] 2064 	inc	r0
      0004F7 86 04            [24] 2065 	mov	ar4,@r0
      0004F9 E5 81            [12] 2066 	mov	a,sp
      0004FB 24 F2            [12] 2067 	add	a,#0xf2
      0004FD F8               [12] 2068 	mov	r0,a
      0004FE 74 A2            [12] 2069 	mov	a,#0xA2
      000500 26               [12] 2070 	add	a,@r0
      000501 FA               [12] 2071 	mov	r2,a
      000502 E4               [12] 2072 	clr	a
      000503 08               [12] 2073 	inc	r0
      000504 36               [12] 2074 	addc	a,@r0
      000505 FB               [12] 2075 	mov	r3,a
      000506 08               [12] 2076 	inc	r0
      000507 86 06            [24] 2077 	mov	ar6,@r0
      000509 8A 82            [24] 2078 	mov	dpl,r2
      00050B 8B 83            [24] 2079 	mov	dph,r3
      00050D 8E F0            [24] 2080 	mov	b,r6
      00050F E4               [12] 2081 	clr	a
      000510 12r00r00         [24] 2082 	lcall	__gptrput
      000513 A3               [24] 2083 	inc	dptr
      000514 E4               [12] 2084 	clr	a
      000515 12r00r00         [24] 2085 	lcall	__gptrput
      000518 8F 82            [24] 2086 	mov	dpl,r7
      00051A 8D 83            [24] 2087 	mov	dph,r5
      00051C 8C F0            [24] 2088 	mov	b,r4
      00051E E4               [12] 2089 	clr	a
      00051F 12r00r00         [24] 2090 	lcall	__gptrput
      000522 A3               [24] 2091 	inc	dptr
      000523 E4               [12] 2092 	clr	a
      000524 12r00r00         [24] 2093 	lcall	__gptrput
                                   2094 ;	/home/user/contiki/core/net/rime/rudolph1.c:162: if(p->h.chunk != 0) {
      000527 E5 81            [12] 2095 	mov	a,sp
      000529 24 F6            [12] 2096 	add	a,#0xf6
      00052B F8               [12] 2097 	mov	r0,a
      00052C 74 02            [12] 2098 	mov	a,#0x02
      00052E 26               [12] 2099 	add	a,@r0
      00052F FC               [12] 2100 	mov	r4,a
      000530 E4               [12] 2101 	clr	a
      000531 08               [12] 2102 	inc	r0
      000532 36               [12] 2103 	addc	a,@r0
      000533 FD               [12] 2104 	mov	r5,a
      000534 08               [12] 2105 	inc	r0
      000535 86 06            [24] 2106 	mov	ar6,@r0
      000537 8C 82            [24] 2107 	mov	dpl,r4
      000539 8D 83            [24] 2108 	mov	dph,r5
      00053B 8E F0            [24] 2109 	mov	b,r6
      00053D 12r00r00         [24] 2110 	lcall	__gptrget
      000540 FC               [12] 2111 	mov	r4,a
      000541 A3               [24] 2112 	inc	dptr
      000542 12r00r00         [24] 2113 	lcall	__gptrget
      000545 FD               [12] 2114 	mov	r5,a
      000546 4C               [12] 2115 	orl	a,r4
      000547 60 13            [24] 2116 	jz	00102$
                                   2117 ;	/home/user/contiki/core/net/rime/rudolph1.c:163: send_nack(c);
      000549 E5 81            [12] 2118 	mov	a,sp
      00054B 24 F2            [12] 2119 	add	a,#0xf2
      00054D F8               [12] 2120 	mov	r0,a
      00054E 86 82            [24] 2121 	mov	dpl,@r0
      000550 08               [12] 2122 	inc	r0
      000551 86 83            [24] 2123 	mov	dph,@r0
      000553 08               [12] 2124 	inc	r0
      000554 86 F0            [24] 2125 	mov	b,@r0
      000556 12r03r9F         [24] 2126 	lcall	_send_nack
      000559 02r07rFE         [24] 2127 	ljmp	00119$
      00055C                       2128 00102$:
                                   2129 ;	/home/user/contiki/core/net/rime/rudolph1.c:165: write_data(c, 0, p->data, p->datalen);
      00055C E5 81            [12] 2130 	mov	a,sp
      00055E 24 F6            [12] 2131 	add	a,#0xf6
      000560 F8               [12] 2132 	mov	r0,a
      000561 74 04            [12] 2133 	mov	a,#0x04
      000563 26               [12] 2134 	add	a,@r0
      000564 FC               [12] 2135 	mov	r4,a
      000565 E4               [12] 2136 	clr	a
      000566 08               [12] 2137 	inc	r0
      000567 36               [12] 2138 	addc	a,@r0
      000568 FD               [12] 2139 	mov	r5,a
      000569 08               [12] 2140 	inc	r0
      00056A 86 06            [24] 2141 	mov	ar6,@r0
      00056C 8C 82            [24] 2142 	mov	dpl,r4
      00056E 8D 83            [24] 2143 	mov	dph,r5
      000570 8E F0            [24] 2144 	mov	b,r6
      000572 12r00r00         [24] 2145 	lcall	__gptrget
      000575 FC               [12] 2146 	mov	r4,a
      000576 7E 00            [12] 2147 	mov	r6,#0x00
      000578 E5 81            [12] 2148 	mov	a,sp
      00057A 24 F6            [12] 2149 	add	a,#0xf6
      00057C F8               [12] 2150 	mov	r0,a
      00057D 74 05            [12] 2151 	mov	a,#0x05
      00057F 26               [12] 2152 	add	a,@r0
      000580 FA               [12] 2153 	mov	r2,a
      000581 E4               [12] 2154 	clr	a
      000582 08               [12] 2155 	inc	r0
      000583 36               [12] 2156 	addc	a,@r0
      000584 FB               [12] 2157 	mov	r3,a
      000585 08               [12] 2158 	inc	r0
      000586 86 05            [24] 2159 	mov	ar5,@r0
      000588 C0 04            [24] 2160 	push	ar4
      00058A C0 06            [24] 2161 	push	ar6
      00058C C0 02            [24] 2162 	push	ar2
      00058E C0 03            [24] 2163 	push	ar3
      000590 C0 05            [24] 2164 	push	ar5
      000592 E4               [12] 2165 	clr	a
      000593 C0 E0            [24] 2166 	push	acc
      000595 C0 E0            [24] 2167 	push	acc
      000597 E5 81            [12] 2168 	mov	a,sp
      000599 24 EB            [12] 2169 	add	a,#0xeb
      00059B F8               [12] 2170 	mov	r0,a
      00059C 86 82            [24] 2171 	mov	dpl,@r0
      00059E 08               [12] 2172 	inc	r0
      00059F 86 83            [24] 2173 	mov	dph,@r0
      0005A1 08               [12] 2174 	inc	r0
      0005A2 86 F0            [24] 2175 	mov	b,@r0
      0005A4 12r01rCD         [24] 2176 	lcall	_write_data
      0005A7 E5 81            [12] 2177 	mov	a,sp
      0005A9 24 F9            [12] 2178 	add	a,#0xf9
                                   2179 ;	/home/user/contiki/core/net/rime/rudolph1.c:166: c->chunk = 1; /* Next chunk is 1. */
      0005AB F5 81            [12] 2180 	mov	sp,a
      0005AD 24 F2            [12] 2181 	add	a,#0xf2
      0005AF F8               [12] 2182 	mov	r0,a
      0005B0 74 A2            [12] 2183 	mov	a,#0xA2
      0005B2 26               [12] 2184 	add	a,@r0
      0005B3 FC               [12] 2185 	mov	r4,a
      0005B4 E4               [12] 2186 	clr	a
      0005B5 08               [12] 2187 	inc	r0
      0005B6 36               [12] 2188 	addc	a,@r0
      0005B7 FD               [12] 2189 	mov	r5,a
      0005B8 08               [12] 2190 	inc	r0
      0005B9 86 06            [24] 2191 	mov	ar6,@r0
      0005BB 8C 82            [24] 2192 	mov	dpl,r4
      0005BD 8D 83            [24] 2193 	mov	dph,r5
      0005BF 8E F0            [24] 2194 	mov	b,r6
      0005C1 74 01            [12] 2195 	mov	a,#0x01
      0005C3 12r00r00         [24] 2196 	lcall	__gptrput
      0005C6 A3               [24] 2197 	inc	dptr
      0005C7 E4               [12] 2198 	clr	a
      0005C8 12r00r00         [24] 2199 	lcall	__gptrput
      0005CB 02r07rFE         [24] 2200 	ljmp	00119$
      0005CE                       2201 00117$:
                                   2202 ;	/home/user/contiki/core/net/rime/rudolph1.c:169: } else if(p->h.version == c->version) {
      0005CE E5 81            [12] 2203 	mov	a,sp
      0005D0 24 F5            [12] 2204 	add	a,#0xf5
      0005D2 F8               [12] 2205 	mov	r0,a
      0005D3 E6               [12] 2206 	mov	a,@r0
      0005D4 B5 07 02         [24] 2207 	cjne	a,ar7,00144$
      0005D7 80 03            [24] 2208 	sjmp	00145$
      0005D9                       2209 00144$:
      0005D9 02r07rFE         [24] 2210 	ljmp	00119$
      0005DC                       2211 00145$:
                                   2212 ;	/home/user/contiki/core/net/rime/rudolph1.c:174: if(p->h.chunk == c->chunk) {
      0005DC E5 81            [12] 2213 	mov	a,sp
      0005DE 24 F6            [12] 2214 	add	a,#0xf6
      0005E0 F8               [12] 2215 	mov	r0,a
      0005E1 74 02            [12] 2216 	mov	a,#0x02
      0005E3 26               [12] 2217 	add	a,@r0
      0005E4 FD               [12] 2218 	mov	r5,a
      0005E5 E4               [12] 2219 	clr	a
      0005E6 08               [12] 2220 	inc	r0
      0005E7 36               [12] 2221 	addc	a,@r0
      0005E8 FE               [12] 2222 	mov	r6,a
      0005E9 08               [12] 2223 	inc	r0
      0005EA 86 07            [24] 2224 	mov	ar7,@r0
      0005EC 8D 82            [24] 2225 	mov	dpl,r5
      0005EE 8E 83            [24] 2226 	mov	dph,r6
      0005F0 8F F0            [24] 2227 	mov	b,r7
      0005F2 E5 81            [12] 2228 	mov	a,sp
      0005F4 24 F9            [12] 2229 	add	a,#0xf9
      0005F6 F8               [12] 2230 	mov	r0,a
      0005F7 12r00r00         [24] 2231 	lcall	__gptrget
      0005FA F6               [12] 2232 	mov	@r0,a
      0005FB A3               [24] 2233 	inc	dptr
      0005FC 12r00r00         [24] 2234 	lcall	__gptrget
      0005FF 08               [12] 2235 	inc	r0
      000600 F6               [12] 2236 	mov	@r0,a
      000601 E5 81            [12] 2237 	mov	a,sp
      000603 24 F2            [12] 2238 	add	a,#0xf2
      000605 F8               [12] 2239 	mov	r0,a
      000606 74 A2            [12] 2240 	mov	a,#0xA2
      000608 26               [12] 2241 	add	a,@r0
      000609 FA               [12] 2242 	mov	r2,a
      00060A E4               [12] 2243 	clr	a
      00060B 08               [12] 2244 	inc	r0
      00060C 36               [12] 2245 	addc	a,@r0
      00060D FB               [12] 2246 	mov	r3,a
      00060E 08               [12] 2247 	inc	r0
      00060F 86 04            [24] 2248 	mov	ar4,@r0
      000611 8A 82            [24] 2249 	mov	dpl,r2
      000613 8B 83            [24] 2250 	mov	dph,r3
      000615 8C F0            [24] 2251 	mov	b,r4
      000617 12r00r00         [24] 2252 	lcall	__gptrget
      00061A FB               [12] 2253 	mov	r3,a
      00061B A3               [24] 2254 	inc	dptr
      00061C 12r00r00         [24] 2255 	lcall	__gptrget
      00061F FC               [12] 2256 	mov	r4,a
      000620 E5 81            [12] 2257 	mov	a,sp
      000622 24 F9            [12] 2258 	add	a,#0xf9
      000624 F8               [12] 2259 	mov	r0,a
      000625 E6               [12] 2260 	mov	a,@r0
      000626 B5 03 07         [24] 2261 	cjne	a,ar3,00146$
      000629 08               [12] 2262 	inc	r0
      00062A E6               [12] 2263 	mov	a,@r0
      00062B B5 04 02         [24] 2264 	cjne	a,ar4,00146$
      00062E 80 03            [24] 2265 	sjmp	00147$
      000630                       2266 00146$:
      000630 02r07r56         [24] 2267 	ljmp	00110$
      000633                       2268 00147$:
                                   2269 ;	/home/user/contiki/core/net/rime/rudolph1.c:178: write_data(c, p->h.chunk, p->data, p->datalen);
      000633 C0 05            [24] 2270 	push	ar5
      000635 C0 06            [24] 2271 	push	ar6
      000637 C0 07            [24] 2272 	push	ar7
      000639 E5 81            [12] 2273 	mov	a,sp
      00063B 24 F3            [12] 2274 	add	a,#0xf3
      00063D F8               [12] 2275 	mov	r0,a
      00063E 74 04            [12] 2276 	mov	a,#0x04
      000640 26               [12] 2277 	add	a,@r0
      000641 FA               [12] 2278 	mov	r2,a
      000642 E4               [12] 2279 	clr	a
      000643 08               [12] 2280 	inc	r0
      000644 36               [12] 2281 	addc	a,@r0
      000645 FE               [12] 2282 	mov	r6,a
      000646 08               [12] 2283 	inc	r0
      000647 86 07            [24] 2284 	mov	ar7,@r0
      000649 8A 82            [24] 2285 	mov	dpl,r2
      00064B 8E 83            [24] 2286 	mov	dph,r6
      00064D 8F F0            [24] 2287 	mov	b,r7
      00064F 12r00r00         [24] 2288 	lcall	__gptrget
      000652 FA               [12] 2289 	mov	r2,a
      000653 7C 00            [12] 2290 	mov	r4,#0x00
      000655 E5 81            [12] 2291 	mov	a,sp
      000657 24 F3            [12] 2292 	add	a,#0xf3
      000659 F8               [12] 2293 	mov	r0,a
      00065A 74 05            [12] 2294 	mov	a,#0x05
      00065C 26               [12] 2295 	add	a,@r0
      00065D FD               [12] 2296 	mov	r5,a
      00065E E4               [12] 2297 	clr	a
      00065F 08               [12] 2298 	inc	r0
      000660 36               [12] 2299 	addc	a,@r0
      000661 FE               [12] 2300 	mov	r6,a
      000662 08               [12] 2301 	inc	r0
      000663 86 07            [24] 2302 	mov	ar7,@r0
      000665 C0 07            [24] 2303 	push	ar7
      000667 C0 06            [24] 2304 	push	ar6
      000669 C0 05            [24] 2305 	push	ar5
      00066B C0 02            [24] 2306 	push	ar2
      00066D C0 04            [24] 2307 	push	ar4
      00066F C0 05            [24] 2308 	push	ar5
      000671 C0 06            [24] 2309 	push	ar6
      000673 C0 07            [24] 2310 	push	ar7
      000675 E5 81            [12] 2311 	mov	a,sp
      000677 24 EE            [12] 2312 	add	a,#0xee
      000679 F8               [12] 2313 	mov	r0,a
      00067A E6               [12] 2314 	mov	a,@r0
      00067B C0 E0            [24] 2315 	push	acc
      00067D 08               [12] 2316 	inc	r0
      00067E E6               [12] 2317 	mov	a,@r0
      00067F C0 E0            [24] 2318 	push	acc
      000681 E5 81            [12] 2319 	mov	a,sp
      000683 24 E5            [12] 2320 	add	a,#0xe5
      000685 F8               [12] 2321 	mov	r0,a
      000686 86 82            [24] 2322 	mov	dpl,@r0
      000688 08               [12] 2323 	inc	r0
      000689 86 83            [24] 2324 	mov	dph,@r0
      00068B 08               [12] 2325 	inc	r0
      00068C 86 F0            [24] 2326 	mov	b,@r0
      00068E 12r01rCD         [24] 2327 	lcall	_write_data
      000691 E5 81            [12] 2328 	mov	a,sp
      000693 24 F9            [12] 2329 	add	a,#0xf9
      000695 F5 81            [12] 2330 	mov	sp,a
      000697 D0 05            [24] 2331 	pop	ar5
      000699 D0 06            [24] 2332 	pop	ar6
      00069B D0 07            [24] 2333 	pop	ar7
                                   2334 ;	/home/user/contiki/core/net/rime/rudolph1.c:179: if(c->highest_chunk_heard < c->chunk) {
      00069D E5 81            [12] 2335 	mov	a,sp
      00069F 24 EF            [12] 2336 	add	a,#0xef
      0006A1 F8               [12] 2337 	mov	r0,a
      0006A2 74 A4            [12] 2338 	mov	a,#0xA4
      0006A4 26               [12] 2339 	add	a,@r0
      0006A5 FC               [12] 2340 	mov	r4,a
      0006A6 E4               [12] 2341 	clr	a
      0006A7 08               [12] 2342 	inc	r0
      0006A8 36               [12] 2343 	addc	a,@r0
      0006A9 FB               [12] 2344 	mov	r3,a
      0006AA 08               [12] 2345 	inc	r0
      0006AB 86 02            [24] 2346 	mov	ar2,@r0
      0006AD 8C 82            [24] 2347 	mov	dpl,r4
      0006AF 8B 83            [24] 2348 	mov	dph,r3
      0006B1 8A F0            [24] 2349 	mov	b,r2
      0006B3 12r00r00         [24] 2350 	lcall	__gptrget
      0006B6 FE               [12] 2351 	mov	r6,a
      0006B7 A3               [24] 2352 	inc	dptr
      0006B8 12r00r00         [24] 2353 	lcall	__gptrget
      0006BB FF               [12] 2354 	mov	r7,a
      0006BC E5 81            [12] 2355 	mov	a,sp
      0006BE 24 EF            [12] 2356 	add	a,#0xef
      0006C0 F8               [12] 2357 	mov	r0,a
      0006C1 E5 81            [12] 2358 	mov	a,sp
      0006C3 24 FB            [12] 2359 	add	a,#0xfb
      0006C5 F9               [12] 2360 	mov	r1,a
      0006C6 74 A2            [12] 2361 	mov	a,#0xA2
      0006C8 26               [12] 2362 	add	a,@r0
      0006C9 F7               [12] 2363 	mov	@r1,a
      0006CA E4               [12] 2364 	clr	a
      0006CB 08               [12] 2365 	inc	r0
      0006CC 36               [12] 2366 	addc	a,@r0
      0006CD 09               [12] 2367 	inc	r1
      0006CE F7               [12] 2368 	mov	@r1,a
      0006CF 08               [12] 2369 	inc	r0
      0006D0 09               [12] 2370 	inc	r1
      0006D1 E6               [12] 2371 	mov	a,@r0
      0006D2 F7               [12] 2372 	mov	@r1,a
      0006D3 E5 81            [12] 2373 	mov	a,sp
      0006D5 24 FB            [12] 2374 	add	a,#0xfb
      0006D7 F8               [12] 2375 	mov	r0,a
      0006D8 86 82            [24] 2376 	mov	dpl,@r0
      0006DA 08               [12] 2377 	inc	r0
      0006DB 86 83            [24] 2378 	mov	dph,@r0
      0006DD 08               [12] 2379 	inc	r0
      0006DE 86 F0            [24] 2380 	mov	b,@r0
      0006E0 E5 81            [12] 2381 	mov	a,sp
      0006E2 24 F9            [12] 2382 	add	a,#0xf9
      0006E4 F9               [12] 2383 	mov	r1,a
      0006E5 12r00r00         [24] 2384 	lcall	__gptrget
      0006E8 F7               [12] 2385 	mov	@r1,a
      0006E9 A3               [24] 2386 	inc	dptr
      0006EA 12r00r00         [24] 2387 	lcall	__gptrget
      0006ED 09               [12] 2388 	inc	r1
      0006EE F7               [12] 2389 	mov	@r1,a
      0006EF E5 81            [12] 2390 	mov	a,sp
      0006F1 24 F9            [12] 2391 	add	a,#0xf9
      0006F3 F8               [12] 2392 	mov	r0,a
      0006F4 C3               [12] 2393 	clr	c
      0006F5 EE               [12] 2394 	mov	a,r6
      0006F6 96               [12] 2395 	subb	a,@r0
      0006F7 EF               [12] 2396 	mov	a,r7
      0006F8 08               [12] 2397 	inc	r0
      0006F9 96               [12] 2398 	subb	a,@r0
      0006FA D0 07            [24] 2399 	pop	ar7
      0006FC D0 06            [24] 2400 	pop	ar6
      0006FE D0 05            [24] 2401 	pop	ar5
      000700 50 15            [24] 2402 	jnc	00105$
                                   2403 ;	/home/user/contiki/core/net/rime/rudolph1.c:180: c->highest_chunk_heard = c->chunk;
      000702 8C 82            [24] 2404 	mov	dpl,r4
      000704 8B 83            [24] 2405 	mov	dph,r3
      000706 8A F0            [24] 2406 	mov	b,r2
      000708 E5 81            [12] 2407 	mov	a,sp
      00070A 24 FC            [12] 2408 	add	a,#0xfc
      00070C F8               [12] 2409 	mov	r0,a
      00070D E6               [12] 2410 	mov	a,@r0
      00070E 12r00r00         [24] 2411 	lcall	__gptrput
      000711 A3               [24] 2412 	inc	dptr
      000712 08               [12] 2413 	inc	r0
      000713 E6               [12] 2414 	mov	a,@r0
      000714 12r00r00         [24] 2415 	lcall	__gptrput
      000717                       2416 00105$:
                                   2417 ;	/home/user/contiki/core/net/rime/rudolph1.c:182: c->chunk++;
      000717 C0 05            [24] 2418 	push	ar5
      000719 C0 06            [24] 2419 	push	ar6
      00071B C0 07            [24] 2420 	push	ar7
      00071D E5 81            [12] 2421 	mov	a,sp
      00071F 24 FB            [12] 2422 	add	a,#0xfb
      000721 F8               [12] 2423 	mov	r0,a
      000722 86 82            [24] 2424 	mov	dpl,@r0
      000724 08               [12] 2425 	inc	r0
      000725 86 83            [24] 2426 	mov	dph,@r0
      000727 08               [12] 2427 	inc	r0
      000728 86 F0            [24] 2428 	mov	b,@r0
      00072A 12r00r00         [24] 2429 	lcall	__gptrget
      00072D FA               [12] 2430 	mov	r2,a
      00072E A3               [24] 2431 	inc	dptr
      00072F 12r00r00         [24] 2432 	lcall	__gptrget
      000732 FF               [12] 2433 	mov	r7,a
      000733 0A               [12] 2434 	inc	r2
      000734 BA 00 01         [24] 2435 	cjne	r2,#0x00,00149$
      000737 0F               [12] 2436 	inc	r7
      000738                       2437 00149$:
      000738 E5 81            [12] 2438 	mov	a,sp
      00073A 24 FB            [12] 2439 	add	a,#0xfb
      00073C F8               [12] 2440 	mov	r0,a
      00073D 86 82            [24] 2441 	mov	dpl,@r0
      00073F 08               [12] 2442 	inc	r0
      000740 86 83            [24] 2443 	mov	dph,@r0
      000742 08               [12] 2444 	inc	r0
      000743 86 F0            [24] 2445 	mov	b,@r0
      000745 EA               [12] 2446 	mov	a,r2
      000746 12r00r00         [24] 2447 	lcall	__gptrput
      000749 A3               [24] 2448 	inc	dptr
      00074A EF               [12] 2449 	mov	a,r7
      00074B 12r00r00         [24] 2450 	lcall	__gptrput
      00074E D0 07            [24] 2451 	pop	ar7
      000750 D0 06            [24] 2452 	pop	ar6
      000752 D0 05            [24] 2453 	pop	ar5
      000754 80 63            [24] 2454 	sjmp	00111$
      000756                       2455 00110$:
                                   2456 ;	/home/user/contiki/core/net/rime/rudolph1.c:183: } else if(p->h.chunk > c->chunk) {
      000756 E5 81            [12] 2457 	mov	a,sp
      000758 24 F9            [12] 2458 	add	a,#0xf9
      00075A F8               [12] 2459 	mov	r0,a
      00075B C3               [12] 2460 	clr	c
      00075C EB               [12] 2461 	mov	a,r3
      00075D 96               [12] 2462 	subb	a,@r0
      00075E EC               [12] 2463 	mov	a,r4
      00075F 08               [12] 2464 	inc	r0
      000760 96               [12] 2465 	subb	a,@r0
      000761 50 56            [24] 2466 	jnc	00111$
                                   2467 ;	/home/user/contiki/core/net/rime/rudolph1.c:187: send_nack(c);
      000763 E5 81            [12] 2468 	mov	a,sp
      000765 24 F2            [12] 2469 	add	a,#0xf2
      000767 F8               [12] 2470 	mov	r0,a
      000768 86 82            [24] 2471 	mov	dpl,@r0
      00076A 08               [12] 2472 	inc	r0
      00076B 86 83            [24] 2473 	mov	dph,@r0
      00076D 08               [12] 2474 	inc	r0
      00076E 86 F0            [24] 2475 	mov	b,@r0
      000770 C0 07            [24] 2476 	push	ar7
      000772 C0 06            [24] 2477 	push	ar6
      000774 C0 05            [24] 2478 	push	ar5
      000776 12r03r9F         [24] 2479 	lcall	_send_nack
      000779 D0 05            [24] 2480 	pop	ar5
      00077B D0 06            [24] 2481 	pop	ar6
      00077D D0 07            [24] 2482 	pop	ar7
                                   2483 ;	/home/user/contiki/core/net/rime/rudolph1.c:188: c->highest_chunk_heard = p->h.chunk;
      00077F E5 81            [12] 2484 	mov	a,sp
      000781 24 F2            [12] 2485 	add	a,#0xf2
      000783 F8               [12] 2486 	mov	r0,a
      000784 A9 81            [24] 2487 	mov	r1,sp
      000786 19               [12] 2488 	dec	r1
      000787 19               [12] 2489 	dec	r1
      000788 74 A4            [12] 2490 	mov	a,#0xA4
      00078A 26               [12] 2491 	add	a,@r0
      00078B F7               [12] 2492 	mov	@r1,a
      00078C E4               [12] 2493 	clr	a
      00078D 08               [12] 2494 	inc	r0
      00078E 36               [12] 2495 	addc	a,@r0
      00078F 09               [12] 2496 	inc	r1
      000790 F7               [12] 2497 	mov	@r1,a
      000791 08               [12] 2498 	inc	r0
      000792 09               [12] 2499 	inc	r1
      000793 E6               [12] 2500 	mov	a,@r0
      000794 F7               [12] 2501 	mov	@r1,a
      000795 8D 82            [24] 2502 	mov	dpl,r5
      000797 8E 83            [24] 2503 	mov	dph,r6
      000799 8F F0            [24] 2504 	mov	b,r7
      00079B 12r00r00         [24] 2505 	lcall	__gptrget
      00079E FB               [12] 2506 	mov	r3,a
      00079F A3               [24] 2507 	inc	dptr
      0007A0 12r00r00         [24] 2508 	lcall	__gptrget
      0007A3 FC               [12] 2509 	mov	r4,a
      0007A4 A8 81            [24] 2510 	mov	r0,sp
      0007A6 18               [12] 2511 	dec	r0
      0007A7 18               [12] 2512 	dec	r0
      0007A8 86 82            [24] 2513 	mov	dpl,@r0
      0007AA 08               [12] 2514 	inc	r0
      0007AB 86 83            [24] 2515 	mov	dph,@r0
      0007AD 08               [12] 2516 	inc	r0
      0007AE 86 F0            [24] 2517 	mov	b,@r0
      0007B0 EB               [12] 2518 	mov	a,r3
      0007B1 12r00r00         [24] 2519 	lcall	__gptrput
      0007B4 A3               [24] 2520 	inc	dptr
      0007B5 EC               [12] 2521 	mov	a,r4
      0007B6 12r00r00         [24] 2522 	lcall	__gptrput
                                   2523 ;	/home/user/contiki/core/net/rime/rudolph1.c:189: } else if(p->h.chunk < c->chunk) {
      0007B9                       2524 00111$:
                                   2525 ;	/home/user/contiki/core/net/rime/rudolph1.c:196: if(c->highest_chunk_heard > p->h.chunk) {
      0007B9 E5 81            [12] 2526 	mov	a,sp
      0007BB 24 F2            [12] 2527 	add	a,#0xf2
      0007BD F8               [12] 2528 	mov	r0,a
      0007BE 74 A4            [12] 2529 	mov	a,#0xA4
      0007C0 26               [12] 2530 	add	a,@r0
      0007C1 FA               [12] 2531 	mov	r2,a
      0007C2 E4               [12] 2532 	clr	a
      0007C3 08               [12] 2533 	inc	r0
      0007C4 36               [12] 2534 	addc	a,@r0
      0007C5 FB               [12] 2535 	mov	r3,a
      0007C6 08               [12] 2536 	inc	r0
      0007C7 86 04            [24] 2537 	mov	ar4,@r0
      0007C9 8A 82            [24] 2538 	mov	dpl,r2
      0007CB 8B 83            [24] 2539 	mov	dph,r3
      0007CD 8C F0            [24] 2540 	mov	b,r4
      0007CF 12r00r00         [24] 2541 	lcall	__gptrget
      0007D2 FA               [12] 2542 	mov	r2,a
      0007D3 A3               [24] 2543 	inc	dptr
      0007D4 12r00r00         [24] 2544 	lcall	__gptrget
      0007D7 FB               [12] 2545 	mov	r3,a
      0007D8 8D 82            [24] 2546 	mov	dpl,r5
      0007DA 8E 83            [24] 2547 	mov	dph,r6
      0007DC 8F F0            [24] 2548 	mov	b,r7
      0007DE 12r00r00         [24] 2549 	lcall	__gptrget
      0007E1 FD               [12] 2550 	mov	r5,a
      0007E2 A3               [24] 2551 	inc	dptr
      0007E3 12r00r00         [24] 2552 	lcall	__gptrget
      0007E6 FE               [12] 2553 	mov	r6,a
      0007E7 C3               [12] 2554 	clr	c
      0007E8 ED               [12] 2555 	mov	a,r5
      0007E9 9A               [12] 2556 	subb	a,r2
      0007EA EE               [12] 2557 	mov	a,r6
      0007EB 9B               [12] 2558 	subb	a,r3
      0007EC 50 10            [24] 2559 	jnc	00119$
                                   2560 ;	/home/user/contiki/core/net/rime/rudolph1.c:197: send_nack(c);
      0007EE E5 81            [12] 2561 	mov	a,sp
      0007F0 24 F2            [12] 2562 	add	a,#0xf2
      0007F2 F8               [12] 2563 	mov	r0,a
      0007F3 86 82            [24] 2564 	mov	dpl,@r0
      0007F5 08               [12] 2565 	inc	r0
      0007F6 86 83            [24] 2566 	mov	dph,@r0
      0007F8 08               [12] 2567 	inc	r0
      0007F9 86 F0            [24] 2568 	mov	b,@r0
      0007FB 12r03r9F         [24] 2569 	lcall	_send_nack
      0007FE                       2570 00119$:
      0007FE E5 81            [12] 2571 	mov	a,sp
      000800 24 F1            [12] 2572 	add	a,#0xF1
      000802 F5 81            [12] 2573 	mov	sp,a
      000804 22               [24] 2574 	ret
                                   2575 ;------------------------------------------------------------
                                   2576 ;Allocation info for local variables in function 'recv_trickle'
                                   2577 ;------------------------------------------------------------
                                   2578 ;trickle                   Allocated to registers r5 r6 r7 
                                   2579 ;c                         Allocated to registers r5 r6 r7 
                                   2580 ;p                         Allocated to registers r2 r3 r4 
                                   2581 ;------------------------------------------------------------
                                   2582 ;	/home/user/contiki/core/net/rime/rudolph1.c:206: recv_trickle(struct trickle_conn *trickle)
                                   2583 ;	-----------------------------------------
                                   2584 ;	 function recv_trickle
                                   2585 ;	-----------------------------------------
      000805                       2586 _recv_trickle:
      000805 AD 82            [24] 2587 	mov	r5,dpl
      000807 AE 83            [24] 2588 	mov	r6,dph
      000809 AF F0            [24] 2589 	mov	r7,b
                                   2590 ;	/home/user/contiki/core/net/rime/rudolph1.c:208: struct rudolph1_conn *c = (struct rudolph1_conn *)trickle;
                                   2591 ;	/home/user/contiki/core/net/rime/rudolph1.c:209: struct rudolph1_datapacket *p = packetbuf_dataptr();
      00080B C0 07            [24] 2592 	push	ar7
      00080D C0 06            [24] 2593 	push	ar6
      00080F C0 05            [24] 2594 	push	ar5
      000811 12r00r00         [24] 2595 	lcall	_packetbuf_dataptr
      000814 AA 82            [24] 2596 	mov	r2,dpl
      000816 AB 83            [24] 2597 	mov	r3,dph
      000818 AC F0            [24] 2598 	mov	r4,b
      00081A D0 05            [24] 2599 	pop	ar5
      00081C D0 06            [24] 2600 	pop	ar6
      00081E D0 07            [24] 2601 	pop	ar7
                                   2602 ;	/home/user/contiki/core/net/rime/rudolph1.c:211: if(p->h.type == TYPE_DATA) {
      000820 8A 82            [24] 2603 	mov	dpl,r2
      000822 8B 83            [24] 2604 	mov	dph,r3
      000824 8C F0            [24] 2605 	mov	b,r4
      000826 12r00r00         [24] 2606 	lcall	__gptrget
      000829 70 15            [24] 2607 	jnz	00103$
                                   2608 ;	/home/user/contiki/core/net/rime/rudolph1.c:215: handle_data(c, p);
      00082B C0 02            [24] 2609 	push	ar2
      00082D C0 03            [24] 2610 	push	ar3
      00082F C0 04            [24] 2611 	push	ar4
      000831 8D 82            [24] 2612 	mov	dpl,r5
      000833 8E 83            [24] 2613 	mov	dph,r6
      000835 8F F0            [24] 2614 	mov	b,r7
      000837 12r04r79         [24] 2615 	lcall	_handle_data
      00083A 15 81            [12] 2616 	dec	sp
      00083C 15 81            [12] 2617 	dec	sp
      00083E 15 81            [12] 2618 	dec	sp
      000840                       2619 00103$:
      000840 22               [24] 2620 	ret
                                   2621 ;------------------------------------------------------------
                                   2622 ;Allocation info for local variables in function 'sent_ipolite'
                                   2623 ;------------------------------------------------------------
                                   2624 ;ipolite                   Allocated to registers 
                                   2625 ;------------------------------------------------------------
                                   2626 ;	/home/user/contiki/core/net/rime/rudolph1.c:220: sent_ipolite(struct ipolite_conn *ipolite)
                                   2627 ;	-----------------------------------------
                                   2628 ;	 function sent_ipolite
                                   2629 ;	-----------------------------------------
      000841                       2630 _sent_ipolite:
                                   2631 ;	/home/user/contiki/core/net/rime/rudolph1.c:224: }
      000841 22               [24] 2632 	ret
                                   2633 ;------------------------------------------------------------
                                   2634 ;Allocation info for local variables in function 'dropped_ipolite'
                                   2635 ;------------------------------------------------------------
                                   2636 ;ipolite                   Allocated to registers 
                                   2637 ;------------------------------------------------------------
                                   2638 ;	/home/user/contiki/core/net/rime/rudolph1.c:227: dropped_ipolite(struct ipolite_conn *ipolite)
                                   2639 ;	-----------------------------------------
                                   2640 ;	 function dropped_ipolite
                                   2641 ;	-----------------------------------------
      000842                       2642 _dropped_ipolite:
                                   2643 ;	/home/user/contiki/core/net/rime/rudolph1.c:231: }
      000842 22               [24] 2644 	ret
                                   2645 ;------------------------------------------------------------
                                   2646 ;Allocation info for local variables in function 'recv_ipolite'
                                   2647 ;------------------------------------------------------------
                                   2648 ;from                      Allocated to stack - sp -10
                                   2649 ;ipolite                   Allocated to registers r5 r6 r7 
                                   2650 ;c                         Allocated to stack - sp -5
                                   2651 ;p                         Allocated to stack - sp -2
                                   2652 ;sloc0                     Allocated to stack - sp +4
                                   2653 ;------------------------------------------------------------
                                   2654 ;	/home/user/contiki/core/net/rime/rudolph1.c:234: recv_ipolite(struct ipolite_conn *ipolite, const rimeaddr_t *from)
                                   2655 ;	-----------------------------------------
                                   2656 ;	 function recv_ipolite
                                   2657 ;	-----------------------------------------
      000843                       2658 _recv_ipolite:
      000843 E5 81            [12] 2659 	mov	a,sp
      000845 24 06            [12] 2660 	add	a,#0x06
      000847 F5 81            [12] 2661 	mov	sp,a
      000849 AD 82            [24] 2662 	mov	r5,dpl
      00084B AE 83            [24] 2663 	mov	r6,dph
      00084D AF F0            [24] 2664 	mov	r7,b
                                   2665 ;	/home/user/contiki/core/net/rime/rudolph1.c:236: struct rudolph1_conn *c = (struct rudolph1_conn *)
      00084F ED               [12] 2666 	mov	a,r5
      000850 24 A5            [12] 2667 	add	a,#0xA5
      000852 FD               [12] 2668 	mov	r5,a
      000853 EE               [12] 2669 	mov	a,r6
      000854 34 FF            [12] 2670 	addc	a,#0xFF
      000856 FE               [12] 2671 	mov	r6,a
      000857 E5 81            [12] 2672 	mov	a,sp
      000859 24 FB            [12] 2673 	add	a,#0xfb
      00085B F8               [12] 2674 	mov	r0,a
      00085C A6 05            [24] 2675 	mov	@r0,ar5
      00085E 08               [12] 2676 	inc	r0
      00085F A6 06            [24] 2677 	mov	@r0,ar6
      000861 08               [12] 2678 	inc	r0
      000862 A6 07            [24] 2679 	mov	@r0,ar7
                                   2680 ;	/home/user/contiki/core/net/rime/rudolph1.c:238: struct rudolph1_datapacket *p = packetbuf_dataptr();
      000864 12r00r00         [24] 2681 	lcall	_packetbuf_dataptr
      000867 AA 82            [24] 2682 	mov	r2,dpl
      000869 AB 83            [24] 2683 	mov	r3,dph
      00086B AC F0            [24] 2684 	mov	r4,b
      00086D A8 81            [24] 2685 	mov	r0,sp
      00086F 18               [12] 2686 	dec	r0
      000870 18               [12] 2687 	dec	r0
      000871 A6 02            [24] 2688 	mov	@r0,ar2
      000873 08               [12] 2689 	inc	r0
      000874 A6 03            [24] 2690 	mov	@r0,ar3
      000876 08               [12] 2691 	inc	r0
      000877 A6 04            [24] 2692 	mov	@r0,ar4
                                   2693 ;	/home/user/contiki/core/net/rime/rudolph1.c:244: c->nacks++;
      000879 E5 81            [12] 2694 	mov	a,sp
      00087B 24 FB            [12] 2695 	add	a,#0xfb
      00087D F8               [12] 2696 	mov	r0,a
      00087E 74 A7            [12] 2697 	mov	a,#0xA7
      000880 26               [12] 2698 	add	a,@r0
      000881 FD               [12] 2699 	mov	r5,a
      000882 E4               [12] 2700 	clr	a
      000883 08               [12] 2701 	inc	r0
      000884 36               [12] 2702 	addc	a,@r0
      000885 FE               [12] 2703 	mov	r6,a
      000886 08               [12] 2704 	inc	r0
      000887 86 07            [24] 2705 	mov	ar7,@r0
      000889 8D 82            [24] 2706 	mov	dpl,r5
      00088B 8E 83            [24] 2707 	mov	dph,r6
      00088D 8F F0            [24] 2708 	mov	b,r7
      00088F 12r00r00         [24] 2709 	lcall	__gptrget
      000892 FC               [12] 2710 	mov	r4,a
      000893 0C               [12] 2711 	inc	r4
      000894 8D 82            [24] 2712 	mov	dpl,r5
      000896 8E 83            [24] 2713 	mov	dph,r6
      000898 8F F0            [24] 2714 	mov	b,r7
      00089A EC               [12] 2715 	mov	a,r4
      00089B 12r00r00         [24] 2716 	lcall	__gptrput
                                   2717 ;	/home/user/contiki/core/net/rime/rudolph1.c:246: if(p->h.type == TYPE_NACK) {
      00089E A8 81            [24] 2718 	mov	r0,sp
      0008A0 18               [12] 2719 	dec	r0
      0008A1 18               [12] 2720 	dec	r0
      0008A2 86 82            [24] 2721 	mov	dpl,@r0
      0008A4 08               [12] 2722 	inc	r0
      0008A5 86 83            [24] 2723 	mov	dph,@r0
      0008A7 08               [12] 2724 	inc	r0
      0008A8 86 F0            [24] 2725 	mov	b,@r0
      0008AA 12r00r00         [24] 2726 	lcall	__gptrget
      0008AD FF               [12] 2727 	mov	r7,a
      0008AE BF 01 02         [24] 2728 	cjne	r7,#0x01,00130$
      0008B1 80 03            [24] 2729 	sjmp	00131$
      0008B3                       2730 00130$:
      0008B3 02r09rEE         [24] 2731 	ljmp	00111$
      0008B6                       2732 00131$:
                                   2733 ;	/home/user/contiki/core/net/rime/rudolph1.c:251: if(p->h.version == c->version) {
      0008B6 A8 81            [24] 2734 	mov	r0,sp
      0008B8 18               [12] 2735 	dec	r0
      0008B9 18               [12] 2736 	dec	r0
      0008BA 74 01            [12] 2737 	mov	a,#0x01
      0008BC 26               [12] 2738 	add	a,@r0
      0008BD FC               [12] 2739 	mov	r4,a
      0008BE E4               [12] 2740 	clr	a
      0008BF 08               [12] 2741 	inc	r0
      0008C0 36               [12] 2742 	addc	a,@r0
      0008C1 FD               [12] 2743 	mov	r5,a
      0008C2 08               [12] 2744 	inc	r0
      0008C3 86 06            [24] 2745 	mov	ar6,@r0
      0008C5 8C 82            [24] 2746 	mov	dpl,r4
      0008C7 8D 83            [24] 2747 	mov	dph,r5
      0008C9 8E F0            [24] 2748 	mov	b,r6
      0008CB 12r00r00         [24] 2749 	lcall	__gptrget
      0008CE FE               [12] 2750 	mov	r6,a
      0008CF E5 81            [12] 2751 	mov	a,sp
      0008D1 24 FB            [12] 2752 	add	a,#0xfb
      0008D3 F8               [12] 2753 	mov	r0,a
      0008D4 74 A6            [12] 2754 	mov	a,#0xA6
      0008D6 26               [12] 2755 	add	a,@r0
      0008D7 FB               [12] 2756 	mov	r3,a
      0008D8 E4               [12] 2757 	clr	a
      0008D9 08               [12] 2758 	inc	r0
      0008DA 36               [12] 2759 	addc	a,@r0
      0008DB FC               [12] 2760 	mov	r4,a
      0008DC 08               [12] 2761 	inc	r0
      0008DD 86 05            [24] 2762 	mov	ar5,@r0
      0008DF 8B 82            [24] 2763 	mov	dpl,r3
      0008E1 8C 83            [24] 2764 	mov	dph,r4
      0008E3 8D F0            [24] 2765 	mov	b,r5
      0008E5 12r00r00         [24] 2766 	lcall	__gptrget
      0008E8 FD               [12] 2767 	mov	r5,a
      0008E9 EE               [12] 2768 	mov	a,r6
      0008EA B5 05 02         [24] 2769 	cjne	a,ar5,00132$
      0008ED 80 03            [24] 2770 	sjmp	00133$
      0008EF                       2771 00132$:
      0008EF 02r09r7E         [24] 2772 	ljmp	00106$
      0008F2                       2773 00133$:
                                   2774 ;	/home/user/contiki/core/net/rime/rudolph1.c:252: if(p->h.chunk < c->chunk) {
      0008F2 A8 81            [24] 2775 	mov	r0,sp
      0008F4 18               [12] 2776 	dec	r0
      0008F5 18               [12] 2777 	dec	r0
      0008F6 74 02            [12] 2778 	mov	a,#0x02
      0008F8 26               [12] 2779 	add	a,@r0
      0008F9 FA               [12] 2780 	mov	r2,a
      0008FA E4               [12] 2781 	clr	a
      0008FB 08               [12] 2782 	inc	r0
      0008FC 36               [12] 2783 	addc	a,@r0
      0008FD FB               [12] 2784 	mov	r3,a
      0008FE 08               [12] 2785 	inc	r0
      0008FF 86 04            [24] 2786 	mov	ar4,@r0
      000901 8A 82            [24] 2787 	mov	dpl,r2
      000903 8B 83            [24] 2788 	mov	dph,r3
      000905 8C F0            [24] 2789 	mov	b,r4
      000907 12r00r00         [24] 2790 	lcall	__gptrget
      00090A FF               [12] 2791 	mov	r7,a
      00090B A3               [24] 2792 	inc	dptr
      00090C 12r00r00         [24] 2793 	lcall	__gptrget
      00090F FE               [12] 2794 	mov	r6,a
      000910 E5 81            [12] 2795 	mov	a,sp
      000912 24 FB            [12] 2796 	add	a,#0xfb
      000914 F8               [12] 2797 	mov	r0,a
      000915 74 A2            [12] 2798 	mov	a,#0xA2
      000917 26               [12] 2799 	add	a,@r0
      000918 FA               [12] 2800 	mov	r2,a
      000919 E4               [12] 2801 	clr	a
      00091A 08               [12] 2802 	inc	r0
      00091B 36               [12] 2803 	addc	a,@r0
      00091C FB               [12] 2804 	mov	r3,a
      00091D 08               [12] 2805 	inc	r0
      00091E 86 04            [24] 2806 	mov	ar4,@r0
      000920 8A 82            [24] 2807 	mov	dpl,r2
      000922 8B 83            [24] 2808 	mov	dph,r3
      000924 8C F0            [24] 2809 	mov	b,r4
      000926 12r00r00         [24] 2810 	lcall	__gptrget
      000929 FA               [12] 2811 	mov	r2,a
      00092A A3               [24] 2812 	inc	dptr
      00092B 12r00r00         [24] 2813 	lcall	__gptrget
      00092E FB               [12] 2814 	mov	r3,a
      00092F C3               [12] 2815 	clr	c
      000930 EF               [12] 2816 	mov	a,r7
      000931 9A               [12] 2817 	subb	a,r2
      000932 EE               [12] 2818 	mov	a,r6
      000933 9B               [12] 2819 	subb	a,r3
      000934 40 03            [24] 2820 	jc	00134$
      000936 02r0Ar16         [24] 2821 	ljmp	00113$
      000939                       2822 00134$:
                                   2823 ;	/home/user/contiki/core/net/rime/rudolph1.c:257: format_data(c, p->h.chunk);
      000939 C0 07            [24] 2824 	push	ar7
      00093B C0 06            [24] 2825 	push	ar6
      00093D E5 81            [12] 2826 	mov	a,sp
      00093F 24 F9            [12] 2827 	add	a,#0xf9
      000941 F8               [12] 2828 	mov	r0,a
      000942 86 82            [24] 2829 	mov	dpl,@r0
      000944 08               [12] 2830 	inc	r0
      000945 86 83            [24] 2831 	mov	dph,@r0
      000947 08               [12] 2832 	inc	r0
      000948 86 F0            [24] 2833 	mov	b,@r0
      00094A 12r00rAA         [24] 2834 	lcall	_format_data
      00094D 15 81            [12] 2835 	dec	sp
      00094F 15 81            [12] 2836 	dec	sp
                                   2837 ;	/home/user/contiki/core/net/rime/rudolph1.c:258: ipolite_send(&c->ipolite, REPAIR_TIMEOUT, sizeof(struct rudolph1_hdr));
      000951 E5 81            [12] 2838 	mov	a,sp
      000953 24 FB            [12] 2839 	add	a,#0xfb
      000955 F8               [12] 2840 	mov	r0,a
      000956 74 5B            [12] 2841 	mov	a,#0x5B
      000958 26               [12] 2842 	add	a,@r0
      000959 FA               [12] 2843 	mov	r2,a
      00095A E4               [12] 2844 	clr	a
      00095B 08               [12] 2845 	inc	r0
      00095C 36               [12] 2846 	addc	a,@r0
      00095D FB               [12] 2847 	mov	r3,a
      00095E 08               [12] 2848 	inc	r0
      00095F 86 04            [24] 2849 	mov	ar4,@r0
      000961 74 04            [12] 2850 	mov	a,#0x04
      000963 C0 E0            [24] 2851 	push	acc
      000965 74 20            [12] 2852 	mov	a,#0x20
      000967 C0 E0            [24] 2853 	push	acc
      000969 E4               [12] 2854 	clr	a
      00096A C0 E0            [24] 2855 	push	acc
      00096C 8A 82            [24] 2856 	mov	dpl,r2
      00096E 8B 83            [24] 2857 	mov	dph,r3
      000970 8C F0            [24] 2858 	mov	b,r4
      000972 12r00r00         [24] 2859 	lcall	_ipolite_send
      000975 15 81            [12] 2860 	dec	sp
      000977 15 81            [12] 2861 	dec	sp
      000979 15 81            [12] 2862 	dec	sp
      00097B 02r0Ar16         [24] 2863 	ljmp	00113$
      00097E                       2864 00106$:
                                   2865 ;	/home/user/contiki/core/net/rime/rudolph1.c:260: } else if(LT(p->h.version, c->version)) {
      00097E EE               [12] 2866 	mov	a,r6
      00097F C3               [12] 2867 	clr	c
      000980 9D               [12] 2868 	subb	a,r5
      000981 FE               [12] 2869 	mov	r6,a
      000982 20 E7 03         [24] 2870 	jb	acc.7,00135$
      000985 02r0Ar16         [24] 2871 	ljmp	00113$
      000988                       2872 00135$:
                                   2873 ;	/home/user/contiki/core/net/rime/rudolph1.c:261: format_data(c, 0);
      000988 E4               [12] 2874 	clr	a
      000989 C0 E0            [24] 2875 	push	acc
      00098B C0 E0            [24] 2876 	push	acc
      00098D E5 81            [12] 2877 	mov	a,sp
      00098F 24 F9            [12] 2878 	add	a,#0xf9
      000991 F8               [12] 2879 	mov	r0,a
      000992 86 82            [24] 2880 	mov	dpl,@r0
      000994 08               [12] 2881 	inc	r0
      000995 86 83            [24] 2882 	mov	dph,@r0
      000997 08               [12] 2883 	inc	r0
      000998 86 F0            [24] 2884 	mov	b,@r0
      00099A 12r00rAA         [24] 2885 	lcall	_format_data
      00099D 15 81            [12] 2886 	dec	sp
      00099F 15 81            [12] 2887 	dec	sp
                                   2888 ;	/home/user/contiki/core/net/rime/rudolph1.c:262: ipolite_send(&c->ipolite, c->send_interval / 2, sizeof(struct rudolph1_hdr));
      0009A1 E5 81            [12] 2889 	mov	a,sp
      0009A3 24 FB            [12] 2890 	add	a,#0xfb
      0009A5 F8               [12] 2891 	mov	r0,a
      0009A6 74 A0            [12] 2892 	mov	a,#0xA0
      0009A8 26               [12] 2893 	add	a,@r0
      0009A9 FC               [12] 2894 	mov	r4,a
      0009AA E4               [12] 2895 	clr	a
      0009AB 08               [12] 2896 	inc	r0
      0009AC 36               [12] 2897 	addc	a,@r0
      0009AD FD               [12] 2898 	mov	r5,a
      0009AE 08               [12] 2899 	inc	r0
      0009AF 86 06            [24] 2900 	mov	ar6,@r0
      0009B1 8C 82            [24] 2901 	mov	dpl,r4
      0009B3 8D 83            [24] 2902 	mov	dph,r5
      0009B5 8E F0            [24] 2903 	mov	b,r6
      0009B7 12r00r00         [24] 2904 	lcall	__gptrget
      0009BA FC               [12] 2905 	mov	r4,a
      0009BB A3               [24] 2906 	inc	dptr
      0009BC 12r00r00         [24] 2907 	lcall	__gptrget
      0009BF C3               [12] 2908 	clr	c
      0009C0 13               [12] 2909 	rrc	a
      0009C1 CC               [12] 2910 	xch	a,r4
      0009C2 13               [12] 2911 	rrc	a
      0009C3 CC               [12] 2912 	xch	a,r4
      0009C4 FD               [12] 2913 	mov	r5,a
      0009C5 E5 81            [12] 2914 	mov	a,sp
      0009C7 24 FB            [12] 2915 	add	a,#0xfb
      0009C9 F8               [12] 2916 	mov	r0,a
      0009CA 74 5B            [12] 2917 	mov	a,#0x5B
      0009CC 26               [12] 2918 	add	a,@r0
      0009CD FA               [12] 2919 	mov	r2,a
      0009CE E4               [12] 2920 	clr	a
      0009CF 08               [12] 2921 	inc	r0
      0009D0 36               [12] 2922 	addc	a,@r0
      0009D1 FB               [12] 2923 	mov	r3,a
      0009D2 08               [12] 2924 	inc	r0
      0009D3 86 06            [24] 2925 	mov	ar6,@r0
      0009D5 74 04            [12] 2926 	mov	a,#0x04
      0009D7 C0 E0            [24] 2927 	push	acc
      0009D9 C0 04            [24] 2928 	push	ar4
      0009DB C0 05            [24] 2929 	push	ar5
      0009DD 8A 82            [24] 2930 	mov	dpl,r2
      0009DF 8B 83            [24] 2931 	mov	dph,r3
      0009E1 8E F0            [24] 2932 	mov	b,r6
      0009E3 12r00r00         [24] 2933 	lcall	_ipolite_send
      0009E6 15 81            [12] 2934 	dec	sp
      0009E8 15 81            [12] 2935 	dec	sp
      0009EA 15 81            [12] 2936 	dec	sp
      0009EC 80 28            [24] 2937 	sjmp	00113$
      0009EE                       2938 00111$:
                                   2939 ;	/home/user/contiki/core/net/rime/rudolph1.c:264: } else if(p->h.type == TYPE_DATA) {
      0009EE EF               [12] 2940 	mov	a,r7
      0009EF 70 25            [24] 2941 	jnz	00113$
                                   2942 ;	/home/user/contiki/core/net/rime/rudolph1.c:269: handle_data(c, p);
      0009F1 A8 81            [24] 2943 	mov	r0,sp
      0009F3 18               [12] 2944 	dec	r0
      0009F4 18               [12] 2945 	dec	r0
      0009F5 E6               [12] 2946 	mov	a,@r0
      0009F6 C0 E0            [24] 2947 	push	acc
      0009F8 08               [12] 2948 	inc	r0
      0009F9 E6               [12] 2949 	mov	a,@r0
      0009FA C0 E0            [24] 2950 	push	acc
      0009FC 08               [12] 2951 	inc	r0
      0009FD E6               [12] 2952 	mov	a,@r0
      0009FE C0 E0            [24] 2953 	push	acc
      000A00 E5 81            [12] 2954 	mov	a,sp
      000A02 24 F8            [12] 2955 	add	a,#0xf8
      000A04 F8               [12] 2956 	mov	r0,a
      000A05 86 82            [24] 2957 	mov	dpl,@r0
      000A07 08               [12] 2958 	inc	r0
      000A08 86 83            [24] 2959 	mov	dph,@r0
      000A0A 08               [12] 2960 	inc	r0
      000A0B 86 F0            [24] 2961 	mov	b,@r0
      000A0D 12r04r79         [24] 2962 	lcall	_handle_data
      000A10 15 81            [12] 2963 	dec	sp
      000A12 15 81            [12] 2964 	dec	sp
      000A14 15 81            [12] 2965 	dec	sp
      000A16                       2966 00113$:
      000A16 E5 81            [12] 2967 	mov	a,sp
      000A18 24 FA            [12] 2968 	add	a,#0xFA
      000A1A F5 81            [12] 2969 	mov	sp,a
      000A1C 22               [24] 2970 	ret
                                   2971 ;------------------------------------------------------------
                                   2972 ;Allocation info for local variables in function 'send_next_packet'
                                   2973 ;------------------------------------------------------------
                                   2974 ;ptr                       Allocated to registers r5 r6 r7 
                                   2975 ;c                         Allocated to stack - sp -2
                                   2976 ;len                       Allocated to registers r3 r4 
                                   2977 ;sloc0                     Allocated to stack - sp -7
                                   2978 ;sloc1                     Allocated to stack - sp -4
                                   2979 ;------------------------------------------------------------
                                   2980 ;	/home/user/contiki/core/net/rime/rudolph1.c:274: send_next_packet(void *ptr)
                                   2981 ;	-----------------------------------------
                                   2982 ;	 function send_next_packet
                                   2983 ;	-----------------------------------------
      000A1D                       2984 _send_next_packet:
      000A1D E5 81            [12] 2985 	mov	a,sp
      000A1F 24 08            [12] 2986 	add	a,#0x08
      000A21 F5 81            [12] 2987 	mov	sp,a
      000A23 AD 82            [24] 2988 	mov	r5,dpl
      000A25 AE 83            [24] 2989 	mov	r6,dph
      000A27 AF F0            [24] 2990 	mov	r7,b
                                   2991 ;	/home/user/contiki/core/net/rime/rudolph1.c:276: struct rudolph1_conn *c = ptr;
      000A29 A8 81            [24] 2992 	mov	r0,sp
      000A2B 18               [12] 2993 	dec	r0
      000A2C 18               [12] 2994 	dec	r0
      000A2D A6 05            [24] 2995 	mov	@r0,ar5
      000A2F 08               [12] 2996 	inc	r0
      000A30 A6 06            [24] 2997 	mov	@r0,ar6
      000A32 08               [12] 2998 	inc	r0
      000A33 A6 07            [24] 2999 	mov	@r0,ar7
                                   3000 ;	/home/user/contiki/core/net/rime/rudolph1.c:278: if(c->nacks == 0) {
      000A35 A8 81            [24] 3001 	mov	r0,sp
      000A37 18               [12] 3002 	dec	r0
      000A38 18               [12] 3003 	dec	r0
      000A39 74 A7            [12] 3004 	mov	a,#0xA7
      000A3B 26               [12] 3005 	add	a,@r0
      000A3C FA               [12] 3006 	mov	r2,a
      000A3D E4               [12] 3007 	clr	a
      000A3E 08               [12] 3008 	inc	r0
      000A3F 36               [12] 3009 	addc	a,@r0
      000A40 FB               [12] 3010 	mov	r3,a
      000A41 08               [12] 3011 	inc	r0
      000A42 86 04            [24] 3012 	mov	ar4,@r0
      000A44 8A 82            [24] 3013 	mov	dpl,r2
      000A46 8B 83            [24] 3014 	mov	dph,r3
      000A48 8C F0            [24] 3015 	mov	b,r4
      000A4A 12r00r00         [24] 3016 	lcall	__gptrget
      000A4D 60 03            [24] 3017 	jz	00114$
      000A4F 02r0BrC4         [24] 3018 	ljmp	00104$
      000A52                       3019 00114$:
                                   3020 ;	/home/user/contiki/core/net/rime/rudolph1.c:279: len = format_data(c, c->chunk);
      000A52 C0 02            [24] 3021 	push	ar2
      000A54 C0 03            [24] 3022 	push	ar3
      000A56 C0 04            [24] 3023 	push	ar4
      000A58 E5 81            [12] 3024 	mov	a,sp
      000A5A 24 FB            [12] 3025 	add	a,#0xfb
      000A5C F8               [12] 3026 	mov	r0,a
      000A5D E5 81            [12] 3027 	mov	a,sp
      000A5F 24 F6            [12] 3028 	add	a,#0xf6
      000A61 F9               [12] 3029 	mov	r1,a
      000A62 74 A2            [12] 3030 	mov	a,#0xA2
      000A64 26               [12] 3031 	add	a,@r0
      000A65 F7               [12] 3032 	mov	@r1,a
      000A66 E4               [12] 3033 	clr	a
      000A67 08               [12] 3034 	inc	r0
      000A68 36               [12] 3035 	addc	a,@r0
      000A69 09               [12] 3036 	inc	r1
      000A6A F7               [12] 3037 	mov	@r1,a
      000A6B 08               [12] 3038 	inc	r0
      000A6C 09               [12] 3039 	inc	r1
      000A6D E6               [12] 3040 	mov	a,@r0
      000A6E F7               [12] 3041 	mov	@r1,a
      000A6F E5 81            [12] 3042 	mov	a,sp
      000A71 24 F6            [12] 3043 	add	a,#0xf6
      000A73 F8               [12] 3044 	mov	r0,a
      000A74 86 82            [24] 3045 	mov	dpl,@r0
      000A76 08               [12] 3046 	inc	r0
      000A77 86 83            [24] 3047 	mov	dph,@r0
      000A79 08               [12] 3048 	inc	r0
      000A7A 86 F0            [24] 3049 	mov	b,@r0
      000A7C 12r00r00         [24] 3050 	lcall	__gptrget
      000A7F FB               [12] 3051 	mov	r3,a
      000A80 A3               [24] 3052 	inc	dptr
      000A81 12r00r00         [24] 3053 	lcall	__gptrget
      000A84 FC               [12] 3054 	mov	r4,a
      000A85 C0 02            [24] 3055 	push	ar2
      000A87 C0 03            [24] 3056 	push	ar3
      000A89 C0 04            [24] 3057 	push	ar4
      000A8B E5 81            [12] 3058 	mov	a,sp
      000A8D 24 F8            [12] 3059 	add	a,#0xf8
      000A8F F8               [12] 3060 	mov	r0,a
      000A90 86 82            [24] 3061 	mov	dpl,@r0
      000A92 08               [12] 3062 	inc	r0
      000A93 86 83            [24] 3063 	mov	dph,@r0
      000A95 08               [12] 3064 	inc	r0
      000A96 86 F0            [24] 3065 	mov	b,@r0
      000A98 12r00rAA         [24] 3066 	lcall	_format_data
      000A9B AB 82            [24] 3067 	mov	r3,dpl
      000A9D AC 83            [24] 3068 	mov	r4,dph
      000A9F 15 81            [12] 3069 	dec	sp
      000AA1 15 81            [12] 3070 	dec	sp
      000AA3 D0 02            [24] 3071 	pop	ar2
                                   3072 ;	/home/user/contiki/core/net/rime/rudolph1.c:280: trickle_send(&c->trickle);
      000AA5 E5 81            [12] 3073 	mov	a,sp
      000AA7 24 FB            [12] 3074 	add	a,#0xfb
      000AA9 F8               [12] 3075 	mov	r0,a
      000AAA 86 82            [24] 3076 	mov	dpl,@r0
      000AAC 08               [12] 3077 	inc	r0
      000AAD 86 83            [24] 3078 	mov	dph,@r0
      000AAF 08               [12] 3079 	inc	r0
      000AB0 86 F0            [24] 3080 	mov	b,@r0
      000AB2 C0 04            [24] 3081 	push	ar4
      000AB4 C0 03            [24] 3082 	push	ar3
      000AB6 C0 02            [24] 3083 	push	ar2
      000AB8 12r00r00         [24] 3084 	lcall	_trickle_send
      000ABB D0 02            [24] 3085 	pop	ar2
      000ABD D0 03            [24] 3086 	pop	ar3
      000ABF D0 04            [24] 3087 	pop	ar4
                                   3088 ;	/home/user/contiki/core/net/rime/rudolph1.c:281: if(len == RUDOLPH1_DATASIZE) {
      000AC1 BB 40 05         [24] 3089 	cjne	r3,#0x40,00115$
      000AC4 BC 00 02         [24] 3090 	cjne	r4,#0x00,00115$
      000AC7 80 09            [24] 3091 	sjmp	00116$
      000AC9                       3092 00115$:
      000AC9 D0 04            [24] 3093 	pop	ar4
      000ACB D0 03            [24] 3094 	pop	ar3
      000ACD D0 02            [24] 3095 	pop	ar2
      000ACF 02r0Br4F         [24] 3096 	ljmp	00102$
      000AD2                       3097 00116$:
                                   3098 ;	/home/user/contiki/core/net/rime/rudolph1.c:282: ctimer_set(&c->t, c->send_interval, send_next_packet, c);
      000AD2 E5 81            [12] 3099 	mov	a,sp
      000AD4 24 FB            [12] 3100 	add	a,#0xfb
      000AD6 F8               [12] 3101 	mov	r0,a
      000AD7 86 02            [24] 3102 	mov	ar2,@r0
      000AD9 08               [12] 3103 	inc	r0
      000ADA 86 03            [24] 3104 	mov	ar3,@r0
      000ADC 08               [12] 3105 	inc	r0
      000ADD 86 04            [24] 3106 	mov	ar4,@r0
      000ADF E5 81            [12] 3107 	mov	a,sp
      000AE1 24 FB            [12] 3108 	add	a,#0xfb
      000AE3 F8               [12] 3109 	mov	r0,a
      000AE4 74 A0            [12] 3110 	mov	a,#0xA0
      000AE6 26               [12] 3111 	add	a,@r0
      000AE7 FD               [12] 3112 	mov	r5,a
      000AE8 E4               [12] 3113 	clr	a
      000AE9 08               [12] 3114 	inc	r0
      000AEA 36               [12] 3115 	addc	a,@r0
      000AEB FE               [12] 3116 	mov	r6,a
      000AEC 08               [12] 3117 	inc	r0
      000AED 86 07            [24] 3118 	mov	ar7,@r0
      000AEF 8D 82            [24] 3119 	mov	dpl,r5
      000AF1 8E 83            [24] 3120 	mov	dph,r6
      000AF3 8F F0            [24] 3121 	mov	b,r7
      000AF5 E5 81            [12] 3122 	mov	a,sp
      000AF7 24 F9            [12] 3123 	add	a,#0xf9
      000AF9 F8               [12] 3124 	mov	r0,a
      000AFA 12r00r00         [24] 3125 	lcall	__gptrget
      000AFD F6               [12] 3126 	mov	@r0,a
      000AFE A3               [24] 3127 	inc	dptr
      000AFF 12r00r00         [24] 3128 	lcall	__gptrget
      000B02 08               [12] 3129 	inc	r0
      000B03 F6               [12] 3130 	mov	@r0,a
      000B04 E5 81            [12] 3131 	mov	a,sp
      000B06 24 FB            [12] 3132 	add	a,#0xfb
      000B08 F8               [12] 3133 	mov	r0,a
      000B09 74 8B            [12] 3134 	mov	a,#0x8B
      000B0B 26               [12] 3135 	add	a,@r0
      000B0C FD               [12] 3136 	mov	r5,a
      000B0D E4               [12] 3137 	clr	a
      000B0E 08               [12] 3138 	inc	r0
      000B0F 36               [12] 3139 	addc	a,@r0
      000B10 FE               [12] 3140 	mov	r6,a
      000B11 08               [12] 3141 	inc	r0
      000B12 86 07            [24] 3142 	mov	ar7,@r0
      000B14 C0 04            [24] 3143 	push	ar4
      000B16 C0 03            [24] 3144 	push	ar3
      000B18 C0 02            [24] 3145 	push	ar2
      000B1A C0 02            [24] 3146 	push	ar2
      000B1C C0 03            [24] 3147 	push	ar3
      000B1E C0 04            [24] 3148 	push	ar4
      000B20 74r1D            [12] 3149 	mov	a,#_send_next_packet
      000B22 C0 E0            [24] 3150 	push	acc
      000B24 74s0A            [12] 3151 	mov	a,#(_send_next_packet >> 8)
      000B26 C0 E0            [24] 3152 	push	acc
      000B28 E5 81            [12] 3153 	mov	a,sp
      000B2A 24 F1            [12] 3154 	add	a,#0xf1
      000B2C F8               [12] 3155 	mov	r0,a
      000B2D E6               [12] 3156 	mov	a,@r0
      000B2E C0 E0            [24] 3157 	push	acc
      000B30 08               [12] 3158 	inc	r0
      000B31 E6               [12] 3159 	mov	a,@r0
      000B32 C0 E0            [24] 3160 	push	acc
      000B34 8D 82            [24] 3161 	mov	dpl,r5
      000B36 8E 83            [24] 3162 	mov	dph,r6
      000B38 8F F0            [24] 3163 	mov	b,r7
      000B3A 12r00r00         [24] 3164 	lcall	_ctimer_set
      000B3D E5 81            [12] 3165 	mov	a,sp
      000B3F 24 F9            [12] 3166 	add	a,#0xf9
      000B41 F5 81            [12] 3167 	mov	sp,a
      000B43 D0 02            [24] 3168 	pop	ar2
      000B45 D0 03            [24] 3169 	pop	ar3
      000B47 D0 04            [24] 3170 	pop	ar4
                                   3171 ;	/home/user/contiki/core/net/rime/rudolph1.c:294: c->nacks = 0;
      000B49 D0 04            [24] 3172 	pop	ar4
      000B4B D0 03            [24] 3173 	pop	ar3
      000B4D D0 02            [24] 3174 	pop	ar2
                                   3175 ;	/home/user/contiki/core/net/rime/rudolph1.c:282: ctimer_set(&c->t, c->send_interval, send_next_packet, c);
      000B4F                       3176 00102$:
                                   3177 ;	/home/user/contiki/core/net/rime/rudolph1.c:288: c->highest_chunk_heard = c->chunk;
      000B4F C0 02            [24] 3178 	push	ar2
      000B51 C0 03            [24] 3179 	push	ar3
      000B53 C0 04            [24] 3180 	push	ar4
      000B55 E5 81            [12] 3181 	mov	a,sp
      000B57 24 FB            [12] 3182 	add	a,#0xfb
      000B59 F8               [12] 3183 	mov	r0,a
      000B5A 74 A4            [12] 3184 	mov	a,#0xA4
      000B5C 26               [12] 3185 	add	a,@r0
      000B5D FD               [12] 3186 	mov	r5,a
      000B5E E4               [12] 3187 	clr	a
      000B5F 08               [12] 3188 	inc	r0
      000B60 36               [12] 3189 	addc	a,@r0
      000B61 FE               [12] 3190 	mov	r6,a
      000B62 08               [12] 3191 	inc	r0
      000B63 86 07            [24] 3192 	mov	ar7,@r0
      000B65 E5 81            [12] 3193 	mov	a,sp
      000B67 24 F6            [12] 3194 	add	a,#0xf6
      000B69 F8               [12] 3195 	mov	r0,a
      000B6A 86 82            [24] 3196 	mov	dpl,@r0
      000B6C 08               [12] 3197 	inc	r0
      000B6D 86 83            [24] 3198 	mov	dph,@r0
      000B6F 08               [12] 3199 	inc	r0
      000B70 86 F0            [24] 3200 	mov	b,@r0
      000B72 12r00r00         [24] 3201 	lcall	__gptrget
      000B75 FB               [12] 3202 	mov	r3,a
      000B76 A3               [24] 3203 	inc	dptr
      000B77 12r00r00         [24] 3204 	lcall	__gptrget
      000B7A FC               [12] 3205 	mov	r4,a
      000B7B 8D 82            [24] 3206 	mov	dpl,r5
      000B7D 8E 83            [24] 3207 	mov	dph,r6
      000B7F 8F F0            [24] 3208 	mov	b,r7
      000B81 EB               [12] 3209 	mov	a,r3
      000B82 12r00r00         [24] 3210 	lcall	__gptrput
      000B85 A3               [24] 3211 	inc	dptr
      000B86 EC               [12] 3212 	mov	a,r4
      000B87 12r00r00         [24] 3213 	lcall	__gptrput
                                   3214 ;	/home/user/contiki/core/net/rime/rudolph1.c:289: c->chunk++;
      000B8A E5 81            [12] 3215 	mov	a,sp
      000B8C 24 F6            [12] 3216 	add	a,#0xf6
      000B8E F8               [12] 3217 	mov	r0,a
      000B8F 86 82            [24] 3218 	mov	dpl,@r0
      000B91 08               [12] 3219 	inc	r0
      000B92 86 83            [24] 3220 	mov	dph,@r0
      000B94 08               [12] 3221 	inc	r0
      000B95 86 F0            [24] 3222 	mov	b,@r0
      000B97 12r00r00         [24] 3223 	lcall	__gptrget
      000B9A FE               [12] 3224 	mov	r6,a
      000B9B A3               [24] 3225 	inc	dptr
      000B9C 12r00r00         [24] 3226 	lcall	__gptrget
      000B9F FF               [12] 3227 	mov	r7,a
      000BA0 0E               [12] 3228 	inc	r6
      000BA1 BE 00 01         [24] 3229 	cjne	r6,#0x00,00117$
      000BA4 0F               [12] 3230 	inc	r7
      000BA5                       3231 00117$:
      000BA5 E5 81            [12] 3232 	mov	a,sp
      000BA7 24 F6            [12] 3233 	add	a,#0xf6
      000BA9 F8               [12] 3234 	mov	r0,a
      000BAA 86 82            [24] 3235 	mov	dpl,@r0
      000BAC 08               [12] 3236 	inc	r0
      000BAD 86 83            [24] 3237 	mov	dph,@r0
      000BAF 08               [12] 3238 	inc	r0
      000BB0 86 F0            [24] 3239 	mov	b,@r0
      000BB2 EE               [12] 3240 	mov	a,r6
      000BB3 12r00r00         [24] 3241 	lcall	__gptrput
      000BB6 A3               [24] 3242 	inc	dptr
      000BB7 EF               [12] 3243 	mov	a,r7
      000BB8 12r00r00         [24] 3244 	lcall	__gptrput
      000BBB D0 04            [24] 3245 	pop	ar4
      000BBD D0 03            [24] 3246 	pop	ar3
      000BBF D0 02            [24] 3247 	pop	ar2
      000BC1 02r0Cr47         [24] 3248 	ljmp	00105$
      000BC4                       3249 00104$:
                                   3250 ;	/home/user/contiki/core/net/rime/rudolph1.c:292: ctimer_set(&c->t, c->send_interval, send_next_packet, c);
      000BC4 C0 02            [24] 3251 	push	ar2
      000BC6 C0 03            [24] 3252 	push	ar3
      000BC8 C0 04            [24] 3253 	push	ar4
      000BCA E5 81            [12] 3254 	mov	a,sp
      000BCC 24 FB            [12] 3255 	add	a,#0xfb
      000BCE F8               [12] 3256 	mov	r0,a
      000BCF 86 05            [24] 3257 	mov	ar5,@r0
      000BD1 08               [12] 3258 	inc	r0
      000BD2 86 06            [24] 3259 	mov	ar6,@r0
      000BD4 08               [12] 3260 	inc	r0
      000BD5 86 07            [24] 3261 	mov	ar7,@r0
      000BD7 E5 81            [12] 3262 	mov	a,sp
      000BD9 24 FB            [12] 3263 	add	a,#0xfb
      000BDB F8               [12] 3264 	mov	r0,a
      000BDC 74 A0            [12] 3265 	mov	a,#0xA0
      000BDE 26               [12] 3266 	add	a,@r0
      000BDF FA               [12] 3267 	mov	r2,a
      000BE0 E4               [12] 3268 	clr	a
      000BE1 08               [12] 3269 	inc	r0
      000BE2 36               [12] 3270 	addc	a,@r0
      000BE3 FB               [12] 3271 	mov	r3,a
      000BE4 08               [12] 3272 	inc	r0
      000BE5 86 04            [24] 3273 	mov	ar4,@r0
      000BE7 8A 82            [24] 3274 	mov	dpl,r2
      000BE9 8B 83            [24] 3275 	mov	dph,r3
      000BEB 8C F0            [24] 3276 	mov	b,r4
      000BED E5 81            [12] 3277 	mov	a,sp
      000BEF 24 F9            [12] 3278 	add	a,#0xf9
      000BF1 F8               [12] 3279 	mov	r0,a
      000BF2 12r00r00         [24] 3280 	lcall	__gptrget
      000BF5 F6               [12] 3281 	mov	@r0,a
      000BF6 A3               [24] 3282 	inc	dptr
      000BF7 12r00r00         [24] 3283 	lcall	__gptrget
      000BFA 08               [12] 3284 	inc	r0
      000BFB F6               [12] 3285 	mov	@r0,a
      000BFC E5 81            [12] 3286 	mov	a,sp
      000BFE 24 FB            [12] 3287 	add	a,#0xfb
      000C00 F8               [12] 3288 	mov	r0,a
      000C01 74 8B            [12] 3289 	mov	a,#0x8B
      000C03 26               [12] 3290 	add	a,@r0
      000C04 FA               [12] 3291 	mov	r2,a
      000C05 E4               [12] 3292 	clr	a
      000C06 08               [12] 3293 	inc	r0
      000C07 36               [12] 3294 	addc	a,@r0
      000C08 FB               [12] 3295 	mov	r3,a
      000C09 08               [12] 3296 	inc	r0
      000C0A 86 04            [24] 3297 	mov	ar4,@r0
      000C0C C0 04            [24] 3298 	push	ar4
      000C0E C0 03            [24] 3299 	push	ar3
      000C10 C0 02            [24] 3300 	push	ar2
      000C12 C0 05            [24] 3301 	push	ar5
      000C14 C0 06            [24] 3302 	push	ar6
      000C16 C0 07            [24] 3303 	push	ar7
      000C18 74r1D            [12] 3304 	mov	a,#_send_next_packet
      000C1A C0 E0            [24] 3305 	push	acc
      000C1C 74s0A            [12] 3306 	mov	a,#(_send_next_packet >> 8)
      000C1E C0 E0            [24] 3307 	push	acc
      000C20 E5 81            [12] 3308 	mov	a,sp
      000C22 24 F1            [12] 3309 	add	a,#0xf1
      000C24 F8               [12] 3310 	mov	r0,a
      000C25 E6               [12] 3311 	mov	a,@r0
      000C26 C0 E0            [24] 3312 	push	acc
      000C28 08               [12] 3313 	inc	r0
      000C29 E6               [12] 3314 	mov	a,@r0
      000C2A C0 E0            [24] 3315 	push	acc
      000C2C 8A 82            [24] 3316 	mov	dpl,r2
      000C2E 8B 83            [24] 3317 	mov	dph,r3
      000C30 8C F0            [24] 3318 	mov	b,r4
      000C32 12r00r00         [24] 3319 	lcall	_ctimer_set
      000C35 E5 81            [12] 3320 	mov	a,sp
      000C37 24 F9            [12] 3321 	add	a,#0xf9
      000C39 F5 81            [12] 3322 	mov	sp,a
      000C3B D0 02            [24] 3323 	pop	ar2
      000C3D D0 03            [24] 3324 	pop	ar3
      000C3F D0 04            [24] 3325 	pop	ar4
                                   3326 ;	/home/user/contiki/core/net/rime/rudolph1.c:294: c->nacks = 0;
      000C41 D0 04            [24] 3327 	pop	ar4
      000C43 D0 03            [24] 3328 	pop	ar3
      000C45 D0 02            [24] 3329 	pop	ar2
                                   3330 ;	/home/user/contiki/core/net/rime/rudolph1.c:292: ctimer_set(&c->t, c->send_interval, send_next_packet, c);
      000C47                       3331 00105$:
                                   3332 ;	/home/user/contiki/core/net/rime/rudolph1.c:294: c->nacks = 0;
      000C47 8A 82            [24] 3333 	mov	dpl,r2
      000C49 8B 83            [24] 3334 	mov	dph,r3
      000C4B 8C F0            [24] 3335 	mov	b,r4
      000C4D E4               [12] 3336 	clr	a
      000C4E 12r00r00         [24] 3337 	lcall	__gptrput
      000C51 E5 81            [12] 3338 	mov	a,sp
      000C53 24 F8            [12] 3339 	add	a,#0xF8
      000C55 F5 81            [12] 3340 	mov	sp,a
      000C57 22               [24] 3341 	ret
                                   3342 ;------------------------------------------------------------
                                   3343 ;Allocation info for local variables in function 'rudolph1_open'
                                   3344 ;------------------------------------------------------------
                                   3345 ;channel                   Allocated to stack - sp -6
                                   3346 ;cb                        Allocated to stack - sp -9
                                   3347 ;c                         Allocated to stack - sp -2
                                   3348 ;------------------------------------------------------------
                                   3349 ;	/home/user/contiki/core/net/rime/rudolph1.c:302: rudolph1_open(struct rudolph1_conn *c, uint16_t channel,
                                   3350 ;	-----------------------------------------
                                   3351 ;	 function rudolph1_open
                                   3352 ;	-----------------------------------------
      000C58                       3353 _rudolph1_open:
      000C58 C0 82            [24] 3354 	push	dpl
      000C5A C0 83            [24] 3355 	push	dph
      000C5C C0 F0            [24] 3356 	push	b
                                   3357 ;	/home/user/contiki/core/net/rime/rudolph1.c:305: trickle_open(&c->trickle, TRICKLE_INTERVAL, channel, &trickle);
      000C5E 74r06            [12] 3358 	mov	a,#_trickle
      000C60 C0 E0            [24] 3359 	push	acc
      000C62 74s00            [12] 3360 	mov	a,#(_trickle >> 8)
      000C64 C0 E0            [24] 3361 	push	acc
      000C66 74 80            [12] 3362 	mov	a,#0x80
      000C68 C0 E0            [24] 3363 	push	acc
      000C6A E5 81            [12] 3364 	mov	a,sp
      000C6C 24 F7            [12] 3365 	add	a,#0xf7
      000C6E F8               [12] 3366 	mov	r0,a
      000C6F E6               [12] 3367 	mov	a,@r0
      000C70 C0 E0            [24] 3368 	push	acc
      000C72 08               [12] 3369 	inc	r0
      000C73 E6               [12] 3370 	mov	a,@r0
      000C74 C0 E0            [24] 3371 	push	acc
      000C76 74 40            [12] 3372 	mov	a,#0x40
      000C78 C0 E0            [24] 3373 	push	acc
      000C7A E4               [12] 3374 	clr	a
      000C7B C0 E0            [24] 3375 	push	acc
      000C7D E5 81            [12] 3376 	mov	a,sp
      000C7F 24 F7            [12] 3377 	add	a,#0xf7
      000C81 F8               [12] 3378 	mov	r0,a
      000C82 86 82            [24] 3379 	mov	dpl,@r0
      000C84 08               [12] 3380 	inc	r0
      000C85 86 83            [24] 3381 	mov	dph,@r0
      000C87 08               [12] 3382 	inc	r0
      000C88 86 F0            [24] 3383 	mov	b,@r0
      000C8A 12r00r00         [24] 3384 	lcall	_trickle_open
      000C8D E5 81            [12] 3385 	mov	a,sp
      000C8F 24 F9            [12] 3386 	add	a,#0xf9
                                   3387 ;	/home/user/contiki/core/net/rime/rudolph1.c:306: ipolite_open(&c->ipolite, channel + 1, 1, &ipolite);
      000C91 F5 81            [12] 3388 	mov	sp,a
      000C93 24 FA            [12] 3389 	add	a,#0xfa
      000C95 F8               [12] 3390 	mov	r0,a
      000C96 74 01            [12] 3391 	mov	a,#0x01
      000C98 26               [12] 3392 	add	a,@r0
      000C99 FB               [12] 3393 	mov	r3,a
      000C9A E4               [12] 3394 	clr	a
      000C9B 08               [12] 3395 	inc	r0
      000C9C 36               [12] 3396 	addc	a,@r0
      000C9D FC               [12] 3397 	mov	r4,a
      000C9E A8 81            [24] 3398 	mov	r0,sp
      000CA0 18               [12] 3399 	dec	r0
      000CA1 18               [12] 3400 	dec	r0
      000CA2 74 5B            [12] 3401 	mov	a,#0x5B
      000CA4 26               [12] 3402 	add	a,@r0
      000CA5 FA               [12] 3403 	mov	r2,a
      000CA6 E4               [12] 3404 	clr	a
      000CA7 08               [12] 3405 	inc	r0
      000CA8 36               [12] 3406 	addc	a,@r0
      000CA9 FE               [12] 3407 	mov	r6,a
      000CAA 08               [12] 3408 	inc	r0
      000CAB 86 07            [24] 3409 	mov	ar7,@r0
      000CAD 74r00            [12] 3410 	mov	a,#_ipolite
      000CAF C0 E0            [24] 3411 	push	acc
      000CB1 74s00            [12] 3412 	mov	a,#(_ipolite >> 8)
      000CB3 C0 E0            [24] 3413 	push	acc
      000CB5 74 80            [12] 3414 	mov	a,#0x80
      000CB7 C0 E0            [24] 3415 	push	acc
      000CB9 74 01            [12] 3416 	mov	a,#0x01
      000CBB C0 E0            [24] 3417 	push	acc
      000CBD C0 03            [24] 3418 	push	ar3
      000CBF C0 04            [24] 3419 	push	ar4
      000CC1 8A 82            [24] 3420 	mov	dpl,r2
      000CC3 8E 83            [24] 3421 	mov	dph,r6
      000CC5 8F F0            [24] 3422 	mov	b,r7
      000CC7 12r00r00         [24] 3423 	lcall	_ipolite_open
      000CCA E5 81            [12] 3424 	mov	a,sp
      000CCC 24 FA            [12] 3425 	add	a,#0xfa
      000CCE F5 81            [12] 3426 	mov	sp,a
                                   3427 ;	/home/user/contiki/core/net/rime/rudolph1.c:307: c->cb = cb;
      000CD0 A8 81            [24] 3428 	mov	r0,sp
      000CD2 18               [12] 3429 	dec	r0
      000CD3 18               [12] 3430 	dec	r0
      000CD4 74 88            [12] 3431 	mov	a,#0x88
      000CD6 26               [12] 3432 	add	a,@r0
      000CD7 FD               [12] 3433 	mov	r5,a
      000CD8 E4               [12] 3434 	clr	a
      000CD9 08               [12] 3435 	inc	r0
      000CDA 36               [12] 3436 	addc	a,@r0
      000CDB FE               [12] 3437 	mov	r6,a
      000CDC 08               [12] 3438 	inc	r0
      000CDD 86 07            [24] 3439 	mov	ar7,@r0
      000CDF 8D 82            [24] 3440 	mov	dpl,r5
      000CE1 8E 83            [24] 3441 	mov	dph,r6
      000CE3 8F F0            [24] 3442 	mov	b,r7
      000CE5 E5 81            [12] 3443 	mov	a,sp
      000CE7 24 F7            [12] 3444 	add	a,#0xf7
      000CE9 F8               [12] 3445 	mov	r0,a
      000CEA E6               [12] 3446 	mov	a,@r0
      000CEB 12r00r00         [24] 3447 	lcall	__gptrput
      000CEE A3               [24] 3448 	inc	dptr
      000CEF 08               [12] 3449 	inc	r0
      000CF0 E6               [12] 3450 	mov	a,@r0
      000CF1 12r00r00         [24] 3451 	lcall	__gptrput
      000CF4 A3               [24] 3452 	inc	dptr
      000CF5 08               [12] 3453 	inc	r0
      000CF6 E6               [12] 3454 	mov	a,@r0
      000CF7 12r00r00         [24] 3455 	lcall	__gptrput
                                   3456 ;	/home/user/contiki/core/net/rime/rudolph1.c:308: c->version = 0;
      000CFA A8 81            [24] 3457 	mov	r0,sp
      000CFC 18               [12] 3458 	dec	r0
      000CFD 18               [12] 3459 	dec	r0
      000CFE 74 A6            [12] 3460 	mov	a,#0xA6
      000D00 26               [12] 3461 	add	a,@r0
      000D01 FD               [12] 3462 	mov	r5,a
      000D02 E4               [12] 3463 	clr	a
      000D03 08               [12] 3464 	inc	r0
      000D04 36               [12] 3465 	addc	a,@r0
      000D05 FE               [12] 3466 	mov	r6,a
      000D06 08               [12] 3467 	inc	r0
      000D07 86 07            [24] 3468 	mov	ar7,@r0
      000D09 8D 82            [24] 3469 	mov	dpl,r5
      000D0B 8E 83            [24] 3470 	mov	dph,r6
      000D0D 8F F0            [24] 3471 	mov	b,r7
      000D0F E4               [12] 3472 	clr	a
      000D10 12r00r00         [24] 3473 	lcall	__gptrput
                                   3474 ;	/home/user/contiki/core/net/rime/rudolph1.c:309: c->send_interval = DEFAULT_SEND_INTERVAL;
      000D13 A8 81            [24] 3475 	mov	r0,sp
      000D15 18               [12] 3476 	dec	r0
      000D16 18               [12] 3477 	dec	r0
      000D17 74 A0            [12] 3478 	mov	a,#0xA0
      000D19 26               [12] 3479 	add	a,@r0
      000D1A FD               [12] 3480 	mov	r5,a
      000D1B E4               [12] 3481 	clr	a
      000D1C 08               [12] 3482 	inc	r0
      000D1D 36               [12] 3483 	addc	a,@r0
      000D1E FE               [12] 3484 	mov	r6,a
      000D1F 08               [12] 3485 	inc	r0
      000D20 86 07            [24] 3486 	mov	ar7,@r0
      000D22 8D 82            [24] 3487 	mov	dpl,r5
      000D24 8E 83            [24] 3488 	mov	dph,r6
      000D26 8F F0            [24] 3489 	mov	b,r7
      000D28 E4               [12] 3490 	clr	a
      000D29 12r00r00         [24] 3491 	lcall	__gptrput
      000D2C A3               [24] 3492 	inc	dptr
      000D2D 74 01            [12] 3493 	mov	a,#0x01
      000D2F 12r00r00         [24] 3494 	lcall	__gptrput
      000D32 15 81            [12] 3495 	dec	sp
      000D34 15 81            [12] 3496 	dec	sp
      000D36 15 81            [12] 3497 	dec	sp
      000D38 22               [24] 3498 	ret
                                   3499 ;------------------------------------------------------------
                                   3500 ;Allocation info for local variables in function 'rudolph1_close'
                                   3501 ;------------------------------------------------------------
                                   3502 ;c                         Allocated to registers r5 r6 r7 
                                   3503 ;------------------------------------------------------------
                                   3504 ;	/home/user/contiki/core/net/rime/rudolph1.c:313: rudolph1_close(struct rudolph1_conn *c)
                                   3505 ;	-----------------------------------------
                                   3506 ;	 function rudolph1_close
                                   3507 ;	-----------------------------------------
      000D39                       3508 _rudolph1_close:
                                   3509 ;	/home/user/contiki/core/net/rime/rudolph1.c:315: trickle_close(&c->trickle);
      000D39 AD 82            [24] 3510 	mov	r5,dpl
      000D3B AE 83            [24] 3511 	mov	r6,dph
      000D3D AF F0            [24] 3512 	mov	r7,b
      000D3F C0 07            [24] 3513 	push	ar7
      000D41 C0 06            [24] 3514 	push	ar6
      000D43 C0 05            [24] 3515 	push	ar5
      000D45 12r00r00         [24] 3516 	lcall	_trickle_close
      000D48 D0 05            [24] 3517 	pop	ar5
      000D4A D0 06            [24] 3518 	pop	ar6
      000D4C D0 07            [24] 3519 	pop	ar7
                                   3520 ;	/home/user/contiki/core/net/rime/rudolph1.c:316: ipolite_close(&c->ipolite);
      000D4E 74 5B            [12] 3521 	mov	a,#0x5B
      000D50 2D               [12] 3522 	add	a,r5
      000D51 FD               [12] 3523 	mov	r5,a
      000D52 E4               [12] 3524 	clr	a
      000D53 3E               [12] 3525 	addc	a,r6
      000D54 FE               [12] 3526 	mov	r6,a
      000D55 8D 82            [24] 3527 	mov	dpl,r5
      000D57 8E 83            [24] 3528 	mov	dph,r6
      000D59 8F F0            [24] 3529 	mov	b,r7
      000D5B 02r00r00         [24] 3530 	ljmp	_ipolite_close
                                   3531 ;------------------------------------------------------------
                                   3532 ;Allocation info for local variables in function 'rudolph1_send'
                                   3533 ;------------------------------------------------------------
                                   3534 ;send_interval             Allocated to stack - sp -6
                                   3535 ;c                         Allocated to stack - sp -2
                                   3536 ;------------------------------------------------------------
                                   3537 ;	/home/user/contiki/core/net/rime/rudolph1.c:320: rudolph1_send(struct rudolph1_conn *c, clock_time_t send_interval)
                                   3538 ;	-----------------------------------------
                                   3539 ;	 function rudolph1_send
                                   3540 ;	-----------------------------------------
      000D5E                       3541 _rudolph1_send:
      000D5E C0 82            [24] 3542 	push	dpl
      000D60 C0 83            [24] 3543 	push	dph
      000D62 C0 F0            [24] 3544 	push	b
                                   3545 ;	/home/user/contiki/core/net/rime/rudolph1.c:322: c->version++;
      000D64 A8 81            [24] 3546 	mov	r0,sp
      000D66 18               [12] 3547 	dec	r0
      000D67 18               [12] 3548 	dec	r0
      000D68 74 A6            [12] 3549 	mov	a,#0xA6
      000D6A 26               [12] 3550 	add	a,@r0
      000D6B FA               [12] 3551 	mov	r2,a
      000D6C E4               [12] 3552 	clr	a
      000D6D 08               [12] 3553 	inc	r0
      000D6E 36               [12] 3554 	addc	a,@r0
      000D6F FB               [12] 3555 	mov	r3,a
      000D70 08               [12] 3556 	inc	r0
      000D71 86 04            [24] 3557 	mov	ar4,@r0
      000D73 8A 82            [24] 3558 	mov	dpl,r2
      000D75 8B 83            [24] 3559 	mov	dph,r3
      000D77 8C F0            [24] 3560 	mov	b,r4
      000D79 12r00r00         [24] 3561 	lcall	__gptrget
      000D7C FF               [12] 3562 	mov	r7,a
      000D7D 0F               [12] 3563 	inc	r7
      000D7E 8A 82            [24] 3564 	mov	dpl,r2
      000D80 8B 83            [24] 3565 	mov	dph,r3
      000D82 8C F0            [24] 3566 	mov	b,r4
      000D84 EF               [12] 3567 	mov	a,r7
      000D85 12r00r00         [24] 3568 	lcall	__gptrput
                                   3569 ;	/home/user/contiki/core/net/rime/rudolph1.c:323: c->chunk = c->highest_chunk_heard = 0;
      000D88 A8 81            [24] 3570 	mov	r0,sp
      000D8A 18               [12] 3571 	dec	r0
      000D8B 18               [12] 3572 	dec	r0
      000D8C 74 A2            [12] 3573 	mov	a,#0xA2
      000D8E 26               [12] 3574 	add	a,@r0
      000D8F FD               [12] 3575 	mov	r5,a
      000D90 E4               [12] 3576 	clr	a
      000D91 08               [12] 3577 	inc	r0
      000D92 36               [12] 3578 	addc	a,@r0
      000D93 FE               [12] 3579 	mov	r6,a
      000D94 08               [12] 3580 	inc	r0
      000D95 86 07            [24] 3581 	mov	ar7,@r0
      000D97 A8 81            [24] 3582 	mov	r0,sp
      000D99 18               [12] 3583 	dec	r0
      000D9A 18               [12] 3584 	dec	r0
      000D9B 74 A4            [12] 3585 	mov	a,#0xA4
      000D9D 26               [12] 3586 	add	a,@r0
      000D9E FA               [12] 3587 	mov	r2,a
      000D9F E4               [12] 3588 	clr	a
      000DA0 08               [12] 3589 	inc	r0
      000DA1 36               [12] 3590 	addc	a,@r0
      000DA2 FB               [12] 3591 	mov	r3,a
      000DA3 08               [12] 3592 	inc	r0
      000DA4 86 04            [24] 3593 	mov	ar4,@r0
      000DA6 8A 82            [24] 3594 	mov	dpl,r2
      000DA8 8B 83            [24] 3595 	mov	dph,r3
      000DAA 8C F0            [24] 3596 	mov	b,r4
      000DAC E4               [12] 3597 	clr	a
      000DAD 12r00r00         [24] 3598 	lcall	__gptrput
      000DB0 A3               [24] 3599 	inc	dptr
      000DB1 E4               [12] 3600 	clr	a
      000DB2 12r00r00         [24] 3601 	lcall	__gptrput
      000DB5 8D 82            [24] 3602 	mov	dpl,r5
      000DB7 8E 83            [24] 3603 	mov	dph,r6
      000DB9 8F F0            [24] 3604 	mov	b,r7
      000DBB E4               [12] 3605 	clr	a
      000DBC 12r00r00         [24] 3606 	lcall	__gptrput
      000DBF A3               [24] 3607 	inc	dptr
      000DC0 E4               [12] 3608 	clr	a
      000DC1 12r00r00         [24] 3609 	lcall	__gptrput
                                   3610 ;	/home/user/contiki/core/net/rime/rudolph1.c:325: format_data(c, 0);
      000DC4 E4               [12] 3611 	clr	a
      000DC5 C0 E0            [24] 3612 	push	acc
      000DC7 C0 E0            [24] 3613 	push	acc
      000DC9 E5 81            [12] 3614 	mov	a,sp
      000DCB 24 FC            [12] 3615 	add	a,#0xfc
      000DCD F8               [12] 3616 	mov	r0,a
      000DCE 86 82            [24] 3617 	mov	dpl,@r0
      000DD0 08               [12] 3618 	inc	r0
      000DD1 86 83            [24] 3619 	mov	dph,@r0
      000DD3 08               [12] 3620 	inc	r0
      000DD4 86 F0            [24] 3621 	mov	b,@r0
      000DD6 12r00rAA         [24] 3622 	lcall	_format_data
      000DD9 15 81            [12] 3623 	dec	sp
      000DDB 15 81            [12] 3624 	dec	sp
                                   3625 ;	/home/user/contiki/core/net/rime/rudolph1.c:326: trickle_send(&c->trickle);
      000DDD A8 81            [24] 3626 	mov	r0,sp
      000DDF 18               [12] 3627 	dec	r0
      000DE0 18               [12] 3628 	dec	r0
      000DE1 86 82            [24] 3629 	mov	dpl,@r0
      000DE3 08               [12] 3630 	inc	r0
      000DE4 86 83            [24] 3631 	mov	dph,@r0
      000DE6 08               [12] 3632 	inc	r0
      000DE7 86 F0            [24] 3633 	mov	b,@r0
      000DE9 12r00r00         [24] 3634 	lcall	_trickle_send
                                   3635 ;	/home/user/contiki/core/net/rime/rudolph1.c:327: c->chunk++;
      000DEC A8 81            [24] 3636 	mov	r0,sp
      000DEE 18               [12] 3637 	dec	r0
      000DEF 18               [12] 3638 	dec	r0
      000DF0 74 A2            [12] 3639 	mov	a,#0xA2
      000DF2 26               [12] 3640 	add	a,@r0
      000DF3 FD               [12] 3641 	mov	r5,a
      000DF4 E4               [12] 3642 	clr	a
      000DF5 08               [12] 3643 	inc	r0
      000DF6 36               [12] 3644 	addc	a,@r0
      000DF7 FE               [12] 3645 	mov	r6,a
      000DF8 08               [12] 3646 	inc	r0
      000DF9 86 07            [24] 3647 	mov	ar7,@r0
      000DFB 8D 82            [24] 3648 	mov	dpl,r5
      000DFD 8E 83            [24] 3649 	mov	dph,r6
      000DFF 8F F0            [24] 3650 	mov	b,r7
      000E01 12r00r00         [24] 3651 	lcall	__gptrget
      000E04 FB               [12] 3652 	mov	r3,a
      000E05 A3               [24] 3653 	inc	dptr
      000E06 12r00r00         [24] 3654 	lcall	__gptrget
      000E09 FC               [12] 3655 	mov	r4,a
      000E0A 0B               [12] 3656 	inc	r3
      000E0B BB 00 01         [24] 3657 	cjne	r3,#0x00,00103$
      000E0E 0C               [12] 3658 	inc	r4
      000E0F                       3659 00103$:
      000E0F 8D 82            [24] 3660 	mov	dpl,r5
      000E11 8E 83            [24] 3661 	mov	dph,r6
      000E13 8F F0            [24] 3662 	mov	b,r7
      000E15 EB               [12] 3663 	mov	a,r3
      000E16 12r00r00         [24] 3664 	lcall	__gptrput
      000E19 A3               [24] 3665 	inc	dptr
      000E1A EC               [12] 3666 	mov	a,r4
      000E1B 12r00r00         [24] 3667 	lcall	__gptrput
                                   3668 ;	/home/user/contiki/core/net/rime/rudolph1.c:328: c->send_interval = send_interval;
      000E1E A8 81            [24] 3669 	mov	r0,sp
      000E20 18               [12] 3670 	dec	r0
      000E21 18               [12] 3671 	dec	r0
      000E22 74 A0            [12] 3672 	mov	a,#0xA0
      000E24 26               [12] 3673 	add	a,@r0
      000E25 FD               [12] 3674 	mov	r5,a
      000E26 E4               [12] 3675 	clr	a
      000E27 08               [12] 3676 	inc	r0
      000E28 36               [12] 3677 	addc	a,@r0
      000E29 FE               [12] 3678 	mov	r6,a
      000E2A 08               [12] 3679 	inc	r0
      000E2B 86 07            [24] 3680 	mov	ar7,@r0
      000E2D 8D 82            [24] 3681 	mov	dpl,r5
      000E2F 8E 83            [24] 3682 	mov	dph,r6
      000E31 8F F0            [24] 3683 	mov	b,r7
      000E33 E5 81            [12] 3684 	mov	a,sp
      000E35 24 FA            [12] 3685 	add	a,#0xfa
      000E37 F8               [12] 3686 	mov	r0,a
      000E38 E6               [12] 3687 	mov	a,@r0
      000E39 12r00r00         [24] 3688 	lcall	__gptrput
      000E3C A3               [24] 3689 	inc	dptr
      000E3D 08               [12] 3690 	inc	r0
      000E3E E6               [12] 3691 	mov	a,@r0
      000E3F 12r00r00         [24] 3692 	lcall	__gptrput
                                   3693 ;	/home/user/contiki/core/net/rime/rudolph1.c:329: ctimer_set(&c->t, send_interval, send_next_packet, c);
      000E42 A8 81            [24] 3694 	mov	r0,sp
      000E44 18               [12] 3695 	dec	r0
      000E45 18               [12] 3696 	dec	r0
      000E46 86 05            [24] 3697 	mov	ar5,@r0
      000E48 08               [12] 3698 	inc	r0
      000E49 86 06            [24] 3699 	mov	ar6,@r0
      000E4B 08               [12] 3700 	inc	r0
      000E4C 86 07            [24] 3701 	mov	ar7,@r0
      000E4E A8 81            [24] 3702 	mov	r0,sp
      000E50 18               [12] 3703 	dec	r0
      000E51 18               [12] 3704 	dec	r0
      000E52 74 8B            [12] 3705 	mov	a,#0x8B
      000E54 26               [12] 3706 	add	a,@r0
      000E55 FA               [12] 3707 	mov	r2,a
      000E56 E4               [12] 3708 	clr	a
      000E57 08               [12] 3709 	inc	r0
      000E58 36               [12] 3710 	addc	a,@r0
      000E59 FB               [12] 3711 	mov	r3,a
      000E5A 08               [12] 3712 	inc	r0
      000E5B 86 04            [24] 3713 	mov	ar4,@r0
      000E5D C0 05            [24] 3714 	push	ar5
      000E5F C0 06            [24] 3715 	push	ar6
      000E61 C0 07            [24] 3716 	push	ar7
      000E63 74r1D            [12] 3717 	mov	a,#_send_next_packet
      000E65 C0 E0            [24] 3718 	push	acc
      000E67 74s0A            [12] 3719 	mov	a,#(_send_next_packet >> 8)
      000E69 C0 E0            [24] 3720 	push	acc
      000E6B E5 81            [12] 3721 	mov	a,sp
      000E6D 24 F5            [12] 3722 	add	a,#0xf5
      000E6F F8               [12] 3723 	mov	r0,a
      000E70 E6               [12] 3724 	mov	a,@r0
      000E71 C0 E0            [24] 3725 	push	acc
      000E73 08               [12] 3726 	inc	r0
      000E74 E6               [12] 3727 	mov	a,@r0
      000E75 C0 E0            [24] 3728 	push	acc
      000E77 8A 82            [24] 3729 	mov	dpl,r2
      000E79 8B 83            [24] 3730 	mov	dph,r3
      000E7B 8C F0            [24] 3731 	mov	b,r4
      000E7D 12r00r00         [24] 3732 	lcall	_ctimer_set
      000E80 E5 81            [12] 3733 	mov	a,sp
      000E82 24 F9            [12] 3734 	add	a,#0xf9
      000E84 F5 81            [12] 3735 	mov	sp,a
      000E86 15 81            [12] 3736 	dec	sp
      000E88 15 81            [12] 3737 	dec	sp
      000E8A 15 81            [12] 3738 	dec	sp
      000E8C 22               [24] 3739 	ret
                                   3740 ;------------------------------------------------------------
                                   3741 ;Allocation info for local variables in function 'rudolph1_stop'
                                   3742 ;------------------------------------------------------------
                                   3743 ;c                         Allocated to registers r5 r6 r7 
                                   3744 ;------------------------------------------------------------
                                   3745 ;	/home/user/contiki/core/net/rime/rudolph1.c:333: rudolph1_stop(struct rudolph1_conn *c)
                                   3746 ;	-----------------------------------------
                                   3747 ;	 function rudolph1_stop
                                   3748 ;	-----------------------------------------
      000E8D                       3749 _rudolph1_stop:
      000E8D AD 82            [24] 3750 	mov	r5,dpl
      000E8F AE 83            [24] 3751 	mov	r6,dph
      000E91 AF F0            [24] 3752 	mov	r7,b
                                   3753 ;	/home/user/contiki/core/net/rime/rudolph1.c:335: ctimer_stop(&c->t);
      000E93 74 8B            [12] 3754 	mov	a,#0x8B
      000E95 2D               [12] 3755 	add	a,r5
      000E96 FD               [12] 3756 	mov	r5,a
      000E97 E4               [12] 3757 	clr	a
      000E98 3E               [12] 3758 	addc	a,r6
      000E99 FE               [12] 3759 	mov	r6,a
      000E9A 8D 82            [24] 3760 	mov	dpl,r5
      000E9C 8E 83            [24] 3761 	mov	dph,r6
      000E9E 8F F0            [24] 3762 	mov	b,r7
      000EA0 02r00r00         [24] 3763 	ljmp	_ctimer_stop
                                   3764 	.area CSEG    (CODE)
                                   3765 	.area CONST   (CODE)
      000000                       3766 _ipolite:
      000000r43s08                 3767 	.byte _recv_ipolite,(_recv_ipolite >> 8)
      000002r41s08                 3768 	.byte _sent_ipolite,(_sent_ipolite >> 8)
      000004r42s08                 3769 	.byte _dropped_ipolite,(_dropped_ipolite >> 8)
      000006                       3770 _trickle:
      000006r05s08                 3771 	.byte _recv_trickle,(_recv_trickle >> 8)
                                   3772 	.area XINIT   (CODE)
                                   3773 	.area CABS    (ABS,CODE)
