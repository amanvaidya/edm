                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Tue Feb 10 06:19:33 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module rudolph2
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _polite_cancel
                                     13 	.globl _polite_send
                                     14 	.globl _polite_close
                                     15 	.globl _polite_open
                                     16 	.globl _packetbuf_hdrreduce
                                     17 	.globl _packetbuf_hdralloc
                                     18 	.globl _packetbuf_set_datalen
                                     19 	.globl _packetbuf_totlen
                                     20 	.globl _packetbuf_hdrptr
                                     21 	.globl _packetbuf_dataptr
                                     22 	.globl _packetbuf_clear
                                     23 	.globl _ctimer_set
                                     24 	.globl _ACTIVE
                                     25 	.globl _TX_BYTE
                                     26 	.globl _RX_BYTE
                                     27 	.globl _ERR
                                     28 	.globl _FE
                                     29 	.globl _SLAVE
                                     30 	.globl _RE
                                     31 	.globl _MODE
                                     32 	.globl _T3OVFIF
                                     33 	.globl _T3CH0IF
                                     34 	.globl _T3CH1IF
                                     35 	.globl _T4OVFIF
                                     36 	.globl _T4CH0IF
                                     37 	.globl _T4CH1IF
                                     38 	.globl _OVFIM
                                     39 	.globl _B_0
                                     40 	.globl _B_1
                                     41 	.globl _B_2
                                     42 	.globl _B_3
                                     43 	.globl _B_4
                                     44 	.globl _B_5
                                     45 	.globl _B_6
                                     46 	.globl _B_7
                                     47 	.globl _P2IF
                                     48 	.globl _UTX0IF
                                     49 	.globl _UTX1IF
                                     50 	.globl _P1IF
                                     51 	.globl _WDTIF
                                     52 	.globl _ACC_0
                                     53 	.globl _ACC_1
                                     54 	.globl _ACC_2
                                     55 	.globl _ACC_3
                                     56 	.globl _ACC_4
                                     57 	.globl _ACC_5
                                     58 	.globl _ACC_6
                                     59 	.globl _ACC_7
                                     60 	.globl _P
                                     61 	.globl _F1
                                     62 	.globl _OV
                                     63 	.globl _RS0
                                     64 	.globl _RS1
                                     65 	.globl _F0
                                     66 	.globl _AC
                                     67 	.globl _CY
                                     68 	.globl _DMAIF
                                     69 	.globl _T1IF
                                     70 	.globl _T2IF
                                     71 	.globl _T3IF
                                     72 	.globl _T4IF
                                     73 	.globl _P0IF
                                     74 	.globl _STIF
                                     75 	.globl _DMAIE
                                     76 	.globl _T1IE
                                     77 	.globl _T2IE
                                     78 	.globl _T3IE
                                     79 	.globl _T4IE
                                     80 	.globl _P0IE
                                     81 	.globl _RFERRIE
                                     82 	.globl _ADCIE
                                     83 	.globl _URX0IE
                                     84 	.globl _URX1IE
                                     85 	.globl _ENCIE
                                     86 	.globl _STIE
                                     87 	.globl _EA
                                     88 	.globl _P2_0
                                     89 	.globl _P2_1
                                     90 	.globl _P2_2
                                     91 	.globl _P2_3
                                     92 	.globl _P2_4
                                     93 	.globl _P2_5
                                     94 	.globl _P2_6
                                     95 	.globl _P2_7
                                     96 	.globl _ENCIF_0
                                     97 	.globl _ENCIF_1
                                     98 	.globl _P1_0
                                     99 	.globl _P1_1
                                    100 	.globl _P1_2
                                    101 	.globl _P1_3
                                    102 	.globl _P1_4
                                    103 	.globl _P1_5
                                    104 	.globl _P1_6
                                    105 	.globl _P1_7
                                    106 	.globl _IT0
                                    107 	.globl _RFERRIF
                                    108 	.globl _IT1
                                    109 	.globl _URX0IF
                                    110 	.globl _ADCIF
                                    111 	.globl _URX1IF
                                    112 	.globl _P0_0
                                    113 	.globl _P0_1
                                    114 	.globl _P0_2
                                    115 	.globl _P0_3
                                    116 	.globl _P0_4
                                    117 	.globl _P0_5
                                    118 	.globl _P0_6
                                    119 	.globl _P0_7
                                    120 	.globl _WDCTL
                                    121 	.globl _U1GCR
                                    122 	.globl _U1UCR
                                    123 	.globl _U1BAUD
                                    124 	.globl _U1DBUF
                                    125 	.globl _U1CSR
                                    126 	.globl _U0GCR
                                    127 	.globl _U0UCR
                                    128 	.globl _U0BAUD
                                    129 	.globl _U0DBUF
                                    130 	.globl _U0CSR
                                    131 	.globl _TIMIF
                                    132 	.globl _T4CC1
                                    133 	.globl _T4CCTL1
                                    134 	.globl _T4CC0
                                    135 	.globl _T4CCTL0
                                    136 	.globl _T4CTL
                                    137 	.globl _T4CNT
                                    138 	.globl _T3CC1
                                    139 	.globl _T3CCTL1
                                    140 	.globl _T3CC0
                                    141 	.globl _T3CCTL0
                                    142 	.globl _T3CTL
                                    143 	.globl _T3CNT
                                    144 	.globl _T2MSEL
                                    145 	.globl _T2IRQM
                                    146 	.globl _T2MOVF2
                                    147 	.globl _T2MOVF1
                                    148 	.globl _T2MOVF0
                                    149 	.globl _T2M1
                                    150 	.globl _T2M0
                                    151 	.globl _T2IRQF
                                    152 	.globl _T2EVTCFG
                                    153 	.globl _T2CTRL
                                    154 	.globl _T1STAT
                                    155 	.globl _T1CCTL2
                                    156 	.globl _T1CCTL1
                                    157 	.globl _T1CCTL0
                                    158 	.globl _T1CTL
                                    159 	.globl _T1CNTH
                                    160 	.globl _T1CNTL
                                    161 	.globl _T1CC2H
                                    162 	.globl _T1CC2L
                                    163 	.globl _T1CC1H
                                    164 	.globl _T1CC1L
                                    165 	.globl _T1CC0H
                                    166 	.globl _T1CC0L
                                    167 	.globl _CLKCONSTA
                                    168 	.globl _CLKCONCMD
                                    169 	.globl _SLEEPSTA
                                    170 	.globl _SLEEPCMD
                                    171 	.globl _STLOAD
                                    172 	.globl _ST2
                                    173 	.globl _ST1
                                    174 	.globl _ST0
                                    175 	.globl _RFERRF
                                    176 	.globl _RFIRQF0
                                    177 	.globl _RFST
                                    178 	.globl _RFD
                                    179 	.globl _RFIRQF1
                                    180 	.globl _PSBANK
                                    181 	.globl _FMAP
                                    182 	.globl _MEMCTR
                                    183 	.globl __XPAGE
                                    184 	.globl _MPAGE
                                    185 	.globl _PMUX
                                    186 	.globl _P2DIR
                                    187 	.globl _P1DIR
                                    188 	.globl _P0DIR
                                    189 	.globl _P2INP
                                    190 	.globl _P1INP
                                    191 	.globl _P2SEL
                                    192 	.globl _P1SEL
                                    193 	.globl _P0SEL
                                    194 	.globl _APCFG
                                    195 	.globl _PERCFG
                                    196 	.globl _P0INP
                                    197 	.globl _P2IEN
                                    198 	.globl _P1IEN
                                    199 	.globl _P0IEN
                                    200 	.globl _PICTL
                                    201 	.globl _P2IFG
                                    202 	.globl _P1IFG
                                    203 	.globl _P0IFG
                                    204 	.globl _DMAREQ
                                    205 	.globl _DMAARM
                                    206 	.globl _DMA0CFGH
                                    207 	.globl _DMA0CFGL
                                    208 	.globl _DMA1CFGH
                                    209 	.globl _DMA1CFGL
                                    210 	.globl _DMAIRQ
                                    211 	.globl _ENCCS
                                    212 	.globl _ENCDO
                                    213 	.globl _ENCDI
                                    214 	.globl _RNDH
                                    215 	.globl _RNDL
                                    216 	.globl _ADCH
                                    217 	.globl _ADCL
                                    218 	.globl _ADCCON3
                                    219 	.globl _ADCCON2
                                    220 	.globl _ADCCON1
                                    221 	.globl _B
                                    222 	.globl _IRCON2
                                    223 	.globl _ACC
                                    224 	.globl _PSW
                                    225 	.globl _IRCON
                                    226 	.globl _IP1
                                    227 	.globl _IEN1
                                    228 	.globl _IP0
                                    229 	.globl _IEN0
                                    230 	.globl _P2
                                    231 	.globl _S1CON
                                    232 	.globl _IEN2
                                    233 	.globl _S0CON
                                    234 	.globl _DPS
                                    235 	.globl _P1
                                    236 	.globl _TCON
                                    237 	.globl _PCON
                                    238 	.globl _DPH1
                                    239 	.globl _DPL1
                                    240 	.globl _DPH0
                                    241 	.globl _DPL0
                                    242 	.globl _SP
                                    243 	.globl _P0
                                    244 	.globl _X_IEEE_ADDR
                                    245 	.globl _X_INFOPAGE
                                    246 	.globl _X_P2DIR
                                    247 	.globl _X_P1DIR
                                    248 	.globl _X_P0DIR
                                    249 	.globl _X_U1GCR
                                    250 	.globl _X_U1UCR
                                    251 	.globl _X_U1BAUD
                                    252 	.globl _X_U1DBUF
                                    253 	.globl _X_U1CSR
                                    254 	.globl _X_P2INP
                                    255 	.globl _X_P1INP
                                    256 	.globl _X_P2SEL
                                    257 	.globl _X_P1SEL
                                    258 	.globl _X_P0SEL
                                    259 	.globl _X_APCFG
                                    260 	.globl _X_PERCFG
                                    261 	.globl _X_T4CC1
                                    262 	.globl _X_T4CCTL1
                                    263 	.globl _X_T4CC0
                                    264 	.globl _X_T4CCTL0
                                    265 	.globl _X_T4CTL
                                    266 	.globl _X_T4CNT
                                    267 	.globl _X_RFIRQF0
                                    268 	.globl _X_T1CCTL2
                                    269 	.globl _X_T1CCTL1
                                    270 	.globl _X_T1CCTL0
                                    271 	.globl _X_T1CTL
                                    272 	.globl _X_T1CNTH
                                    273 	.globl _X_T1CNTL
                                    274 	.globl _X_RFST
                                    275 	.globl _X_T1CC2H
                                    276 	.globl _X_T1CC2L
                                    277 	.globl _X_T1CC1H
                                    278 	.globl _X_T1CC1L
                                    279 	.globl _X_T1CC0H
                                    280 	.globl _X_T1CC0L
                                    281 	.globl _X_RFD
                                    282 	.globl _X_TIMIF
                                    283 	.globl _X_DMAREQ
                                    284 	.globl _X_DMAARM
                                    285 	.globl _X_DMA0CFGH
                                    286 	.globl _X_DMA0CFGL
                                    287 	.globl _X_DMA1CFGH
                                    288 	.globl _X_DMA1CFGL
                                    289 	.globl _X_DMAIRQ
                                    290 	.globl _X_T3CC1
                                    291 	.globl _X_T3CCTL1
                                    292 	.globl _X_T3CC0
                                    293 	.globl _X_T3CCTL0
                                    294 	.globl _X_T3CTL
                                    295 	.globl _X_T3CNT
                                    296 	.globl _X_WDCTL
                                    297 	.globl _X_MEMCTR
                                    298 	.globl _X_CLKCONCMD
                                    299 	.globl _X_U0GCR
                                    300 	.globl _X_U0UCR
                                    301 	.globl _X_T2MSEL
                                    302 	.globl _X_U0BAUD
                                    303 	.globl _X_U0DBUF
                                    304 	.globl _X_RFERRF
                                    305 	.globl _X_SLEEPCMD
                                    306 	.globl _X_RNDH
                                    307 	.globl _X_RNDL
                                    308 	.globl _X_ADCH
                                    309 	.globl _X_ADCL
                                    310 	.globl _X_ADCCON3
                                    311 	.globl _X_ADCCON2
                                    312 	.globl _X_ADCCON1
                                    313 	.globl _X_ENCCS
                                    314 	.globl _X_ENCDO
                                    315 	.globl _X_ENCDI
                                    316 	.globl _X_T1STAT
                                    317 	.globl _X_PMUX
                                    318 	.globl _X_STLOAD
                                    319 	.globl _X_P2IEN
                                    320 	.globl _X_P0IEN
                                    321 	.globl _X_T2IRQM
                                    322 	.globl _X_T2MOVF2
                                    323 	.globl _X_T2MOVF1
                                    324 	.globl _X_T2MOVF0
                                    325 	.globl _X_T2M1
                                    326 	.globl _X_T2M0
                                    327 	.globl _X_T2IRQF
                                    328 	.globl _X_P2
                                    329 	.globl _X_PSBANK
                                    330 	.globl _X_FMAP
                                    331 	.globl _X_CLKCONSTA
                                    332 	.globl _X_SLEEPSTA
                                    333 	.globl _X_T2EVTCFG
                                    334 	.globl _X_ST2
                                    335 	.globl _X_ST1
                                    336 	.globl _X_ST0
                                    337 	.globl _X_T2CTRL
                                    338 	.globl _X__XPAGE
                                    339 	.globl _X_MPAGE
                                    340 	.globl _X_RFIRQF1
                                    341 	.globl _X_P1
                                    342 	.globl _X_P0INP
                                    343 	.globl _X_P1IEN
                                    344 	.globl _X_PICTL
                                    345 	.globl _X_P2IFG
                                    346 	.globl _X_P1IFG
                                    347 	.globl _X_P0IFG
                                    348 	.globl _X_U0CSR
                                    349 	.globl _X_P0
                                    350 	.globl _USBF5
                                    351 	.globl _USBF4
                                    352 	.globl _USBF3
                                    353 	.globl _USBF2
                                    354 	.globl _USBF1
                                    355 	.globl _USBF0
                                    356 	.globl _USBCNTH
                                    357 	.globl _USBCNTL
                                    358 	.globl _USBCNT0
                                    359 	.globl _USBCSOH
                                    360 	.globl _USBCSOL
                                    361 	.globl _USBMAXO
                                    362 	.globl _USBCSIH
                                    363 	.globl _USBCSIL
                                    364 	.globl _USBCS0
                                    365 	.globl _USBMAXI
                                    366 	.globl _USBCTRL
                                    367 	.globl _USBINDEX
                                    368 	.globl _USBFRMH
                                    369 	.globl _USBFRML
                                    370 	.globl _USBCIE
                                    371 	.globl _USBOIE
                                    372 	.globl _USBIIE
                                    373 	.globl _USBCIF
                                    374 	.globl _USBOIF
                                    375 	.globl _USBIIF
                                    376 	.globl _USBPOW
                                    377 	.globl _USBADDR
                                    378 	.globl _CSPT
                                    379 	.globl _CSPZ
                                    380 	.globl _CSPY
                                    381 	.globl _CSPX
                                    382 	.globl _CSPSTAT
                                    383 	.globl _CSPCTRL
                                    384 	.globl _CSPPROG23
                                    385 	.globl _CSPPROG22
                                    386 	.globl _CSPPROG21
                                    387 	.globl _CSPPROG20
                                    388 	.globl _CSPPROG19
                                    389 	.globl _CSPPROG18
                                    390 	.globl _CSPPROG17
                                    391 	.globl _CSPPROG16
                                    392 	.globl _CSPPROG15
                                    393 	.globl _CSPPROG14
                                    394 	.globl _CSPPROG13
                                    395 	.globl _CSPPROG12
                                    396 	.globl _CSPPROG11
                                    397 	.globl _CSPPROG10
                                    398 	.globl _CSPPROG9
                                    399 	.globl _CSPPROG8
                                    400 	.globl _CSPPROG7
                                    401 	.globl _CSPPROG6
                                    402 	.globl _CSPPROG5
                                    403 	.globl _CSPPROG4
                                    404 	.globl _CSPPROG3
                                    405 	.globl _CSPPROG2
                                    406 	.globl _CSPPROG1
                                    407 	.globl _CSPPROG0
                                    408 	.globl _RFC_OBS_CTRL2
                                    409 	.globl _RFC_OBS_CTRL1
                                    410 	.globl _RFC_OBS_CTRL0
                                    411 	.globl _TXFILTCFG
                                    412 	.globl _PTEST1
                                    413 	.globl _PTEST0
                                    414 	.globl _ATEST
                                    415 	.globl _DACTEST2
                                    416 	.globl _DACTEST1
                                    417 	.globl _DACTEST0
                                    418 	.globl _MDMTEST1
                                    419 	.globl _MDMTEST0
                                    420 	.globl _ADCTEST2
                                    421 	.globl _ADCTEST1
                                    422 	.globl _ADCTEST0
                                    423 	.globl _AGCCTRL3
                                    424 	.globl _AGCCTRL2
                                    425 	.globl _AGCCTRL1
                                    426 	.globl _AGCCTRL0
                                    427 	.globl _FSCAL3
                                    428 	.globl _FSCAL2
                                    429 	.globl _FSCAL1
                                    430 	.globl _FSCAL0
                                    431 	.globl _FSCTRL
                                    432 	.globl _RXCTRL
                                    433 	.globl _FREQEST
                                    434 	.globl _MDMCTRL1
                                    435 	.globl _MDMCTRL0
                                    436 	.globl _RFRND
                                    437 	.globl _RFERRM
                                    438 	.globl _RFIRQM1
                                    439 	.globl _RFIRQM0
                                    440 	.globl _TXLAST_PTR
                                    441 	.globl _TXFIRST_PTR
                                    442 	.globl _RXP1_PTR
                                    443 	.globl _RXLAST_PTR
                                    444 	.globl _RXFIRST_PTR
                                    445 	.globl _TXFIFOCNT
                                    446 	.globl _RXFIFOCNT
                                    447 	.globl _RXFIRST
                                    448 	.globl _RSSISTAT
                                    449 	.globl _RSSI
                                    450 	.globl _CCACTRL1
                                    451 	.globl _CCACTRL0
                                    452 	.globl _FSMCTRL
                                    453 	.globl _FIFOPCTRL
                                    454 	.globl _FSMSTAT1
                                    455 	.globl _FSMSTAT0
                                    456 	.globl _TXCTRL
                                    457 	.globl _TXPOWER
                                    458 	.globl _FREQCTRL
                                    459 	.globl _FREQTUNE
                                    460 	.globl _RXMASKCLR
                                    461 	.globl _RXMASKSET
                                    462 	.globl _RXENABLE
                                    463 	.globl _FRMCTRL1
                                    464 	.globl _FRMCTRL0
                                    465 	.globl _SRCEXTEN2
                                    466 	.globl _SRCEXTEN1
                                    467 	.globl _SRCEXTEN0
                                    468 	.globl _SRCSHORTEN2
                                    469 	.globl _SRCSHORTEN1
                                    470 	.globl _SRCSHORTEN0
                                    471 	.globl _SRCMATCH
                                    472 	.globl _FRMFILT1
                                    473 	.globl _FRMFILT0
                                    474 	.globl _SHORT_ADDR1
                                    475 	.globl _SHORT_ADDR0
                                    476 	.globl _PAN_ID1
                                    477 	.globl _PAN_ID0
                                    478 	.globl _EXT_ADDR7
                                    479 	.globl _EXT_ADDR6
                                    480 	.globl _EXT_ADDR5
                                    481 	.globl _EXT_ADDR4
                                    482 	.globl _EXT_ADDR3
                                    483 	.globl _EXT_ADDR2
                                    484 	.globl _EXT_ADDR1
                                    485 	.globl _EXT_ADDR0
                                    486 	.globl _SRCSHORTPENDEN2
                                    487 	.globl _SRCSHORTPENDEN1
                                    488 	.globl _SRCSHORTPENDEN0
                                    489 	.globl _SRCEXTPENDEN2
                                    490 	.globl _SRCEXTPENDEN1
                                    491 	.globl _SRCEXTPENDEN0
                                    492 	.globl _SRCRESINDEX
                                    493 	.globl _SRCRESMASK2
                                    494 	.globl _SRCRESMASK1
                                    495 	.globl _SRCRESMASK0
                                    496 	.globl _SRC_ADDR_TABLE
                                    497 	.globl _TXFIFO
                                    498 	.globl _RXFIFO
                                    499 	.globl _RFCORE_RAM
                                    500 	.globl _CMPCTL
                                    501 	.globl _OPAMPS
                                    502 	.globl _OPAMPC
                                    503 	.globl _STCV2
                                    504 	.globl _STCV1
                                    505 	.globl _STCV0
                                    506 	.globl _STCS
                                    507 	.globl _STCC
                                    508 	.globl _T1CC4H
                                    509 	.globl _T1CC4L
                                    510 	.globl _T1CC3H
                                    511 	.globl _T1CC3L
                                    512 	.globl _XX_T1CC2H
                                    513 	.globl _XX_T1CC2L
                                    514 	.globl _XX_T1CC1H
                                    515 	.globl _XX_T1CC1L
                                    516 	.globl _XX_T1CC0H
                                    517 	.globl _XX_T1CC0L
                                    518 	.globl _T1CCTL4
                                    519 	.globl _T1CCTL3
                                    520 	.globl _XX_T1CCTL2
                                    521 	.globl _XX_T1CCTL1
                                    522 	.globl _XX_T1CCTL0
                                    523 	.globl _CLD
                                    524 	.globl _IRCTL
                                    525 	.globl _CHIPINFO1
                                    526 	.globl _CHIPINFO0
                                    527 	.globl _FWDATA
                                    528 	.globl _FADDRH
                                    529 	.globl _FADDRL
                                    530 	.globl _FCTL
                                    531 	.globl _IVCTRL
                                    532 	.globl _BATTMON
                                    533 	.globl _SRCRC
                                    534 	.globl _DBGDATA
                                    535 	.globl _TESTREG0
                                    536 	.globl _CHIPID
                                    537 	.globl _CHVER
                                    538 	.globl _OBSSEL5
                                    539 	.globl _OBSSEL4
                                    540 	.globl _OBSSEL3
                                    541 	.globl _OBSSEL2
                                    542 	.globl _OBSSEL1
                                    543 	.globl _OBSSEL0
                                    544 	.globl _I2CIO
                                    545 	.globl _I2CWC
                                    546 	.globl _I2CADDR
                                    547 	.globl _I2CDATA
                                    548 	.globl _I2CSTAT
                                    549 	.globl _I2CCFG
                                    550 	.globl _OPAMPMC
                                    551 	.globl _MONMUX
                                    552 	.globl _rudolph2_open
                                    553 	.globl _rudolph2_close
                                    554 	.globl _rudolph2_send
                                    555 	.globl _rudolph2_stop
                                    556 ;--------------------------------------------------------
                                    557 ; special function registers
                                    558 ;--------------------------------------------------------
                                    559 	.area RSEG    (ABS,DATA)
      000000                        560 	.org 0x0000
                           000080   561 _P0	=	0x0080
                           000081   562 _SP	=	0x0081
                           000082   563 _DPL0	=	0x0082
                           000083   564 _DPH0	=	0x0083
                           000084   565 _DPL1	=	0x0084
                           000085   566 _DPH1	=	0x0085
                           000087   567 _PCON	=	0x0087
                           000088   568 _TCON	=	0x0088
                           000090   569 _P1	=	0x0090
                           000092   570 _DPS	=	0x0092
                           000098   571 _S0CON	=	0x0098
                           00009A   572 _IEN2	=	0x009a
                           00009B   573 _S1CON	=	0x009b
                           0000A0   574 _P2	=	0x00a0
                           0000A8   575 _IEN0	=	0x00a8
                           0000A9   576 _IP0	=	0x00a9
                           0000B8   577 _IEN1	=	0x00b8
                           0000B9   578 _IP1	=	0x00b9
                           0000C0   579 _IRCON	=	0x00c0
                           0000D0   580 _PSW	=	0x00d0
                           0000E0   581 _ACC	=	0x00e0
                           0000E8   582 _IRCON2	=	0x00e8
                           0000F0   583 _B	=	0x00f0
                           0000B4   584 _ADCCON1	=	0x00b4
                           0000B5   585 _ADCCON2	=	0x00b5
                           0000B6   586 _ADCCON3	=	0x00b6
                           0000BA   587 _ADCL	=	0x00ba
                           0000BB   588 _ADCH	=	0x00bb
                           0000BC   589 _RNDL	=	0x00bc
                           0000BD   590 _RNDH	=	0x00bd
                           0000B1   591 _ENCDI	=	0x00b1
                           0000B2   592 _ENCDO	=	0x00b2
                           0000B3   593 _ENCCS	=	0x00b3
                           0000D1   594 _DMAIRQ	=	0x00d1
                           0000D2   595 _DMA1CFGL	=	0x00d2
                           0000D3   596 _DMA1CFGH	=	0x00d3
                           0000D4   597 _DMA0CFGL	=	0x00d4
                           0000D5   598 _DMA0CFGH	=	0x00d5
                           0000D6   599 _DMAARM	=	0x00d6
                           0000D7   600 _DMAREQ	=	0x00d7
                           000089   601 _P0IFG	=	0x0089
                           00008A   602 _P1IFG	=	0x008a
                           00008B   603 _P2IFG	=	0x008b
                           00008C   604 _PICTL	=	0x008c
                           0000AB   605 _P0IEN	=	0x00ab
                           00008D   606 _P1IEN	=	0x008d
                           0000AC   607 _P2IEN	=	0x00ac
                           00008F   608 _P0INP	=	0x008f
                           0000F1   609 _PERCFG	=	0x00f1
                           0000F2   610 _APCFG	=	0x00f2
                           0000F3   611 _P0SEL	=	0x00f3
                           0000F4   612 _P1SEL	=	0x00f4
                           0000F5   613 _P2SEL	=	0x00f5
                           0000F6   614 _P1INP	=	0x00f6
                           0000F7   615 _P2INP	=	0x00f7
                           0000FD   616 _P0DIR	=	0x00fd
                           0000FE   617 _P1DIR	=	0x00fe
                           0000FF   618 _P2DIR	=	0x00ff
                           0000AE   619 _PMUX	=	0x00ae
                           000093   620 _MPAGE	=	0x0093
                           000093   621 __XPAGE	=	0x0093
                           0000C7   622 _MEMCTR	=	0x00c7
                           00009F   623 _FMAP	=	0x009f
                           00009F   624 _PSBANK	=	0x009f
                           000091   625 _RFIRQF1	=	0x0091
                           0000D9   626 _RFD	=	0x00d9
                           0000E1   627 _RFST	=	0x00e1
                           0000E9   628 _RFIRQF0	=	0x00e9
                           0000BF   629 _RFERRF	=	0x00bf
                           000095   630 _ST0	=	0x0095
                           000096   631 _ST1	=	0x0096
                           000097   632 _ST2	=	0x0097
                           0000AD   633 _STLOAD	=	0x00ad
                           0000BE   634 _SLEEPCMD	=	0x00be
                           00009D   635 _SLEEPSTA	=	0x009d
                           0000C6   636 _CLKCONCMD	=	0x00c6
                           00009E   637 _CLKCONSTA	=	0x009e
                           0000DA   638 _T1CC0L	=	0x00da
                           0000DB   639 _T1CC0H	=	0x00db
                           0000DC   640 _T1CC1L	=	0x00dc
                           0000DD   641 _T1CC1H	=	0x00dd
                           0000DE   642 _T1CC2L	=	0x00de
                           0000DF   643 _T1CC2H	=	0x00df
                           0000E2   644 _T1CNTL	=	0x00e2
                           0000E3   645 _T1CNTH	=	0x00e3
                           0000E4   646 _T1CTL	=	0x00e4
                           0000E5   647 _T1CCTL0	=	0x00e5
                           0000E6   648 _T1CCTL1	=	0x00e6
                           0000E7   649 _T1CCTL2	=	0x00e7
                           0000AF   650 _T1STAT	=	0x00af
                           000094   651 _T2CTRL	=	0x0094
                           00009C   652 _T2EVTCFG	=	0x009c
                           0000A1   653 _T2IRQF	=	0x00a1
                           0000A2   654 _T2M0	=	0x00a2
                           0000A3   655 _T2M1	=	0x00a3
                           0000A4   656 _T2MOVF0	=	0x00a4
                           0000A5   657 _T2MOVF1	=	0x00a5
                           0000A6   658 _T2MOVF2	=	0x00a6
                           0000A7   659 _T2IRQM	=	0x00a7
                           0000C3   660 _T2MSEL	=	0x00c3
                           0000CA   661 _T3CNT	=	0x00ca
                           0000CB   662 _T3CTL	=	0x00cb
                           0000CC   663 _T3CCTL0	=	0x00cc
                           0000CD   664 _T3CC0	=	0x00cd
                           0000CE   665 _T3CCTL1	=	0x00ce
                           0000CF   666 _T3CC1	=	0x00cf
                           0000EA   667 _T4CNT	=	0x00ea
                           0000EB   668 _T4CTL	=	0x00eb
                           0000EC   669 _T4CCTL0	=	0x00ec
                           0000ED   670 _T4CC0	=	0x00ed
                           0000EE   671 _T4CCTL1	=	0x00ee
                           0000EF   672 _T4CC1	=	0x00ef
                           0000D8   673 _TIMIF	=	0x00d8
                           000086   674 _U0CSR	=	0x0086
                           0000C1   675 _U0DBUF	=	0x00c1
                           0000C2   676 _U0BAUD	=	0x00c2
                           0000C4   677 _U0UCR	=	0x00c4
                           0000C5   678 _U0GCR	=	0x00c5
                           0000F8   679 _U1CSR	=	0x00f8
                           0000F9   680 _U1DBUF	=	0x00f9
                           0000FA   681 _U1BAUD	=	0x00fa
                           0000FB   682 _U1UCR	=	0x00fb
                           0000FC   683 _U1GCR	=	0x00fc
                           0000C9   684 _WDCTL	=	0x00c9
                                    685 ;--------------------------------------------------------
                                    686 ; special function bits
                                    687 ;--------------------------------------------------------
                                    688 	.area RSEG    (ABS,DATA)
      000000                        689 	.org 0x0000
                           000087   690 _P0_7	=	0x0087
                           000086   691 _P0_6	=	0x0086
                           000085   692 _P0_5	=	0x0085
                           000084   693 _P0_4	=	0x0084
                           000083   694 _P0_3	=	0x0083
                           000082   695 _P0_2	=	0x0082
                           000081   696 _P0_1	=	0x0081
                           000080   697 _P0_0	=	0x0080
                           00008F   698 _URX1IF	=	0x008f
                           00008D   699 _ADCIF	=	0x008d
                           00008B   700 _URX0IF	=	0x008b
                           00008A   701 _IT1	=	0x008a
                           000089   702 _RFERRIF	=	0x0089
                           000088   703 _IT0	=	0x0088
                           000097   704 _P1_7	=	0x0097
                           000096   705 _P1_6	=	0x0096
                           000095   706 _P1_5	=	0x0095
                           000094   707 _P1_4	=	0x0094
                           000093   708 _P1_3	=	0x0093
                           000092   709 _P1_2	=	0x0092
                           000091   710 _P1_1	=	0x0091
                           000090   711 _P1_0	=	0x0090
                           000099   712 _ENCIF_1	=	0x0099
                           000098   713 _ENCIF_0	=	0x0098
                           0000A7   714 _P2_7	=	0x00a7
                           0000A6   715 _P2_6	=	0x00a6
                           0000A5   716 _P2_5	=	0x00a5
                           0000A4   717 _P2_4	=	0x00a4
                           0000A3   718 _P2_3	=	0x00a3
                           0000A2   719 _P2_2	=	0x00a2
                           0000A1   720 _P2_1	=	0x00a1
                           0000A0   721 _P2_0	=	0x00a0
                           0000AF   722 _EA	=	0x00af
                           0000AD   723 _STIE	=	0x00ad
                           0000AC   724 _ENCIE	=	0x00ac
                           0000AB   725 _URX1IE	=	0x00ab
                           0000AA   726 _URX0IE	=	0x00aa
                           0000A9   727 _ADCIE	=	0x00a9
                           0000A8   728 _RFERRIE	=	0x00a8
                           0000BD   729 _P0IE	=	0x00bd
                           0000BC   730 _T4IE	=	0x00bc
                           0000BB   731 _T3IE	=	0x00bb
                           0000BA   732 _T2IE	=	0x00ba
                           0000B9   733 _T1IE	=	0x00b9
                           0000B8   734 _DMAIE	=	0x00b8
                           0000C7   735 _STIF	=	0x00c7
                           0000C5   736 _P0IF	=	0x00c5
                           0000C4   737 _T4IF	=	0x00c4
                           0000C3   738 _T3IF	=	0x00c3
                           0000C2   739 _T2IF	=	0x00c2
                           0000C1   740 _T1IF	=	0x00c1
                           0000C0   741 _DMAIF	=	0x00c0
                           0000D7   742 _CY	=	0x00d7
                           0000D6   743 _AC	=	0x00d6
                           0000D5   744 _F0	=	0x00d5
                           0000D4   745 _RS1	=	0x00d4
                           0000D3   746 _RS0	=	0x00d3
                           0000D2   747 _OV	=	0x00d2
                           0000D1   748 _F1	=	0x00d1
                           0000D0   749 _P	=	0x00d0
                           0000E7   750 _ACC_7	=	0x00e7
                           0000E6   751 _ACC_6	=	0x00e6
                           0000E5   752 _ACC_5	=	0x00e5
                           0000E4   753 _ACC_4	=	0x00e4
                           0000E3   754 _ACC_3	=	0x00e3
                           0000E2   755 _ACC_2	=	0x00e2
                           0000E1   756 _ACC_1	=	0x00e1
                           0000E0   757 _ACC_0	=	0x00e0
                           0000EC   758 _WDTIF	=	0x00ec
                           0000EB   759 _P1IF	=	0x00eb
                           0000EA   760 _UTX1IF	=	0x00ea
                           0000E9   761 _UTX0IF	=	0x00e9
                           0000E8   762 _P2IF	=	0x00e8
                           0000F7   763 _B_7	=	0x00f7
                           0000F6   764 _B_6	=	0x00f6
                           0000F5   765 _B_5	=	0x00f5
                           0000F4   766 _B_4	=	0x00f4
                           0000F3   767 _B_3	=	0x00f3
                           0000F2   768 _B_2	=	0x00f2
                           0000F1   769 _B_1	=	0x00f1
                           0000F0   770 _B_0	=	0x00f0
                           0000DE   771 _OVFIM	=	0x00de
                           0000DD   772 _T4CH1IF	=	0x00dd
                           0000DC   773 _T4CH0IF	=	0x00dc
                           0000DB   774 _T4OVFIF	=	0x00db
                           0000DA   775 _T3CH1IF	=	0x00da
                           0000D9   776 _T3CH0IF	=	0x00d9
                           0000D8   777 _T3OVFIF	=	0x00d8
                           0000FF   778 _MODE	=	0x00ff
                           0000FE   779 _RE	=	0x00fe
                           0000FD   780 _SLAVE	=	0x00fd
                           0000FC   781 _FE	=	0x00fc
                           0000FB   782 _ERR	=	0x00fb
                           0000FA   783 _RX_BYTE	=	0x00fa
                           0000F9   784 _TX_BYTE	=	0x00f9
                           0000F8   785 _ACTIVE	=	0x00f8
                                    786 ;--------------------------------------------------------
                                    787 ; overlayable register banks
                                    788 ;--------------------------------------------------------
                                    789 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        790 	.ds 8
                                    791 ;--------------------------------------------------------
                                    792 ; internal ram data
                                    793 ;--------------------------------------------------------
                                    794 	.area DSEG    (DATA)
                                    795 ;--------------------------------------------------------
                                    796 ; overlayable items in internal ram 
                                    797 ;--------------------------------------------------------
                                    798 ;--------------------------------------------------------
                                    799 ; indirectly addressable internal ram data
                                    800 ;--------------------------------------------------------
                                    801 	.area ISEG    (DATA)
                                    802 ;--------------------------------------------------------
                                    803 ; absolute internal ram data
                                    804 ;--------------------------------------------------------
                                    805 	.area IABS    (ABS,DATA)
                                    806 	.area IABS    (ABS,DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; bit data
                                    809 ;--------------------------------------------------------
                                    810 	.area BSEG    (BIT)
                                    811 ;--------------------------------------------------------
                                    812 ; paged external ram data
                                    813 ;--------------------------------------------------------
                                    814 	.area PSEG    (PAG,XDATA)
                                    815 ;--------------------------------------------------------
                                    816 ; external ram data
                                    817 ;--------------------------------------------------------
                                    818 	.area XSEG    (XDATA)
                           0061A6   819 _MONMUX	=	0x61a6
                           0061A6   820 _OPAMPMC	=	0x61a6
                           006230   821 _I2CCFG	=	0x6230
                           006231   822 _I2CSTAT	=	0x6231
                           006232   823 _I2CDATA	=	0x6232
                           006233   824 _I2CADDR	=	0x6233
                           006234   825 _I2CWC	=	0x6234
                           006235   826 _I2CIO	=	0x6235
                           006243   827 _OBSSEL0	=	0x6243
                           006244   828 _OBSSEL1	=	0x6244
                           006245   829 _OBSSEL2	=	0x6245
                           006246   830 _OBSSEL3	=	0x6246
                           006247   831 _OBSSEL4	=	0x6247
                           006248   832 _OBSSEL5	=	0x6248
                           006249   833 _CHVER	=	0x6249
                           00624A   834 _CHIPID	=	0x624a
                           00624B   835 _TESTREG0	=	0x624b
                           006260   836 _DBGDATA	=	0x6260
                           006262   837 _SRCRC	=	0x6262
                           006264   838 _BATTMON	=	0x6264
                           006265   839 _IVCTRL	=	0x6265
                           006270   840 _FCTL	=	0x6270
                           006271   841 _FADDRL	=	0x6271
                           006272   842 _FADDRH	=	0x6272
                           006273   843 _FWDATA	=	0x6273
                           006276   844 _CHIPINFO0	=	0x6276
                           006277   845 _CHIPINFO1	=	0x6277
                           006281   846 _IRCTL	=	0x6281
                           006290   847 _CLD	=	0x6290
                           0062A0   848 _XX_T1CCTL0	=	0x62a0
                           0062A1   849 _XX_T1CCTL1	=	0x62a1
                           0062A2   850 _XX_T1CCTL2	=	0x62a2
                           0062A3   851 _T1CCTL3	=	0x62a3
                           0062A4   852 _T1CCTL4	=	0x62a4
                           0062A6   853 _XX_T1CC0L	=	0x62a6
                           0062A7   854 _XX_T1CC0H	=	0x62a7
                           0062A8   855 _XX_T1CC1L	=	0x62a8
                           0062A9   856 _XX_T1CC1H	=	0x62a9
                           0062AA   857 _XX_T1CC2L	=	0x62aa
                           0062AB   858 _XX_T1CC2H	=	0x62ab
                           0062AC   859 _T1CC3L	=	0x62ac
                           0062AD   860 _T1CC3H	=	0x62ad
                           0062AE   861 _T1CC4L	=	0x62ae
                           0062AF   862 _T1CC4H	=	0x62af
                           0062B0   863 _STCC	=	0x62b0
                           0062B1   864 _STCS	=	0x62b1
                           0062B2   865 _STCV0	=	0x62b2
                           0062B3   866 _STCV1	=	0x62b3
                           0062B4   867 _STCV2	=	0x62b4
                           0062C0   868 _OPAMPC	=	0x62c0
                           0062C1   869 _OPAMPS	=	0x62c1
                           0062D0   870 _CMPCTL	=	0x62d0
                           006000   871 _RFCORE_RAM	=	0x6000
                           006000   872 _RXFIFO	=	0x6000
                           006080   873 _TXFIFO	=	0x6080
                           006100   874 _SRC_ADDR_TABLE	=	0x6100
                           006160   875 _SRCRESMASK0	=	0x6160
                           006161   876 _SRCRESMASK1	=	0x6161
                           006162   877 _SRCRESMASK2	=	0x6162
                           006163   878 _SRCRESINDEX	=	0x6163
                           006164   879 _SRCEXTPENDEN0	=	0x6164
                           006165   880 _SRCEXTPENDEN1	=	0x6165
                           006166   881 _SRCEXTPENDEN2	=	0x6166
                           006167   882 _SRCSHORTPENDEN0	=	0x6167
                           006168   883 _SRCSHORTPENDEN1	=	0x6168
                           006169   884 _SRCSHORTPENDEN2	=	0x6169
                           00616A   885 _EXT_ADDR0	=	0x616a
                           00616B   886 _EXT_ADDR1	=	0x616b
                           00616C   887 _EXT_ADDR2	=	0x616c
                           00616D   888 _EXT_ADDR3	=	0x616d
                           00616E   889 _EXT_ADDR4	=	0x616e
                           00616F   890 _EXT_ADDR5	=	0x616f
                           006170   891 _EXT_ADDR6	=	0x6170
                           006171   892 _EXT_ADDR7	=	0x6171
                           006172   893 _PAN_ID0	=	0x6172
                           006173   894 _PAN_ID1	=	0x6173
                           006174   895 _SHORT_ADDR0	=	0x6174
                           006175   896 _SHORT_ADDR1	=	0x6175
                           006180   897 _FRMFILT0	=	0x6180
                           006181   898 _FRMFILT1	=	0x6181
                           006182   899 _SRCMATCH	=	0x6182
                           006183   900 _SRCSHORTEN0	=	0x6183
                           006184   901 _SRCSHORTEN1	=	0x6184
                           006185   902 _SRCSHORTEN2	=	0x6185
                           006186   903 _SRCEXTEN0	=	0x6186
                           006187   904 _SRCEXTEN1	=	0x6187
                           006188   905 _SRCEXTEN2	=	0x6188
                           006189   906 _FRMCTRL0	=	0x6189
                           00618A   907 _FRMCTRL1	=	0x618a
                           00618B   908 _RXENABLE	=	0x618b
                           00618C   909 _RXMASKSET	=	0x618c
                           00618D   910 _RXMASKCLR	=	0x618d
                           00618E   911 _FREQTUNE	=	0x618e
                           00618F   912 _FREQCTRL	=	0x618f
                           006190   913 _TXPOWER	=	0x6190
                           006191   914 _TXCTRL	=	0x6191
                           006192   915 _FSMSTAT0	=	0x6192
                           006193   916 _FSMSTAT1	=	0x6193
                           006194   917 _FIFOPCTRL	=	0x6194
                           006195   918 _FSMCTRL	=	0x6195
                           006196   919 _CCACTRL0	=	0x6196
                           006197   920 _CCACTRL1	=	0x6197
                           006198   921 _RSSI	=	0x6198
                           006199   922 _RSSISTAT	=	0x6199
                           00619A   923 _RXFIRST	=	0x619a
                           00619B   924 _RXFIFOCNT	=	0x619b
                           00619C   925 _TXFIFOCNT	=	0x619c
                           00619D   926 _RXFIRST_PTR	=	0x619d
                           00619E   927 _RXLAST_PTR	=	0x619e
                           00619F   928 _RXP1_PTR	=	0x619f
                           0061A1   929 _TXFIRST_PTR	=	0x61a1
                           0061A2   930 _TXLAST_PTR	=	0x61a2
                           0061A3   931 _RFIRQM0	=	0x61a3
                           0061A4   932 _RFIRQM1	=	0x61a4
                           0061A5   933 _RFERRM	=	0x61a5
                           0061A7   934 _RFRND	=	0x61a7
                           0061A8   935 _MDMCTRL0	=	0x61a8
                           0061A9   936 _MDMCTRL1	=	0x61a9
                           0061AA   937 _FREQEST	=	0x61aa
                           0061AB   938 _RXCTRL	=	0x61ab
                           0061AC   939 _FSCTRL	=	0x61ac
                           0061AD   940 _FSCAL0	=	0x61ad
                           0061AE   941 _FSCAL1	=	0x61ae
                           0061AF   942 _FSCAL2	=	0x61af
                           0061B0   943 _FSCAL3	=	0x61b0
                           0061B1   944 _AGCCTRL0	=	0x61b1
                           0061B2   945 _AGCCTRL1	=	0x61b2
                           0061B3   946 _AGCCTRL2	=	0x61b3
                           0061B4   947 _AGCCTRL3	=	0x61b4
                           0061B5   948 _ADCTEST0	=	0x61b5
                           0061B6   949 _ADCTEST1	=	0x61b6
                           0061B7   950 _ADCTEST2	=	0x61b7
                           0061B8   951 _MDMTEST0	=	0x61b8
                           0061B9   952 _MDMTEST1	=	0x61b9
                           0061BA   953 _DACTEST0	=	0x61ba
                           0061BB   954 _DACTEST1	=	0x61bb
                           0061BC   955 _DACTEST2	=	0x61bc
                           0061BD   956 _ATEST	=	0x61bd
                           0061BE   957 _PTEST0	=	0x61be
                           0061BF   958 _PTEST1	=	0x61bf
                           0061FA   959 _TXFILTCFG	=	0x61fa
                           0061EB   960 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   961 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   962 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   963 _CSPPROG0	=	0x61c0
                           0061C1   964 _CSPPROG1	=	0x61c1
                           0061C2   965 _CSPPROG2	=	0x61c2
                           0061C3   966 _CSPPROG3	=	0x61c3
                           0061C4   967 _CSPPROG4	=	0x61c4
                           0061C5   968 _CSPPROG5	=	0x61c5
                           0061C6   969 _CSPPROG6	=	0x61c6
                           0061C7   970 _CSPPROG7	=	0x61c7
                           0061C8   971 _CSPPROG8	=	0x61c8
                           0061C9   972 _CSPPROG9	=	0x61c9
                           0061CA   973 _CSPPROG10	=	0x61ca
                           0061CB   974 _CSPPROG11	=	0x61cb
                           0061CC   975 _CSPPROG12	=	0x61cc
                           0061CD   976 _CSPPROG13	=	0x61cd
                           0061CE   977 _CSPPROG14	=	0x61ce
                           0061CF   978 _CSPPROG15	=	0x61cf
                           0061D0   979 _CSPPROG16	=	0x61d0
                           0061D1   980 _CSPPROG17	=	0x61d1
                           0061D2   981 _CSPPROG18	=	0x61d2
                           0061D3   982 _CSPPROG19	=	0x61d3
                           0061D4   983 _CSPPROG20	=	0x61d4
                           0061D5   984 _CSPPROG21	=	0x61d5
                           0061D6   985 _CSPPROG22	=	0x61d6
                           0061D7   986 _CSPPROG23	=	0x61d7
                           0061E0   987 _CSPCTRL	=	0x61e0
                           0061E1   988 _CSPSTAT	=	0x61e1
                           0061E2   989 _CSPX	=	0x61e2
                           0061E3   990 _CSPY	=	0x61e3
                           0061E4   991 _CSPZ	=	0x61e4
                           0061E5   992 _CSPT	=	0x61e5
                           006200   993 _USBADDR	=	0x6200
                           006201   994 _USBPOW	=	0x6201
                           006202   995 _USBIIF	=	0x6202
                           006204   996 _USBOIF	=	0x6204
                           006206   997 _USBCIF	=	0x6206
                           006207   998 _USBIIE	=	0x6207
                           006209   999 _USBOIE	=	0x6209
                           00620B  1000 _USBCIE	=	0x620b
                           00620C  1001 _USBFRML	=	0x620c
                           00620D  1002 _USBFRMH	=	0x620d
                           00620E  1003 _USBINDEX	=	0x620e
                           00620F  1004 _USBCTRL	=	0x620f
                           006210  1005 _USBMAXI	=	0x6210
                           006211  1006 _USBCS0	=	0x6211
                           006211  1007 _USBCSIL	=	0x6211
                           006212  1008 _USBCSIH	=	0x6212
                           006213  1009 _USBMAXO	=	0x6213
                           006214  1010 _USBCSOL	=	0x6214
                           006215  1011 _USBCSOH	=	0x6215
                           006216  1012 _USBCNT0	=	0x6216
                           006216  1013 _USBCNTL	=	0x6216
                           006217  1014 _USBCNTH	=	0x6217
                           006220  1015 _USBF0	=	0x6220
                           006222  1016 _USBF1	=	0x6222
                           006224  1017 _USBF2	=	0x6224
                           006226  1018 _USBF3	=	0x6226
                           006228  1019 _USBF4	=	0x6228
                           00622A  1020 _USBF5	=	0x622a
                           007080  1021 _X_P0	=	0x7080
                           007086  1022 _X_U0CSR	=	0x7086
                           007089  1023 _X_P0IFG	=	0x7089
                           00708A  1024 _X_P1IFG	=	0x708a
                           00708B  1025 _X_P2IFG	=	0x708b
                           00708C  1026 _X_PICTL	=	0x708c
                           00708D  1027 _X_P1IEN	=	0x708d
                           00708F  1028 _X_P0INP	=	0x708f
                           007090  1029 _X_P1	=	0x7090
                           007091  1030 _X_RFIRQF1	=	0x7091
                           007093  1031 _X_MPAGE	=	0x7093
                           007093  1032 _X__XPAGE	=	0x7093
                           007094  1033 _X_T2CTRL	=	0x7094
                           007095  1034 _X_ST0	=	0x7095
                           007096  1035 _X_ST1	=	0x7096
                           007097  1036 _X_ST2	=	0x7097
                           00709C  1037 _X_T2EVTCFG	=	0x709c
                           00709D  1038 _X_SLEEPSTA	=	0x709d
                           00709E  1039 _X_CLKCONSTA	=	0x709e
                           00709F  1040 _X_FMAP	=	0x709f
                           00709F  1041 _X_PSBANK	=	0x709f
                           0070A0  1042 _X_P2	=	0x70a0
                           0070A1  1043 _X_T2IRQF	=	0x70a1
                           0070A2  1044 _X_T2M0	=	0x70a2
                           0070A3  1045 _X_T2M1	=	0x70a3
                           0070A4  1046 _X_T2MOVF0	=	0x70a4
                           0070A5  1047 _X_T2MOVF1	=	0x70a5
                           0070A6  1048 _X_T2MOVF2	=	0x70a6
                           0070A7  1049 _X_T2IRQM	=	0x70a7
                           0070AB  1050 _X_P0IEN	=	0x70ab
                           0070AC  1051 _X_P2IEN	=	0x70ac
                           0070AD  1052 _X_STLOAD	=	0x70ad
                           0070AE  1053 _X_PMUX	=	0x70ae
                           0070AF  1054 _X_T1STAT	=	0x70af
                           0070B1  1055 _X_ENCDI	=	0x70b1
                           0070B2  1056 _X_ENCDO	=	0x70b2
                           0070B3  1057 _X_ENCCS	=	0x70b3
                           0070B4  1058 _X_ADCCON1	=	0x70b4
                           0070B5  1059 _X_ADCCON2	=	0x70b5
                           0070B6  1060 _X_ADCCON3	=	0x70b6
                           0070BA  1061 _X_ADCL	=	0x70ba
                           0070BB  1062 _X_ADCH	=	0x70bb
                           0070BC  1063 _X_RNDL	=	0x70bc
                           0070BD  1064 _X_RNDH	=	0x70bd
                           0070BE  1065 _X_SLEEPCMD	=	0x70be
                           0070BF  1066 _X_RFERRF	=	0x70bf
                           0070C1  1067 _X_U0DBUF	=	0x70c1
                           0070C2  1068 _X_U0BAUD	=	0x70c2
                           0070C3  1069 _X_T2MSEL	=	0x70c3
                           0070C4  1070 _X_U0UCR	=	0x70c4
                           0070C5  1071 _X_U0GCR	=	0x70c5
                           0070C6  1072 _X_CLKCONCMD	=	0x70c6
                           0070C7  1073 _X_MEMCTR	=	0x70c7
                           0070C9  1074 _X_WDCTL	=	0x70c9
                           0070CA  1075 _X_T3CNT	=	0x70ca
                           0070CB  1076 _X_T3CTL	=	0x70cb
                           0070CC  1077 _X_T3CCTL0	=	0x70cc
                           0070CD  1078 _X_T3CC0	=	0x70cd
                           0070CE  1079 _X_T3CCTL1	=	0x70ce
                           0070CF  1080 _X_T3CC1	=	0x70cf
                           0070D1  1081 _X_DMAIRQ	=	0x70d1
                           0070D2  1082 _X_DMA1CFGL	=	0x70d2
                           0070D3  1083 _X_DMA1CFGH	=	0x70d3
                           0070D4  1084 _X_DMA0CFGL	=	0x70d4
                           0070D5  1085 _X_DMA0CFGH	=	0x70d5
                           0070D6  1086 _X_DMAARM	=	0x70d6
                           0070D7  1087 _X_DMAREQ	=	0x70d7
                           0070D8  1088 _X_TIMIF	=	0x70d8
                           0070D9  1089 _X_RFD	=	0x70d9
                           0070DA  1090 _X_T1CC0L	=	0x70da
                           0070DB  1091 _X_T1CC0H	=	0x70db
                           0070DC  1092 _X_T1CC1L	=	0x70dc
                           0070DD  1093 _X_T1CC1H	=	0x70dd
                           0070DE  1094 _X_T1CC2L	=	0x70de
                           0070DF  1095 _X_T1CC2H	=	0x70df
                           0070E1  1096 _X_RFST	=	0x70e1
                           0070E2  1097 _X_T1CNTL	=	0x70e2
                           0070E3  1098 _X_T1CNTH	=	0x70e3
                           0070E4  1099 _X_T1CTL	=	0x70e4
                           0070E5  1100 _X_T1CCTL0	=	0x70e5
                           0070E6  1101 _X_T1CCTL1	=	0x70e6
                           0070E7  1102 _X_T1CCTL2	=	0x70e7
                           0070E9  1103 _X_RFIRQF0	=	0x70e9
                           0070EA  1104 _X_T4CNT	=	0x70ea
                           0070EB  1105 _X_T4CTL	=	0x70eb
                           0070EC  1106 _X_T4CCTL0	=	0x70ec
                           0070ED  1107 _X_T4CC0	=	0x70ed
                           0070EE  1108 _X_T4CCTL1	=	0x70ee
                           0070EF  1109 _X_T4CC1	=	0x70ef
                           0070F1  1110 _X_PERCFG	=	0x70f1
                           0070F2  1111 _X_APCFG	=	0x70f2
                           0070F3  1112 _X_P0SEL	=	0x70f3
                           0070F4  1113 _X_P1SEL	=	0x70f4
                           0070F5  1114 _X_P2SEL	=	0x70f5
                           0070F6  1115 _X_P1INP	=	0x70f6
                           0070F7  1116 _X_P2INP	=	0x70f7
                           0070F8  1117 _X_U1CSR	=	0x70f8
                           0070F9  1118 _X_U1DBUF	=	0x70f9
                           0070FA  1119 _X_U1BAUD	=	0x70fa
                           0070FB  1120 _X_U1UCR	=	0x70fb
                           0070FC  1121 _X_U1GCR	=	0x70fc
                           0070FD  1122 _X_P0DIR	=	0x70fd
                           0070FE  1123 _X_P1DIR	=	0x70fe
                           0070FF  1124 _X_P2DIR	=	0x70ff
                           007800  1125 _X_INFOPAGE	=	0x7800
                           00780C  1126 _X_IEEE_ADDR	=	0x780c
                                   1127 ;--------------------------------------------------------
                                   1128 ; absolute external ram data
                                   1129 ;--------------------------------------------------------
                                   1130 	.area XABS    (ABS,XDATA)
                                   1131 ;--------------------------------------------------------
                                   1132 ; external initialized ram data
                                   1133 ;--------------------------------------------------------
                                   1134 	.area XISEG   (XDATA)
                                   1135 	.area HOME    (CODE)
                                   1136 	.area GSINIT0 (CODE)
                                   1137 	.area GSINIT1 (CODE)
                                   1138 	.area GSINIT2 (CODE)
                                   1139 	.area GSINIT3 (CODE)
                                   1140 	.area GSINIT4 (CODE)
                                   1141 	.area GSINIT5 (CODE)
                                   1142 	.area GSINIT  (CODE)
                                   1143 	.area GSFINAL (CODE)
                                   1144 	.area CSEG    (CODE)
                                   1145 ;--------------------------------------------------------
                                   1146 ; global & static initialisations
                                   1147 ;--------------------------------------------------------
                                   1148 	.area HOME    (CODE)
                                   1149 	.area GSINIT  (CODE)
                                   1150 	.area GSFINAL (CODE)
                                   1151 	.area GSINIT  (CODE)
                                   1152 ;--------------------------------------------------------
                                   1153 ; Home
                                   1154 ;--------------------------------------------------------
                                   1155 	.area HOME    (CODE)
                                   1156 	.area HOME    (CODE)
                                   1157 ;--------------------------------------------------------
                                   1158 ; code
                                   1159 ;--------------------------------------------------------
                                   1160 	.area CSEG    (CODE)
                                   1161 ;------------------------------------------------------------
                                   1162 ;Allocation info for local variables in function 'read_data'
                                   1163 ;------------------------------------------------------------
                                   1164 ;dataptr                   Allocated to stack - sp -7
                                   1165 ;chunk                     Allocated to stack - sp -9
                                   1166 ;c                         Allocated to stack - sp -2
                                   1167 ;len                       Allocated to registers r3 r4 
                                   1168 ;------------------------------------------------------------
                                   1169 ;	/home/user/contiki/core/net/rime/rudolph2.c:96: read_data(struct rudolph2_conn *c, uint8_t *dataptr, int chunk)
                                   1170 ;	-----------------------------------------
                                   1171 ;	 function read_data
                                   1172 ;	-----------------------------------------
      000000                       1173 _read_data:
                           000007  1174 	ar7 = 0x07
                           000006  1175 	ar6 = 0x06
                           000005  1176 	ar5 = 0x05
                           000004  1177 	ar4 = 0x04
                           000003  1178 	ar3 = 0x03
                           000002  1179 	ar2 = 0x02
                           000001  1180 	ar1 = 0x01
                           000000  1181 	ar0 = 0x00
      000000 C0 82            [24] 1182 	push	dpl
      000002 C0 83            [24] 1183 	push	dph
      000004 C0 F0            [24] 1184 	push	b
                                   1185 ;	/home/user/contiki/core/net/rime/rudolph2.c:98: int len = 0;
      000006 7B 00            [12] 1186 	mov	r3,#0x00
      000008 7C 00            [12] 1187 	mov	r4,#0x00
                                   1188 ;	/home/user/contiki/core/net/rime/rudolph2.c:100: if(c->cb->read_chunk) {
      00000A A8 81            [24] 1189 	mov	r0,sp
      00000C 18               [12] 1190 	dec	r0
      00000D 18               [12] 1191 	dec	r0
      00000E 74 28            [12] 1192 	mov	a,#0x28
      000010 26               [12] 1193 	add	a,@r0
      000011 FA               [12] 1194 	mov	r2,a
      000012 E4               [12] 1195 	clr	a
      000013 08               [12] 1196 	inc	r0
      000014 36               [12] 1197 	addc	a,@r0
      000015 FE               [12] 1198 	mov	r6,a
      000016 08               [12] 1199 	inc	r0
      000017 86 07            [24] 1200 	mov	ar7,@r0
      000019 8A 82            [24] 1201 	mov	dpl,r2
      00001B 8E 83            [24] 1202 	mov	dph,r6
      00001D 8F F0            [24] 1203 	mov	b,r7
      00001F 12r00r00         [24] 1204 	lcall	__gptrget
      000022 FA               [12] 1205 	mov	r2,a
      000023 A3               [24] 1206 	inc	dptr
      000024 12r00r00         [24] 1207 	lcall	__gptrget
      000027 FE               [12] 1208 	mov	r6,a
      000028 A3               [24] 1209 	inc	dptr
      000029 12r00r00         [24] 1210 	lcall	__gptrget
      00002C FF               [12] 1211 	mov	r7,a
      00002D 74 02            [12] 1212 	mov	a,#0x02
      00002F 2A               [12] 1213 	add	a,r2
      000030 FA               [12] 1214 	mov	r2,a
      000031 E4               [12] 1215 	clr	a
      000032 3E               [12] 1216 	addc	a,r6
      000033 FE               [12] 1217 	mov	r6,a
      000034 8A 82            [24] 1218 	mov	dpl,r2
      000036 8E 83            [24] 1219 	mov	dph,r6
      000038 8F F0            [24] 1220 	mov	b,r7
      00003A 12r00r00         [24] 1221 	lcall	__gptrget
      00003D FE               [12] 1222 	mov	r6,a
      00003E A3               [24] 1223 	inc	dptr
      00003F 12r00r00         [24] 1224 	lcall	__gptrget
      000042 FF               [12] 1225 	mov	r7,a
      000043 4E               [12] 1226 	orl	a,r6
      000044 60 59            [24] 1227 	jz	00102$
                                   1228 ;	/home/user/contiki/core/net/rime/rudolph2.c:101: len = c->cb->read_chunk(c, chunk * RUDOLPH2_DATASIZE,
      000046 E5 81            [12] 1229 	mov	a,sp
      000048 24 F7            [12] 1230 	add	a,#0xf7
      00004A F8               [12] 1231 	mov	r0,a
      00004B 86 02            [24] 1232 	mov	ar2,@r0
      00004D 08               [12] 1233 	inc	r0
      00004E E6               [12] 1234 	mov	a,@r0
      00004F 54 03            [12] 1235 	anl	a,#0x03
      000051 A2 E0            [12] 1236 	mov	c,acc.0
      000053 CA               [12] 1237 	xch	a,r2
      000054 13               [12] 1238 	rrc	a
      000055 CA               [12] 1239 	xch	a,r2
      000056 13               [12] 1240 	rrc	a
      000057 A2 E0            [12] 1241 	mov	c,acc.0
      000059 CA               [12] 1242 	xch	a,r2
      00005A 13               [12] 1243 	rrc	a
      00005B CA               [12] 1244 	xch	a,r2
      00005C 13               [12] 1245 	rrc	a
      00005D CA               [12] 1246 	xch	a,r2
      00005E FD               [12] 1247 	mov	r5,a
      00005F 74 40            [12] 1248 	mov	a,#0x40
      000061 C0 E0            [24] 1249 	push	acc
      000063 E4               [12] 1250 	clr	a
      000064 C0 E0            [24] 1251 	push	acc
      000066 E5 81            [12] 1252 	mov	a,sp
      000068 24 F7            [12] 1253 	add	a,#0xf7
      00006A F8               [12] 1254 	mov	r0,a
      00006B E6               [12] 1255 	mov	a,@r0
      00006C C0 E0            [24] 1256 	push	acc
      00006E 08               [12] 1257 	inc	r0
      00006F E6               [12] 1258 	mov	a,@r0
      000070 C0 E0            [24] 1259 	push	acc
      000072 08               [12] 1260 	inc	r0
      000073 E6               [12] 1261 	mov	a,@r0
      000074 C0 E0            [24] 1262 	push	acc
      000076 C0 02            [24] 1263 	push	ar2
      000078 C0 05            [24] 1264 	push	ar5
      00007A 12r00r7F         [24] 1265 	lcall	00109$
      00007D 80 12            [24] 1266 	sjmp	00110$
      00007F                       1267 00109$:
      00007F C0 06            [24] 1268 	push	ar6
      000081 C0 07            [24] 1269 	push	ar7
      000083 E5 81            [12] 1270 	mov	a,sp
      000085 24 F3            [12] 1271 	add	a,#0xf3
      000087 F8               [12] 1272 	mov	r0,a
      000088 86 82            [24] 1273 	mov	dpl,@r0
      00008A 08               [12] 1274 	inc	r0
      00008B 86 83            [24] 1275 	mov	dph,@r0
      00008D 08               [12] 1276 	inc	r0
      00008E 86 F0            [24] 1277 	mov	b,@r0
      000090 22               [24] 1278 	ret
      000091                       1279 00110$:
      000091 AE 82            [24] 1280 	mov	r6,dpl
      000093 AF 83            [24] 1281 	mov	r7,dph
      000095 E5 81            [12] 1282 	mov	a,sp
      000097 24 F9            [12] 1283 	add	a,#0xf9
      000099 F5 81            [12] 1284 	mov	sp,a
      00009B 8E 03            [24] 1285 	mov	ar3,r6
      00009D 8F 04            [24] 1286 	mov	ar4,r7
      00009F                       1287 00102$:
                                   1288 ;	/home/user/contiki/core/net/rime/rudolph2.c:104: return len;
      00009F 8B 82            [24] 1289 	mov	dpl,r3
      0000A1 8C 83            [24] 1290 	mov	dph,r4
      0000A3 15 81            [12] 1291 	dec	sp
      0000A5 15 81            [12] 1292 	dec	sp
      0000A7 15 81            [12] 1293 	dec	sp
      0000A9 22               [24] 1294 	ret
                                   1295 ;------------------------------------------------------------
                                   1296 ;Allocation info for local variables in function 'format_data'
                                   1297 ;------------------------------------------------------------
                                   1298 ;chunk                     Allocated to stack - sp -9
                                   1299 ;c                         Allocated to stack - sp -5
                                   1300 ;hdr                       Allocated to stack - sp -2
                                   1301 ;len                       Allocated to registers r6 r7 
                                   1302 ;------------------------------------------------------------
                                   1303 ;	/home/user/contiki/core/net/rime/rudolph2.c:108: format_data(struct rudolph2_conn *c, int chunk)
                                   1304 ;	-----------------------------------------
                                   1305 ;	 function format_data
                                   1306 ;	-----------------------------------------
      0000AA                       1307 _format_data:
      0000AA C0 82            [24] 1308 	push	dpl
      0000AC C0 83            [24] 1309 	push	dph
      0000AE C0 F0            [24] 1310 	push	b
      0000B0 05 81            [12] 1311 	inc	sp
      0000B2 05 81            [12] 1312 	inc	sp
      0000B4 05 81            [12] 1313 	inc	sp
                                   1314 ;	/home/user/contiki/core/net/rime/rudolph2.c:113: packetbuf_clear();
      0000B6 12r00r00         [24] 1315 	lcall	_packetbuf_clear
                                   1316 ;	/home/user/contiki/core/net/rime/rudolph2.c:114: hdr = packetbuf_dataptr();
      0000B9 12r00r00         [24] 1317 	lcall	_packetbuf_dataptr
      0000BC AA 82            [24] 1318 	mov	r2,dpl
      0000BE AB 83            [24] 1319 	mov	r3,dph
      0000C0 AC F0            [24] 1320 	mov	r4,b
      0000C2 A8 81            [24] 1321 	mov	r0,sp
      0000C4 18               [12] 1322 	dec	r0
      0000C5 18               [12] 1323 	dec	r0
      0000C6 A6 02            [24] 1324 	mov	@r0,ar2
      0000C8 08               [12] 1325 	inc	r0
      0000C9 A6 03            [24] 1326 	mov	@r0,ar3
      0000CB 08               [12] 1327 	inc	r0
      0000CC A6 04            [24] 1328 	mov	@r0,ar4
                                   1329 ;	/home/user/contiki/core/net/rime/rudolph2.c:115: hdr->type = TYPE_DATA;
      0000CE A8 81            [24] 1330 	mov	r0,sp
      0000D0 18               [12] 1331 	dec	r0
      0000D1 18               [12] 1332 	dec	r0
      0000D2 86 82            [24] 1333 	mov	dpl,@r0
      0000D4 08               [12] 1334 	inc	r0
      0000D5 86 83            [24] 1335 	mov	dph,@r0
      0000D7 08               [12] 1336 	inc	r0
      0000D8 86 F0            [24] 1337 	mov	b,@r0
      0000DA E4               [12] 1338 	clr	a
      0000DB 12r00r00         [24] 1339 	lcall	__gptrput
                                   1340 ;	/home/user/contiki/core/net/rime/rudolph2.c:116: hdr->hops_from_base = c->hops_from_base;
      0000DE A8 81            [24] 1341 	mov	r0,sp
      0000E0 18               [12] 1342 	dec	r0
      0000E1 18               [12] 1343 	dec	r0
      0000E2 74 01            [12] 1344 	mov	a,#0x01
      0000E4 26               [12] 1345 	add	a,@r0
      0000E5 FD               [12] 1346 	mov	r5,a
      0000E6 E4               [12] 1347 	clr	a
      0000E7 08               [12] 1348 	inc	r0
      0000E8 36               [12] 1349 	addc	a,@r0
      0000E9 FE               [12] 1350 	mov	r6,a
      0000EA 08               [12] 1351 	inc	r0
      0000EB 86 07            [24] 1352 	mov	ar7,@r0
      0000ED E5 81            [12] 1353 	mov	a,sp
      0000EF 24 FB            [12] 1354 	add	a,#0xfb
      0000F1 F8               [12] 1355 	mov	r0,a
      0000F2 74 46            [12] 1356 	mov	a,#0x46
      0000F4 26               [12] 1357 	add	a,@r0
      0000F5 FA               [12] 1358 	mov	r2,a
      0000F6 E4               [12] 1359 	clr	a
      0000F7 08               [12] 1360 	inc	r0
      0000F8 36               [12] 1361 	addc	a,@r0
      0000F9 FB               [12] 1362 	mov	r3,a
      0000FA 08               [12] 1363 	inc	r0
      0000FB 86 04            [24] 1364 	mov	ar4,@r0
      0000FD 8A 82            [24] 1365 	mov	dpl,r2
      0000FF 8B 83            [24] 1366 	mov	dph,r3
      000101 8C F0            [24] 1367 	mov	b,r4
      000103 12r00r00         [24] 1368 	lcall	__gptrget
      000106 8D 82            [24] 1369 	mov	dpl,r5
      000108 8E 83            [24] 1370 	mov	dph,r6
      00010A 8F F0            [24] 1371 	mov	b,r7
      00010C 12r00r00         [24] 1372 	lcall	__gptrput
                                   1373 ;	/home/user/contiki/core/net/rime/rudolph2.c:117: hdr->version = c->version;
      00010F A8 81            [24] 1374 	mov	r0,sp
      000111 18               [12] 1375 	dec	r0
      000112 18               [12] 1376 	dec	r0
      000113 74 02            [12] 1377 	mov	a,#0x02
      000115 26               [12] 1378 	add	a,@r0
      000116 FD               [12] 1379 	mov	r5,a
      000117 E4               [12] 1380 	clr	a
      000118 08               [12] 1381 	inc	r0
      000119 36               [12] 1382 	addc	a,@r0
      00011A FE               [12] 1383 	mov	r6,a
      00011B 08               [12] 1384 	inc	r0
      00011C 86 07            [24] 1385 	mov	ar7,@r0
      00011E E5 81            [12] 1386 	mov	a,sp
      000120 24 FB            [12] 1387 	add	a,#0xfb
      000122 F8               [12] 1388 	mov	r0,a
      000123 74 44            [12] 1389 	mov	a,#0x44
      000125 26               [12] 1390 	add	a,@r0
      000126 FA               [12] 1391 	mov	r2,a
      000127 E4               [12] 1392 	clr	a
      000128 08               [12] 1393 	inc	r0
      000129 36               [12] 1394 	addc	a,@r0
      00012A FB               [12] 1395 	mov	r3,a
      00012B 08               [12] 1396 	inc	r0
      00012C 86 04            [24] 1397 	mov	ar4,@r0
      00012E 8A 82            [24] 1398 	mov	dpl,r2
      000130 8B 83            [24] 1399 	mov	dph,r3
      000132 8C F0            [24] 1400 	mov	b,r4
      000134 12r00r00         [24] 1401 	lcall	__gptrget
      000137 FA               [12] 1402 	mov	r2,a
      000138 A3               [24] 1403 	inc	dptr
      000139 12r00r00         [24] 1404 	lcall	__gptrget
      00013C FB               [12] 1405 	mov	r3,a
      00013D 8D 82            [24] 1406 	mov	dpl,r5
      00013F 8E 83            [24] 1407 	mov	dph,r6
      000141 8F F0            [24] 1408 	mov	b,r7
      000143 EA               [12] 1409 	mov	a,r2
      000144 12r00r00         [24] 1410 	lcall	__gptrput
      000147 A3               [24] 1411 	inc	dptr
      000148 EB               [12] 1412 	mov	a,r3
      000149 12r00r00         [24] 1413 	lcall	__gptrput
                                   1414 ;	/home/user/contiki/core/net/rime/rudolph2.c:118: hdr->chunk = chunk;
      00014C A8 81            [24] 1415 	mov	r0,sp
      00014E 18               [12] 1416 	dec	r0
      00014F 18               [12] 1417 	dec	r0
      000150 74 04            [12] 1418 	mov	a,#0x04
      000152 26               [12] 1419 	add	a,@r0
      000153 FD               [12] 1420 	mov	r5,a
      000154 E4               [12] 1421 	clr	a
      000155 08               [12] 1422 	inc	r0
      000156 36               [12] 1423 	addc	a,@r0
      000157 FE               [12] 1424 	mov	r6,a
      000158 08               [12] 1425 	inc	r0
      000159 86 07            [24] 1426 	mov	ar7,@r0
      00015B 8D 82            [24] 1427 	mov	dpl,r5
      00015D 8E 83            [24] 1428 	mov	dph,r6
      00015F 8F F0            [24] 1429 	mov	b,r7
      000161 E5 81            [12] 1430 	mov	a,sp
      000163 24 F7            [12] 1431 	add	a,#0xf7
      000165 F8               [12] 1432 	mov	r0,a
      000166 E6               [12] 1433 	mov	a,@r0
      000167 12r00r00         [24] 1434 	lcall	__gptrput
      00016A A3               [24] 1435 	inc	dptr
      00016B 08               [12] 1436 	inc	r0
      00016C E6               [12] 1437 	mov	a,@r0
      00016D 12r00r00         [24] 1438 	lcall	__gptrput
                                   1439 ;	/home/user/contiki/core/net/rime/rudolph2.c:119: len = read_data(c, (uint8_t *)hdr + sizeof(struct rudolph2_hdr), chunk);
      000170 A8 81            [24] 1440 	mov	r0,sp
      000172 18               [12] 1441 	dec	r0
      000173 18               [12] 1442 	dec	r0
      000174 86 02            [24] 1443 	mov	ar2,@r0
      000176 08               [12] 1444 	inc	r0
      000177 86 03            [24] 1445 	mov	ar3,@r0
      000179 08               [12] 1446 	inc	r0
      00017A 86 04            [24] 1447 	mov	ar4,@r0
      00017C 74 06            [12] 1448 	mov	a,#0x06
      00017E 2A               [12] 1449 	add	a,r2
      00017F FA               [12] 1450 	mov	r2,a
      000180 E4               [12] 1451 	clr	a
      000181 3B               [12] 1452 	addc	a,r3
      000182 FB               [12] 1453 	mov	r3,a
      000183 E5 81            [12] 1454 	mov	a,sp
      000185 24 F7            [12] 1455 	add	a,#0xf7
      000187 F8               [12] 1456 	mov	r0,a
      000188 E6               [12] 1457 	mov	a,@r0
      000189 C0 E0            [24] 1458 	push	acc
      00018B 08               [12] 1459 	inc	r0
      00018C E6               [12] 1460 	mov	a,@r0
      00018D C0 E0            [24] 1461 	push	acc
      00018F C0 02            [24] 1462 	push	ar2
      000191 C0 03            [24] 1463 	push	ar3
      000193 C0 04            [24] 1464 	push	ar4
      000195 E5 81            [12] 1465 	mov	a,sp
      000197 24 F6            [12] 1466 	add	a,#0xf6
      000199 F8               [12] 1467 	mov	r0,a
      00019A 86 82            [24] 1468 	mov	dpl,@r0
      00019C 08               [12] 1469 	inc	r0
      00019D 86 83            [24] 1470 	mov	dph,@r0
      00019F 08               [12] 1471 	inc	r0
      0001A0 86 F0            [24] 1472 	mov	b,@r0
      0001A2 12r00r00         [24] 1473 	lcall	_read_data
      0001A5 AE 82            [24] 1474 	mov	r6,dpl
      0001A7 AF 83            [24] 1475 	mov	r7,dph
      0001A9 E5 81            [12] 1476 	mov	a,sp
      0001AB 24 FB            [12] 1477 	add	a,#0xfb
      0001AD F5 81            [12] 1478 	mov	sp,a
                                   1479 ;	/home/user/contiki/core/net/rime/rudolph2.c:120: packetbuf_set_datalen(sizeof(struct rudolph2_hdr) + len);
      0001AF 74 06            [12] 1480 	mov	a,#0x06
      0001B1 2E               [12] 1481 	add	a,r6
      0001B2 FC               [12] 1482 	mov	r4,a
      0001B3 E4               [12] 1483 	clr	a
      0001B4 3F               [12] 1484 	addc	a,r7
      0001B5 FD               [12] 1485 	mov	r5,a
      0001B6 8C 82            [24] 1486 	mov	dpl,r4
      0001B8 8D 83            [24] 1487 	mov	dph,r5
      0001BA C0 07            [24] 1488 	push	ar7
      0001BC C0 06            [24] 1489 	push	ar6
      0001BE 12r00r00         [24] 1490 	lcall	_packetbuf_set_datalen
      0001C1 D0 06            [24] 1491 	pop	ar6
      0001C3 D0 07            [24] 1492 	pop	ar7
                                   1493 ;	/home/user/contiki/core/net/rime/rudolph2.c:122: return len;
      0001C5 8E 82            [24] 1494 	mov	dpl,r6
      0001C7 8F 83            [24] 1495 	mov	dph,r7
      0001C9 E5 81            [12] 1496 	mov	a,sp
      0001CB 24 FA            [12] 1497 	add	a,#0xFA
      0001CD F5 81            [12] 1498 	mov	sp,a
      0001CF 22               [24] 1499 	ret
                                   1500 ;------------------------------------------------------------
                                   1501 ;Allocation info for local variables in function 'write_data'
                                   1502 ;------------------------------------------------------------
                                   1503 ;chunk                     Allocated to stack - sp -6
                                   1504 ;data                      Allocated to stack - sp -9
                                   1505 ;datalen                   Allocated to stack - sp -11
                                   1506 ;c                         Allocated to stack - sp -2
                                   1507 ;------------------------------------------------------------
                                   1508 ;	/home/user/contiki/core/net/rime/rudolph2.c:126: write_data(struct rudolph2_conn *c, int chunk, uint8_t *data, int datalen)
                                   1509 ;	-----------------------------------------
                                   1510 ;	 function write_data
                                   1511 ;	-----------------------------------------
      0001D0                       1512 _write_data:
      0001D0 C0 82            [24] 1513 	push	dpl
      0001D2 C0 83            [24] 1514 	push	dph
      0001D4 C0 F0            [24] 1515 	push	b
                                   1516 ;	/home/user/contiki/core/net/rime/rudolph2.c:129: if(c->flags & FLAG_IS_STOPPED) {
      0001D6 A8 81            [24] 1517 	mov	r0,sp
      0001D8 18               [12] 1518 	dec	r0
      0001D9 18               [12] 1519 	dec	r0
      0001DA 74 48            [12] 1520 	mov	a,#0x48
      0001DC 26               [12] 1521 	add	a,@r0
      0001DD FA               [12] 1522 	mov	r2,a
      0001DE E4               [12] 1523 	clr	a
      0001DF 08               [12] 1524 	inc	r0
      0001E0 36               [12] 1525 	addc	a,@r0
      0001E1 FB               [12] 1526 	mov	r3,a
      0001E2 08               [12] 1527 	inc	r0
      0001E3 86 04            [24] 1528 	mov	ar4,@r0
      0001E5 8A 82            [24] 1529 	mov	dpl,r2
      0001E7 8B 83            [24] 1530 	mov	dph,r3
      0001E9 8C F0            [24] 1531 	mov	b,r4
      0001EB 12r00r00         [24] 1532 	lcall	__gptrget
      0001EE FA               [12] 1533 	mov	r2,a
      0001EF 30 E2 03         [24] 1534 	jnb	acc.2,00102$
                                   1535 ;	/home/user/contiki/core/net/rime/rudolph2.c:130: return;
      0001F2 02r03rBA         [24] 1536 	ljmp	00108$
      0001F5                       1537 00102$:
                                   1538 ;	/home/user/contiki/core/net/rime/rudolph2.c:133: if(chunk == 0) {
      0001F5 E5 81            [12] 1539 	mov	a,sp
      0001F7 24 FA            [12] 1540 	add	a,#0xfa
      0001F9 F8               [12] 1541 	mov	r0,a
      0001FA E6               [12] 1542 	mov	a,@r0
      0001FB 08               [12] 1543 	inc	r0
      0001FC 46               [12] 1544 	orl	a,@r0
      0001FD 70 78            [24] 1545 	jnz	00104$
                                   1546 ;	/home/user/contiki/core/net/rime/rudolph2.c:134: c->cb->write_chunk(c, 0, RUDOLPH2_FLAG_NEWFILE, data, 0);
      0001FF A8 81            [24] 1547 	mov	r0,sp
      000201 18               [12] 1548 	dec	r0
      000202 18               [12] 1549 	dec	r0
      000203 74 28            [12] 1550 	mov	a,#0x28
      000205 26               [12] 1551 	add	a,@r0
      000206 FA               [12] 1552 	mov	r2,a
      000207 E4               [12] 1553 	clr	a
      000208 08               [12] 1554 	inc	r0
      000209 36               [12] 1555 	addc	a,@r0
      00020A FB               [12] 1556 	mov	r3,a
      00020B 08               [12] 1557 	inc	r0
      00020C 86 04            [24] 1558 	mov	ar4,@r0
      00020E 8A 82            [24] 1559 	mov	dpl,r2
      000210 8B 83            [24] 1560 	mov	dph,r3
      000212 8C F0            [24] 1561 	mov	b,r4
      000214 12r00r00         [24] 1562 	lcall	__gptrget
      000217 FA               [12] 1563 	mov	r2,a
      000218 A3               [24] 1564 	inc	dptr
      000219 12r00r00         [24] 1565 	lcall	__gptrget
      00021C FB               [12] 1566 	mov	r3,a
      00021D A3               [24] 1567 	inc	dptr
      00021E 12r00r00         [24] 1568 	lcall	__gptrget
      000221 FC               [12] 1569 	mov	r4,a
      000222 8A 82            [24] 1570 	mov	dpl,r2
      000224 8B 83            [24] 1571 	mov	dph,r3
      000226 8C F0            [24] 1572 	mov	b,r4
      000228 12r00r00         [24] 1573 	lcall	__gptrget
      00022B FA               [12] 1574 	mov	r2,a
      00022C A3               [24] 1575 	inc	dptr
      00022D 12r00r00         [24] 1576 	lcall	__gptrget
      000230 FB               [12] 1577 	mov	r3,a
      000231 C0 03            [24] 1578 	push	ar3
      000233 C0 02            [24] 1579 	push	ar2
      000235 E4               [12] 1580 	clr	a
      000236 C0 E0            [24] 1581 	push	acc
      000238 C0 E0            [24] 1582 	push	acc
      00023A E5 81            [12] 1583 	mov	a,sp
      00023C 24 F3            [12] 1584 	add	a,#0xf3
      00023E F8               [12] 1585 	mov	r0,a
      00023F E6               [12] 1586 	mov	a,@r0
      000240 C0 E0            [24] 1587 	push	acc
      000242 08               [12] 1588 	inc	r0
      000243 E6               [12] 1589 	mov	a,@r0
      000244 C0 E0            [24] 1590 	push	acc
      000246 08               [12] 1591 	inc	r0
      000247 E6               [12] 1592 	mov	a,@r0
      000248 C0 E0            [24] 1593 	push	acc
      00024A 74 01            [12] 1594 	mov	a,#0x01
      00024C C0 E0            [24] 1595 	push	acc
      00024E E4               [12] 1596 	clr	a
      00024F C0 E0            [24] 1597 	push	acc
      000251 E4               [12] 1598 	clr	a
      000252 C0 E0            [24] 1599 	push	acc
      000254 C0 E0            [24] 1600 	push	acc
      000256 12r02r5B         [24] 1601 	lcall	00121$
      000259 80 12            [24] 1602 	sjmp	00122$
      00025B                       1603 00121$:
      00025B C0 02            [24] 1604 	push	ar2
      00025D C0 03            [24] 1605 	push	ar3
      00025F E5 81            [12] 1606 	mov	a,sp
      000261 24 EF            [12] 1607 	add	a,#0xef
      000263 F8               [12] 1608 	mov	r0,a
      000264 86 82            [24] 1609 	mov	dpl,@r0
      000266 08               [12] 1610 	inc	r0
      000267 86 83            [24] 1611 	mov	dph,@r0
      000269 08               [12] 1612 	inc	r0
      00026A 86 F0            [24] 1613 	mov	b,@r0
      00026C 22               [24] 1614 	ret
      00026D                       1615 00122$:
      00026D E5 81            [12] 1616 	mov	a,sp
      00026F 24 F7            [12] 1617 	add	a,#0xf7
      000271 F5 81            [12] 1618 	mov	sp,a
      000273 D0 02            [24] 1619 	pop	ar2
      000275 D0 03            [24] 1620 	pop	ar3
      000277                       1621 00104$:
                                   1622 ;	/home/user/contiki/core/net/rime/rudolph2.c:142: if(datalen < RUDOLPH2_DATASIZE) {
      000277 E5 81            [12] 1623 	mov	a,sp
      000279 24 F5            [12] 1624 	add	a,#0xf5
      00027B F8               [12] 1625 	mov	r0,a
      00027C C3               [12] 1626 	clr	c
      00027D E6               [12] 1627 	mov	a,@r0
      00027E 94 40            [12] 1628 	subb	a,#0x40
      000280 08               [12] 1629 	inc	r0
      000281 E6               [12] 1630 	mov	a,@r0
      000282 64 80            [12] 1631 	xrl	a,#0x80
      000284 94 80            [12] 1632 	subb	a,#0x80
      000286 40 03            [24] 1633 	jc	00123$
      000288 02r03r25         [24] 1634 	ljmp	00106$
      00028B                       1635 00123$:
                                   1636 ;	/home/user/contiki/core/net/rime/rudolph2.c:146: c->cb->write_chunk(c, chunk * RUDOLPH2_DATASIZE,
      00028B A8 81            [24] 1637 	mov	r0,sp
      00028D 18               [12] 1638 	dec	r0
      00028E 18               [12] 1639 	dec	r0
      00028F 74 28            [12] 1640 	mov	a,#0x28
      000291 26               [12] 1641 	add	a,@r0
      000292 FA               [12] 1642 	mov	r2,a
      000293 E4               [12] 1643 	clr	a
      000294 08               [12] 1644 	inc	r0
      000295 36               [12] 1645 	addc	a,@r0
      000296 FB               [12] 1646 	mov	r3,a
      000297 08               [12] 1647 	inc	r0
      000298 86 04            [24] 1648 	mov	ar4,@r0
      00029A 8A 82            [24] 1649 	mov	dpl,r2
      00029C 8B 83            [24] 1650 	mov	dph,r3
      00029E 8C F0            [24] 1651 	mov	b,r4
      0002A0 12r00r00         [24] 1652 	lcall	__gptrget
      0002A3 FA               [12] 1653 	mov	r2,a
      0002A4 A3               [24] 1654 	inc	dptr
      0002A5 12r00r00         [24] 1655 	lcall	__gptrget
      0002A8 FB               [12] 1656 	mov	r3,a
      0002A9 A3               [24] 1657 	inc	dptr
      0002AA 12r00r00         [24] 1658 	lcall	__gptrget
      0002AD FC               [12] 1659 	mov	r4,a
      0002AE 8A 82            [24] 1660 	mov	dpl,r2
      0002B0 8B 83            [24] 1661 	mov	dph,r3
      0002B2 8C F0            [24] 1662 	mov	b,r4
      0002B4 12r00r00         [24] 1663 	lcall	__gptrget
      0002B7 FA               [12] 1664 	mov	r2,a
      0002B8 A3               [24] 1665 	inc	dptr
      0002B9 12r00r00         [24] 1666 	lcall	__gptrget
      0002BC FB               [12] 1667 	mov	r3,a
      0002BD E5 81            [12] 1668 	mov	a,sp
      0002BF 24 FA            [12] 1669 	add	a,#0xfa
      0002C1 F8               [12] 1670 	mov	r0,a
      0002C2 86 04            [24] 1671 	mov	ar4,@r0
      0002C4 08               [12] 1672 	inc	r0
      0002C5 E6               [12] 1673 	mov	a,@r0
      0002C6 54 03            [12] 1674 	anl	a,#0x03
      0002C8 A2 E0            [12] 1675 	mov	c,acc.0
      0002CA CC               [12] 1676 	xch	a,r4
      0002CB 13               [12] 1677 	rrc	a
      0002CC CC               [12] 1678 	xch	a,r4
      0002CD 13               [12] 1679 	rrc	a
      0002CE A2 E0            [12] 1680 	mov	c,acc.0
      0002D0 CC               [12] 1681 	xch	a,r4
      0002D1 13               [12] 1682 	rrc	a
      0002D2 CC               [12] 1683 	xch	a,r4
      0002D3 13               [12] 1684 	rrc	a
      0002D4 CC               [12] 1685 	xch	a,r4
      0002D5 FF               [12] 1686 	mov	r7,a
      0002D6 C0 03            [24] 1687 	push	ar3
      0002D8 C0 02            [24] 1688 	push	ar2
      0002DA E5 81            [12] 1689 	mov	a,sp
      0002DC 24 F3            [12] 1690 	add	a,#0xf3
      0002DE F8               [12] 1691 	mov	r0,a
      0002DF E6               [12] 1692 	mov	a,@r0
      0002E0 C0 E0            [24] 1693 	push	acc
      0002E2 08               [12] 1694 	inc	r0
      0002E3 E6               [12] 1695 	mov	a,@r0
      0002E4 C0 E0            [24] 1696 	push	acc
      0002E6 E5 81            [12] 1697 	mov	a,sp
      0002E8 24 F3            [12] 1698 	add	a,#0xf3
      0002EA F8               [12] 1699 	mov	r0,a
      0002EB E6               [12] 1700 	mov	a,@r0
      0002EC C0 E0            [24] 1701 	push	acc
      0002EE 08               [12] 1702 	inc	r0
      0002EF E6               [12] 1703 	mov	a,@r0
      0002F0 C0 E0            [24] 1704 	push	acc
      0002F2 08               [12] 1705 	inc	r0
      0002F3 E6               [12] 1706 	mov	a,@r0
      0002F4 C0 E0            [24] 1707 	push	acc
      0002F6 74 02            [12] 1708 	mov	a,#0x02
      0002F8 C0 E0            [24] 1709 	push	acc
      0002FA E4               [12] 1710 	clr	a
      0002FB C0 E0            [24] 1711 	push	acc
      0002FD C0 04            [24] 1712 	push	ar4
      0002FF C0 07            [24] 1713 	push	ar7
      000301 12r03r06         [24] 1714 	lcall	00124$
      000304 80 12            [24] 1715 	sjmp	00125$
      000306                       1716 00124$:
      000306 C0 02            [24] 1717 	push	ar2
      000308 C0 03            [24] 1718 	push	ar3
      00030A E5 81            [12] 1719 	mov	a,sp
      00030C 24 EF            [12] 1720 	add	a,#0xef
      00030E F8               [12] 1721 	mov	r0,a
      00030F 86 82            [24] 1722 	mov	dpl,@r0
      000311 08               [12] 1723 	inc	r0
      000312 86 83            [24] 1724 	mov	dph,@r0
      000314 08               [12] 1725 	inc	r0
      000315 86 F0            [24] 1726 	mov	b,@r0
      000317 22               [24] 1727 	ret
      000318                       1728 00125$:
      000318 E5 81            [12] 1729 	mov	a,sp
      00031A 24 F7            [12] 1730 	add	a,#0xf7
      00031C F5 81            [12] 1731 	mov	sp,a
      00031E D0 02            [24] 1732 	pop	ar2
      000320 D0 03            [24] 1733 	pop	ar3
      000322 02r03rBA         [24] 1734 	ljmp	00108$
      000325                       1735 00106$:
                                   1736 ;	/home/user/contiki/core/net/rime/rudolph2.c:149: c->cb->write_chunk(c, chunk * RUDOLPH2_DATASIZE,
      000325 A8 81            [24] 1737 	mov	r0,sp
      000327 18               [12] 1738 	dec	r0
      000328 18               [12] 1739 	dec	r0
      000329 74 28            [12] 1740 	mov	a,#0x28
      00032B 26               [12] 1741 	add	a,@r0
      00032C FD               [12] 1742 	mov	r5,a
      00032D E4               [12] 1743 	clr	a
      00032E 08               [12] 1744 	inc	r0
      00032F 36               [12] 1745 	addc	a,@r0
      000330 FE               [12] 1746 	mov	r6,a
      000331 08               [12] 1747 	inc	r0
      000332 86 07            [24] 1748 	mov	ar7,@r0
      000334 8D 82            [24] 1749 	mov	dpl,r5
      000336 8E 83            [24] 1750 	mov	dph,r6
      000338 8F F0            [24] 1751 	mov	b,r7
      00033A 12r00r00         [24] 1752 	lcall	__gptrget
      00033D FD               [12] 1753 	mov	r5,a
      00033E A3               [24] 1754 	inc	dptr
      00033F 12r00r00         [24] 1755 	lcall	__gptrget
      000342 FE               [12] 1756 	mov	r6,a
      000343 A3               [24] 1757 	inc	dptr
      000344 12r00r00         [24] 1758 	lcall	__gptrget
      000347 FF               [12] 1759 	mov	r7,a
      000348 8D 82            [24] 1760 	mov	dpl,r5
      00034A 8E 83            [24] 1761 	mov	dph,r6
      00034C 8F F0            [24] 1762 	mov	b,r7
      00034E 12r00r00         [24] 1763 	lcall	__gptrget
      000351 FD               [12] 1764 	mov	r5,a
      000352 A3               [24] 1765 	inc	dptr
      000353 12r00r00         [24] 1766 	lcall	__gptrget
      000356 FE               [12] 1767 	mov	r6,a
      000357 E5 81            [12] 1768 	mov	a,sp
      000359 24 FA            [12] 1769 	add	a,#0xfa
      00035B F8               [12] 1770 	mov	r0,a
      00035C 86 04            [24] 1771 	mov	ar4,@r0
      00035E 08               [12] 1772 	inc	r0
      00035F E6               [12] 1773 	mov	a,@r0
      000360 54 03            [12] 1774 	anl	a,#0x03
      000362 A2 E0            [12] 1775 	mov	c,acc.0
      000364 CC               [12] 1776 	xch	a,r4
      000365 13               [12] 1777 	rrc	a
      000366 CC               [12] 1778 	xch	a,r4
      000367 13               [12] 1779 	rrc	a
      000368 A2 E0            [12] 1780 	mov	c,acc.0
      00036A CC               [12] 1781 	xch	a,r4
      00036B 13               [12] 1782 	rrc	a
      00036C CC               [12] 1783 	xch	a,r4
      00036D 13               [12] 1784 	rrc	a
      00036E CC               [12] 1785 	xch	a,r4
      00036F FF               [12] 1786 	mov	r7,a
      000370 C0 06            [24] 1787 	push	ar6
      000372 C0 05            [24] 1788 	push	ar5
      000374 E5 81            [12] 1789 	mov	a,sp
      000376 24 F3            [12] 1790 	add	a,#0xf3
      000378 F8               [12] 1791 	mov	r0,a
      000379 E6               [12] 1792 	mov	a,@r0
      00037A C0 E0            [24] 1793 	push	acc
      00037C 08               [12] 1794 	inc	r0
      00037D E6               [12] 1795 	mov	a,@r0
      00037E C0 E0            [24] 1796 	push	acc
      000380 E5 81            [12] 1797 	mov	a,sp
      000382 24 F3            [12] 1798 	add	a,#0xf3
      000384 F8               [12] 1799 	mov	r0,a
      000385 E6               [12] 1800 	mov	a,@r0
      000386 C0 E0            [24] 1801 	push	acc
      000388 08               [12] 1802 	inc	r0
      000389 E6               [12] 1803 	mov	a,@r0
      00038A C0 E0            [24] 1804 	push	acc
      00038C 08               [12] 1805 	inc	r0
      00038D E6               [12] 1806 	mov	a,@r0
      00038E C0 E0            [24] 1807 	push	acc
      000390 E4               [12] 1808 	clr	a
      000391 C0 E0            [24] 1809 	push	acc
      000393 C0 E0            [24] 1810 	push	acc
      000395 C0 04            [24] 1811 	push	ar4
      000397 C0 07            [24] 1812 	push	ar7
      000399 12r03r9E         [24] 1813 	lcall	00126$
      00039C 80 12            [24] 1814 	sjmp	00127$
      00039E                       1815 00126$:
      00039E C0 05            [24] 1816 	push	ar5
      0003A0 C0 06            [24] 1817 	push	ar6
      0003A2 E5 81            [12] 1818 	mov	a,sp
      0003A4 24 EF            [12] 1819 	add	a,#0xef
      0003A6 F8               [12] 1820 	mov	r0,a
      0003A7 86 82            [24] 1821 	mov	dpl,@r0
      0003A9 08               [12] 1822 	inc	r0
      0003AA 86 83            [24] 1823 	mov	dph,@r0
      0003AC 08               [12] 1824 	inc	r0
      0003AD 86 F0            [24] 1825 	mov	b,@r0
      0003AF 22               [24] 1826 	ret
      0003B0                       1827 00127$:
      0003B0 E5 81            [12] 1828 	mov	a,sp
      0003B2 24 F7            [12] 1829 	add	a,#0xf7
      0003B4 F5 81            [12] 1830 	mov	sp,a
      0003B6 D0 05            [24] 1831 	pop	ar5
      0003B8 D0 06            [24] 1832 	pop	ar6
      0003BA                       1833 00108$:
      0003BA 15 81            [12] 1834 	dec	sp
      0003BC 15 81            [12] 1835 	dec	sp
      0003BE 15 81            [12] 1836 	dec	sp
      0003C0 22               [24] 1837 	ret
                                   1838 ;------------------------------------------------------------
                                   1839 ;Allocation info for local variables in function 'send_data'
                                   1840 ;------------------------------------------------------------
                                   1841 ;interval                  Allocated to stack - sp -3
                                   1842 ;c                         Allocated to registers r5 r6 r7 
                                   1843 ;len                       Allocated to registers r3 r4 
                                   1844 ;------------------------------------------------------------
                                   1845 ;	/home/user/contiki/core/net/rime/rudolph2.c:155: send_data(struct rudolph2_conn *c, clock_time_t interval)
                                   1846 ;	-----------------------------------------
                                   1847 ;	 function send_data
                                   1848 ;	-----------------------------------------
      0003C1                       1849 _send_data:
      0003C1 AD 82            [24] 1850 	mov	r5,dpl
      0003C3 AE 83            [24] 1851 	mov	r6,dph
      0003C5 AF F0            [24] 1852 	mov	r7,b
                                   1853 ;	/home/user/contiki/core/net/rime/rudolph2.c:159: len = format_data(c, c->snd_nxt);
      0003C7 74 40            [12] 1854 	mov	a,#0x40
      0003C9 2D               [12] 1855 	add	a,r5
      0003CA FA               [12] 1856 	mov	r2,a
      0003CB E4               [12] 1857 	clr	a
      0003CC 3E               [12] 1858 	addc	a,r6
      0003CD FB               [12] 1859 	mov	r3,a
      0003CE 8F 04            [24] 1860 	mov	ar4,r7
      0003D0 8A 82            [24] 1861 	mov	dpl,r2
      0003D2 8B 83            [24] 1862 	mov	dph,r3
      0003D4 8C F0            [24] 1863 	mov	b,r4
      0003D6 12r00r00         [24] 1864 	lcall	__gptrget
      0003D9 FA               [12] 1865 	mov	r2,a
      0003DA A3               [24] 1866 	inc	dptr
      0003DB 12r00r00         [24] 1867 	lcall	__gptrget
      0003DE FB               [12] 1868 	mov	r3,a
      0003DF C0 07            [24] 1869 	push	ar7
      0003E1 C0 06            [24] 1870 	push	ar6
      0003E3 C0 05            [24] 1871 	push	ar5
      0003E5 C0 02            [24] 1872 	push	ar2
      0003E7 C0 03            [24] 1873 	push	ar3
      0003E9 8D 82            [24] 1874 	mov	dpl,r5
      0003EB 8E 83            [24] 1875 	mov	dph,r6
      0003ED 8F F0            [24] 1876 	mov	b,r7
      0003EF 12r00rAA         [24] 1877 	lcall	_format_data
      0003F2 AB 82            [24] 1878 	mov	r3,dpl
      0003F4 AC 83            [24] 1879 	mov	r4,dph
      0003F6 15 81            [12] 1880 	dec	sp
      0003F8 15 81            [12] 1881 	dec	sp
      0003FA D0 05            [24] 1882 	pop	ar5
      0003FC D0 06            [24] 1883 	pop	ar6
      0003FE D0 07            [24] 1884 	pop	ar7
                                   1885 ;	/home/user/contiki/core/net/rime/rudolph2.c:160: polite_send(&c->c, interval, POLITE_HEADER);
      000400 C0 04            [24] 1886 	push	ar4
      000402 C0 03            [24] 1887 	push	ar3
      000404 74 01            [12] 1888 	mov	a,#0x01
      000406 C0 E0            [24] 1889 	push	acc
      000408 E5 81            [12] 1890 	mov	a,sp
      00040A 24 FA            [12] 1891 	add	a,#0xfa
      00040C F8               [12] 1892 	mov	r0,a
      00040D E6               [12] 1893 	mov	a,@r0
      00040E C0 E0            [24] 1894 	push	acc
      000410 08               [12] 1895 	inc	r0
      000411 E6               [12] 1896 	mov	a,@r0
      000412 C0 E0            [24] 1897 	push	acc
      000414 8D 82            [24] 1898 	mov	dpl,r5
      000416 8E 83            [24] 1899 	mov	dph,r6
      000418 8F F0            [24] 1900 	mov	b,r7
      00041A 12r00r00         [24] 1901 	lcall	_polite_send
      00041D 15 81            [12] 1902 	dec	sp
      00041F 15 81            [12] 1903 	dec	sp
      000421 15 81            [12] 1904 	dec	sp
      000423 D0 03            [24] 1905 	pop	ar3
      000425 D0 04            [24] 1906 	pop	ar4
                                   1907 ;	/home/user/contiki/core/net/rime/rudolph2.c:165: return len;
      000427 8B 82            [24] 1908 	mov	dpl,r3
      000429 8C 83            [24] 1909 	mov	dph,r4
      00042B 22               [24] 1910 	ret
                                   1911 ;------------------------------------------------------------
                                   1912 ;Allocation info for local variables in function 'send_nack'
                                   1913 ;------------------------------------------------------------
                                   1914 ;c                         Allocated to stack - sp -5
                                   1915 ;hdr                       Allocated to stack - sp -2
                                   1916 ;------------------------------------------------------------
                                   1917 ;	/home/user/contiki/core/net/rime/rudolph2.c:169: send_nack(struct rudolph2_conn *c)
                                   1918 ;	-----------------------------------------
                                   1919 ;	 function send_nack
                                   1920 ;	-----------------------------------------
      00042C                       1921 _send_nack:
      00042C C0 82            [24] 1922 	push	dpl
      00042E C0 83            [24] 1923 	push	dph
      000430 C0 F0            [24] 1924 	push	b
      000432 05 81            [12] 1925 	inc	sp
      000434 05 81            [12] 1926 	inc	sp
      000436 05 81            [12] 1927 	inc	sp
                                   1928 ;	/home/user/contiki/core/net/rime/rudolph2.c:172: packetbuf_clear();
      000438 12r00r00         [24] 1929 	lcall	_packetbuf_clear
                                   1930 ;	/home/user/contiki/core/net/rime/rudolph2.c:173: packetbuf_hdralloc(sizeof(struct rudolph2_hdr));
      00043B 90 00 06         [24] 1931 	mov	dptr,#0x0006
      00043E 12r00r00         [24] 1932 	lcall	_packetbuf_hdralloc
                                   1933 ;	/home/user/contiki/core/net/rime/rudolph2.c:174: hdr = packetbuf_hdrptr();
      000441 12r00r00         [24] 1934 	lcall	_packetbuf_hdrptr
      000444 AA 82            [24] 1935 	mov	r2,dpl
      000446 AB 83            [24] 1936 	mov	r3,dph
      000448 AC F0            [24] 1937 	mov	r4,b
      00044A A8 81            [24] 1938 	mov	r0,sp
      00044C 18               [12] 1939 	dec	r0
      00044D 18               [12] 1940 	dec	r0
      00044E A6 02            [24] 1941 	mov	@r0,ar2
      000450 08               [12] 1942 	inc	r0
      000451 A6 03            [24] 1943 	mov	@r0,ar3
      000453 08               [12] 1944 	inc	r0
      000454 A6 04            [24] 1945 	mov	@r0,ar4
                                   1946 ;	/home/user/contiki/core/net/rime/rudolph2.c:176: hdr->hops_from_base = c->hops_from_base;
      000456 A8 81            [24] 1947 	mov	r0,sp
      000458 18               [12] 1948 	dec	r0
      000459 18               [12] 1949 	dec	r0
      00045A 74 01            [12] 1950 	mov	a,#0x01
      00045C 26               [12] 1951 	add	a,@r0
      00045D FD               [12] 1952 	mov	r5,a
      00045E E4               [12] 1953 	clr	a
      00045F 08               [12] 1954 	inc	r0
      000460 36               [12] 1955 	addc	a,@r0
      000461 FE               [12] 1956 	mov	r6,a
      000462 08               [12] 1957 	inc	r0
      000463 86 07            [24] 1958 	mov	ar7,@r0
      000465 E5 81            [12] 1959 	mov	a,sp
      000467 24 FB            [12] 1960 	add	a,#0xfb
      000469 F8               [12] 1961 	mov	r0,a
      00046A 74 46            [12] 1962 	mov	a,#0x46
      00046C 26               [12] 1963 	add	a,@r0
      00046D FA               [12] 1964 	mov	r2,a
      00046E E4               [12] 1965 	clr	a
      00046F 08               [12] 1966 	inc	r0
      000470 36               [12] 1967 	addc	a,@r0
      000471 FB               [12] 1968 	mov	r3,a
      000472 08               [12] 1969 	inc	r0
      000473 86 04            [24] 1970 	mov	ar4,@r0
      000475 8A 82            [24] 1971 	mov	dpl,r2
      000477 8B 83            [24] 1972 	mov	dph,r3
      000479 8C F0            [24] 1973 	mov	b,r4
      00047B 12r00r00         [24] 1974 	lcall	__gptrget
      00047E 8D 82            [24] 1975 	mov	dpl,r5
      000480 8E 83            [24] 1976 	mov	dph,r6
      000482 8F F0            [24] 1977 	mov	b,r7
      000484 12r00r00         [24] 1978 	lcall	__gptrput
                                   1979 ;	/home/user/contiki/core/net/rime/rudolph2.c:177: hdr->type = TYPE_NACK;
      000487 A8 81            [24] 1980 	mov	r0,sp
      000489 18               [12] 1981 	dec	r0
      00048A 18               [12] 1982 	dec	r0
      00048B 86 82            [24] 1983 	mov	dpl,@r0
      00048D 08               [12] 1984 	inc	r0
      00048E 86 83            [24] 1985 	mov	dph,@r0
      000490 08               [12] 1986 	inc	r0
      000491 86 F0            [24] 1987 	mov	b,@r0
      000493 74 01            [12] 1988 	mov	a,#0x01
      000495 12r00r00         [24] 1989 	lcall	__gptrput
                                   1990 ;	/home/user/contiki/core/net/rime/rudolph2.c:178: hdr->version = c->version;
      000498 A8 81            [24] 1991 	mov	r0,sp
      00049A 18               [12] 1992 	dec	r0
      00049B 18               [12] 1993 	dec	r0
      00049C 74 02            [12] 1994 	mov	a,#0x02
      00049E 26               [12] 1995 	add	a,@r0
      00049F FD               [12] 1996 	mov	r5,a
      0004A0 E4               [12] 1997 	clr	a
      0004A1 08               [12] 1998 	inc	r0
      0004A2 36               [12] 1999 	addc	a,@r0
      0004A3 FE               [12] 2000 	mov	r6,a
      0004A4 08               [12] 2001 	inc	r0
      0004A5 86 07            [24] 2002 	mov	ar7,@r0
      0004A7 E5 81            [12] 2003 	mov	a,sp
      0004A9 24 FB            [12] 2004 	add	a,#0xfb
      0004AB F8               [12] 2005 	mov	r0,a
      0004AC 74 44            [12] 2006 	mov	a,#0x44
      0004AE 26               [12] 2007 	add	a,@r0
      0004AF FA               [12] 2008 	mov	r2,a
      0004B0 E4               [12] 2009 	clr	a
      0004B1 08               [12] 2010 	inc	r0
      0004B2 36               [12] 2011 	addc	a,@r0
      0004B3 FB               [12] 2012 	mov	r3,a
      0004B4 08               [12] 2013 	inc	r0
      0004B5 86 04            [24] 2014 	mov	ar4,@r0
      0004B7 8A 82            [24] 2015 	mov	dpl,r2
      0004B9 8B 83            [24] 2016 	mov	dph,r3
      0004BB 8C F0            [24] 2017 	mov	b,r4
      0004BD 12r00r00         [24] 2018 	lcall	__gptrget
      0004C0 FA               [12] 2019 	mov	r2,a
      0004C1 A3               [24] 2020 	inc	dptr
      0004C2 12r00r00         [24] 2021 	lcall	__gptrget
      0004C5 FB               [12] 2022 	mov	r3,a
      0004C6 8D 82            [24] 2023 	mov	dpl,r5
      0004C8 8E 83            [24] 2024 	mov	dph,r6
      0004CA 8F F0            [24] 2025 	mov	b,r7
      0004CC EA               [12] 2026 	mov	a,r2
      0004CD 12r00r00         [24] 2027 	lcall	__gptrput
      0004D0 A3               [24] 2028 	inc	dptr
      0004D1 EB               [12] 2029 	mov	a,r3
      0004D2 12r00r00         [24] 2030 	lcall	__gptrput
                                   2031 ;	/home/user/contiki/core/net/rime/rudolph2.c:179: hdr->chunk = c->rcv_nxt;
      0004D5 A8 81            [24] 2032 	mov	r0,sp
      0004D7 18               [12] 2033 	dec	r0
      0004D8 18               [12] 2034 	dec	r0
      0004D9 74 04            [12] 2035 	mov	a,#0x04
      0004DB 26               [12] 2036 	add	a,@r0
      0004DC FD               [12] 2037 	mov	r5,a
      0004DD E4               [12] 2038 	clr	a
      0004DE 08               [12] 2039 	inc	r0
      0004DF 36               [12] 2040 	addc	a,@r0
      0004E0 FE               [12] 2041 	mov	r6,a
      0004E1 08               [12] 2042 	inc	r0
      0004E2 86 07            [24] 2043 	mov	ar7,@r0
      0004E4 E5 81            [12] 2044 	mov	a,sp
      0004E6 24 FB            [12] 2045 	add	a,#0xfb
      0004E8 F8               [12] 2046 	mov	r0,a
      0004E9 74 42            [12] 2047 	mov	a,#0x42
      0004EB 26               [12] 2048 	add	a,@r0
      0004EC FA               [12] 2049 	mov	r2,a
      0004ED E4               [12] 2050 	clr	a
      0004EE 08               [12] 2051 	inc	r0
      0004EF 36               [12] 2052 	addc	a,@r0
      0004F0 FB               [12] 2053 	mov	r3,a
      0004F1 08               [12] 2054 	inc	r0
      0004F2 86 04            [24] 2055 	mov	ar4,@r0
      0004F4 8A 82            [24] 2056 	mov	dpl,r2
      0004F6 8B 83            [24] 2057 	mov	dph,r3
      0004F8 8C F0            [24] 2058 	mov	b,r4
      0004FA 12r00r00         [24] 2059 	lcall	__gptrget
      0004FD FA               [12] 2060 	mov	r2,a
      0004FE A3               [24] 2061 	inc	dptr
      0004FF 12r00r00         [24] 2062 	lcall	__gptrget
      000502 FB               [12] 2063 	mov	r3,a
      000503 8D 82            [24] 2064 	mov	dpl,r5
      000505 8E 83            [24] 2065 	mov	dph,r6
      000507 8F F0            [24] 2066 	mov	b,r7
      000509 EA               [12] 2067 	mov	a,r2
      00050A 12r00r00         [24] 2068 	lcall	__gptrput
      00050D A3               [24] 2069 	inc	dptr
      00050E EB               [12] 2070 	mov	a,r3
      00050F 12r00r00         [24] 2071 	lcall	__gptrput
                                   2072 ;	/home/user/contiki/core/net/rime/rudolph2.c:184: polite_send(&c->c, NACK_TIMEOUT, POLITE_HEADER);
      000512 74 01            [12] 2073 	mov	a,#0x01
      000514 C0 E0            [24] 2074 	push	acc
      000516 74 20            [12] 2075 	mov	a,#0x20
      000518 C0 E0            [24] 2076 	push	acc
      00051A E4               [12] 2077 	clr	a
      00051B C0 E0            [24] 2078 	push	acc
      00051D E5 81            [12] 2079 	mov	a,sp
      00051F 24 F8            [12] 2080 	add	a,#0xf8
      000521 F8               [12] 2081 	mov	r0,a
      000522 86 82            [24] 2082 	mov	dpl,@r0
      000524 08               [12] 2083 	inc	r0
      000525 86 83            [24] 2084 	mov	dph,@r0
      000527 08               [12] 2085 	inc	r0
      000528 86 F0            [24] 2086 	mov	b,@r0
      00052A 12r00r00         [24] 2087 	lcall	_polite_send
      00052D 15 81            [12] 2088 	dec	sp
      00052F 15 81            [12] 2089 	dec	sp
      000531 15 81            [12] 2090 	dec	sp
      000533 E5 81            [12] 2091 	mov	a,sp
      000535 24 FA            [12] 2092 	add	a,#0xFA
      000537 F5 81            [12] 2093 	mov	sp,a
      000539 22               [24] 2094 	ret
                                   2095 ;------------------------------------------------------------
                                   2096 ;Allocation info for local variables in function 'sent'
                                   2097 ;------------------------------------------------------------
                                   2098 ;polite                    Allocated to registers 
                                   2099 ;------------------------------------------------------------
                                   2100 ;	/home/user/contiki/core/net/rime/rudolph2.c:218: sent(struct polite_conn *polite)
                                   2101 ;	-----------------------------------------
                                   2102 ;	 function sent
                                   2103 ;	-----------------------------------------
      00053A                       2104 _sent:
                                   2105 ;	/home/user/contiki/core/net/rime/rudolph2.c:231: }
      00053A 22               [24] 2106 	ret
                                   2107 ;------------------------------------------------------------
                                   2108 ;Allocation info for local variables in function 'dropped'
                                   2109 ;------------------------------------------------------------
                                   2110 ;polite                    Allocated to registers 
                                   2111 ;------------------------------------------------------------
                                   2112 ;	/home/user/contiki/core/net/rime/rudolph2.c:234: dropped(struct polite_conn *polite)
                                   2113 ;	-----------------------------------------
                                   2114 ;	 function dropped
                                   2115 ;	-----------------------------------------
      00053B                       2116 _dropped:
                                   2117 ;	/home/user/contiki/core/net/rime/rudolph2.c:245: }
      00053B 22               [24] 2118 	ret
                                   2119 ;------------------------------------------------------------
                                   2120 ;Allocation info for local variables in function 'timed_send'
                                   2121 ;------------------------------------------------------------
                                   2122 ;ptr                       Allocated to registers r5 r6 r7 
                                   2123 ;c                         Allocated to stack - sp -4
                                   2124 ;interval                  Allocated to stack - sp -1
                                   2125 ;len                       Allocated to registers r6 r5 
                                   2126 ;sloc0                     Allocated to stack - sp +1
                                   2127 ;sloc1                     Allocated to stack - sp -9
                                   2128 ;sloc2                     Allocated to stack - sp -6
                                   2129 ;------------------------------------------------------------
                                   2130 ;	/home/user/contiki/core/net/rime/rudolph2.c:248: timed_send(void *ptr)
                                   2131 ;	-----------------------------------------
                                   2132 ;	 function timed_send
                                   2133 ;	-----------------------------------------
      00053C                       2134 _timed_send:
      00053C E5 81            [12] 2135 	mov	a,sp
      00053E 24 0A            [12] 2136 	add	a,#0x0A
      000540 F5 81            [12] 2137 	mov	sp,a
      000542 AD 82            [24] 2138 	mov	r5,dpl
      000544 AE 83            [24] 2139 	mov	r6,dph
      000546 AF F0            [24] 2140 	mov	r7,b
                                   2141 ;	/home/user/contiki/core/net/rime/rudolph2.c:250: struct rudolph2_conn *c = (struct rudolph2_conn *)ptr;
      000548 E5 81            [12] 2142 	mov	a,sp
      00054A 24 FC            [12] 2143 	add	a,#0xfc
      00054C F8               [12] 2144 	mov	r0,a
      00054D A6 05            [24] 2145 	mov	@r0,ar5
      00054F 08               [12] 2146 	inc	r0
      000550 A6 06            [24] 2147 	mov	@r0,ar6
      000552 08               [12] 2148 	inc	r0
      000553 A6 07            [24] 2149 	mov	@r0,ar7
                                   2150 ;	/home/user/contiki/core/net/rime/rudolph2.c:254: if((c->flags & FLAG_IS_STOPPED) == 0 &&
      000555 E5 81            [12] 2151 	mov	a,sp
      000557 24 FC            [12] 2152 	add	a,#0xfc
      000559 F8               [12] 2153 	mov	r0,a
      00055A 74 48            [12] 2154 	mov	a,#0x48
      00055C 26               [12] 2155 	add	a,@r0
      00055D FA               [12] 2156 	mov	r2,a
      00055E E4               [12] 2157 	clr	a
      00055F 08               [12] 2158 	inc	r0
      000560 36               [12] 2159 	addc	a,@r0
      000561 FB               [12] 2160 	mov	r3,a
      000562 08               [12] 2161 	inc	r0
      000563 86 04            [24] 2162 	mov	ar4,@r0
      000565 8A 82            [24] 2163 	mov	dpl,r2
      000567 8B 83            [24] 2164 	mov	dph,r3
      000569 8C F0            [24] 2165 	mov	b,r4
      00056B 12r00r00         [24] 2166 	lcall	__gptrget
      00056E FF               [12] 2167 	mov	r7,a
      00056F 30 E2 03         [24] 2168 	jnb	acc.2,00137$
      000572 02r07r0D         [24] 2169 	ljmp	00114$
      000575                       2170 00137$:
                                   2171 ;	/home/user/contiki/core/net/rime/rudolph2.c:255: (c->flags & FLAG_LAST_RECEIVED)) {
      000575 EF               [12] 2172 	mov	a,r7
      000576 20 E1 03         [24] 2173 	jb	acc.1,00138$
      000579 02r07r0D         [24] 2174 	ljmp	00114$
      00057C                       2175 00138$:
                                   2176 ;	/home/user/contiki/core/net/rime/rudolph2.c:263: if(c->flags & FLAG_LAST_SENT) {
      00057C EF               [12] 2177 	mov	a,r7
      00057D 30 E0 0A         [24] 2178 	jnb	acc.0,00102$
                                   2179 ;	/home/user/contiki/core/net/rime/rudolph2.c:264: interval = STEADY_INTERVAL;
      000580 A8 81            [24] 2180 	mov	r0,sp
      000582 18               [12] 2181 	dec	r0
      000583 76 00            [12] 2182 	mov	@r0,#0x00
      000585 08               [12] 2183 	inc	r0
      000586 76 08            [12] 2184 	mov	@r0,#0x08
      000588 80 08            [24] 2185 	sjmp	00103$
      00058A                       2186 00102$:
                                   2187 ;	/home/user/contiki/core/net/rime/rudolph2.c:266: interval = SEND_INTERVAL;
      00058A A8 81            [24] 2188 	mov	r0,sp
      00058C 18               [12] 2189 	dec	r0
      00058D 76 40            [12] 2190 	mov	@r0,#0x40
      00058F 08               [12] 2191 	inc	r0
      000590 76 00            [12] 2192 	mov	@r0,#0x00
      000592                       2193 00103$:
                                   2194 ;	/home/user/contiki/core/net/rime/rudolph2.c:270: len = send_data(c, interval);
      000592 C0 04            [24] 2195 	push	ar4
      000594 C0 03            [24] 2196 	push	ar3
      000596 C0 02            [24] 2197 	push	ar2
      000598 E5 81            [12] 2198 	mov	a,sp
      00059A 24 FC            [12] 2199 	add	a,#0xfc
      00059C F8               [12] 2200 	mov	r0,a
      00059D E6               [12] 2201 	mov	a,@r0
      00059E C0 E0            [24] 2202 	push	acc
      0005A0 08               [12] 2203 	inc	r0
      0005A1 E6               [12] 2204 	mov	a,@r0
      0005A2 C0 E0            [24] 2205 	push	acc
      0005A4 E5 81            [12] 2206 	mov	a,sp
      0005A6 24 F7            [12] 2207 	add	a,#0xf7
      0005A8 F8               [12] 2208 	mov	r0,a
      0005A9 86 82            [24] 2209 	mov	dpl,@r0
      0005AB 08               [12] 2210 	inc	r0
      0005AC 86 83            [24] 2211 	mov	dph,@r0
      0005AE 08               [12] 2212 	inc	r0
      0005AF 86 F0            [24] 2213 	mov	b,@r0
      0005B1 12r03rC1         [24] 2214 	lcall	_send_data
      0005B4 AE 82            [24] 2215 	mov	r6,dpl
      0005B6 AF 83            [24] 2216 	mov	r7,dph
      0005B8 15 81            [12] 2217 	dec	sp
      0005BA 15 81            [12] 2218 	dec	sp
      0005BC D0 02            [24] 2219 	pop	ar2
      0005BE D0 03            [24] 2220 	pop	ar3
      0005C0 D0 04            [24] 2221 	pop	ar4
      0005C2 8F 05            [24] 2222 	mov	ar5,r7
                                   2223 ;	/home/user/contiki/core/net/rime/rudolph2.c:272: if(len < RUDOLPH2_DATASIZE) {
      0005C4 C3               [12] 2224 	clr	c
      0005C5 EE               [12] 2225 	mov	a,r6
      0005C6 94 40            [12] 2226 	subb	a,#0x40
      0005C8 ED               [12] 2227 	mov	a,r5
      0005C9 64 80            [12] 2228 	xrl	a,#0x80
      0005CB 94 80            [12] 2229 	subb	a,#0x80
      0005CD 50 19            [24] 2230 	jnc	00105$
                                   2231 ;	/home/user/contiki/core/net/rime/rudolph2.c:273: c->flags |= FLAG_LAST_SENT;
      0005CF 8A 82            [24] 2232 	mov	dpl,r2
      0005D1 8B 83            [24] 2233 	mov	dph,r3
      0005D3 8C F0            [24] 2234 	mov	b,r4
      0005D5 12r00r00         [24] 2235 	lcall	__gptrget
      0005D8 FF               [12] 2236 	mov	r7,a
      0005D9 43 07 01         [24] 2237 	orl	ar7,#0x01
      0005DC 8A 82            [24] 2238 	mov	dpl,r2
      0005DE 8B 83            [24] 2239 	mov	dph,r3
      0005E0 8C F0            [24] 2240 	mov	b,r4
      0005E2 EF               [12] 2241 	mov	a,r7
      0005E3 12r00r00         [24] 2242 	lcall	__gptrput
      0005E6 80 17            [24] 2243 	sjmp	00106$
      0005E8                       2244 00105$:
                                   2245 ;	/home/user/contiki/core/net/rime/rudolph2.c:275: c->flags &= ~FLAG_LAST_SENT;
      0005E8 8A 82            [24] 2246 	mov	dpl,r2
      0005EA 8B 83            [24] 2247 	mov	dph,r3
      0005EC 8C F0            [24] 2248 	mov	b,r4
      0005EE 12r00r00         [24] 2249 	lcall	__gptrget
      0005F1 FF               [12] 2250 	mov	r7,a
      0005F2 53 07 FE         [24] 2251 	anl	ar7,#0xFE
      0005F5 8A 82            [24] 2252 	mov	dpl,r2
      0005F7 8B 83            [24] 2253 	mov	dph,r3
      0005F9 8C F0            [24] 2254 	mov	b,r4
      0005FB EF               [12] 2255 	mov	a,r7
      0005FC 12r00r00         [24] 2256 	lcall	__gptrput
                                   2257 ;	/home/user/contiki/core/net/rime/rudolph2.c:284: ctimer_set(&c->t, interval, timed_send, c);
                                   2258 ;	/home/user/contiki/core/net/rime/rudolph2.c:275: c->flags &= ~FLAG_LAST_SENT;
      0005FF                       2259 00106$:
                                   2260 ;	/home/user/contiki/core/net/rime/rudolph2.c:278: if(c->nacks == 0 &&
      0005FF E5 81            [12] 2261 	mov	a,sp
      000601 24 FC            [12] 2262 	add	a,#0xfc
      000603 F8               [12] 2263 	mov	r0,a
      000604 74 47            [12] 2264 	mov	a,#0x47
      000606 26               [12] 2265 	add	a,@r0
      000607 FA               [12] 2266 	mov	r2,a
      000608 E4               [12] 2267 	clr	a
      000609 08               [12] 2268 	inc	r0
      00060A 36               [12] 2269 	addc	a,@r0
      00060B FB               [12] 2270 	mov	r3,a
      00060C 08               [12] 2271 	inc	r0
      00060D 86 04            [24] 2272 	mov	ar4,@r0
      00060F 8A 82            [24] 2273 	mov	dpl,r2
      000611 8B 83            [24] 2274 	mov	dph,r3
      000613 8C F0            [24] 2275 	mov	b,r4
      000615 12r00r00         [24] 2276 	lcall	__gptrget
      000618 60 03            [24] 2277 	jz	00141$
      00061A 02r06rBD         [24] 2278 	ljmp	00108$
      00061D                       2279 00141$:
                                   2280 ;	/home/user/contiki/core/net/rime/rudolph2.c:279: len == RUDOLPH2_DATASIZE &&
      00061D BE 40 05         [24] 2281 	cjne	r6,#0x40,00142$
      000620 BD 00 02         [24] 2282 	cjne	r5,#0x00,00142$
      000623 80 03            [24] 2283 	sjmp	00143$
      000625                       2284 00142$:
      000625 02r06rBD         [24] 2285 	ljmp	00108$
      000628                       2286 00143$:
                                   2287 ;	/home/user/contiki/core/net/rime/rudolph2.c:280: c->snd_nxt + 1 < c->rcv_nxt) {
      000628 C0 02            [24] 2288 	push	ar2
      00062A C0 03            [24] 2289 	push	ar3
      00062C C0 04            [24] 2290 	push	ar4
      00062E E5 81            [12] 2291 	mov	a,sp
      000630 24 F9            [12] 2292 	add	a,#0xf9
      000632 F8               [12] 2293 	mov	r0,a
      000633 E5 81            [12] 2294 	mov	a,sp
      000635 24 F4            [12] 2295 	add	a,#0xf4
      000637 F9               [12] 2296 	mov	r1,a
      000638 74 40            [12] 2297 	mov	a,#0x40
      00063A 26               [12] 2298 	add	a,@r0
      00063B F7               [12] 2299 	mov	@r1,a
      00063C E4               [12] 2300 	clr	a
      00063D 08               [12] 2301 	inc	r0
      00063E 36               [12] 2302 	addc	a,@r0
      00063F 09               [12] 2303 	inc	r1
      000640 F7               [12] 2304 	mov	@r1,a
      000641 08               [12] 2305 	inc	r0
      000642 09               [12] 2306 	inc	r1
      000643 E6               [12] 2307 	mov	a,@r0
      000644 F7               [12] 2308 	mov	@r1,a
      000645 E5 81            [12] 2309 	mov	a,sp
      000647 24 F4            [12] 2310 	add	a,#0xf4
      000649 F8               [12] 2311 	mov	r0,a
      00064A 86 82            [24] 2312 	mov	dpl,@r0
      00064C 08               [12] 2313 	inc	r0
      00064D 86 83            [24] 2314 	mov	dph,@r0
      00064F 08               [12] 2315 	inc	r0
      000650 86 F0            [24] 2316 	mov	b,@r0
      000652 E5 81            [12] 2317 	mov	a,sp
      000654 24 F7            [12] 2318 	add	a,#0xf7
      000656 F9               [12] 2319 	mov	r1,a
      000657 12r00r00         [24] 2320 	lcall	__gptrget
      00065A F7               [12] 2321 	mov	@r1,a
      00065B A3               [24] 2322 	inc	dptr
      00065C 12r00r00         [24] 2323 	lcall	__gptrget
      00065F 09               [12] 2324 	inc	r1
      000660 F7               [12] 2325 	mov	@r1,a
      000661 E5 81            [12] 2326 	mov	a,sp
      000663 24 F7            [12] 2327 	add	a,#0xf7
      000665 F8               [12] 2328 	mov	r0,a
      000666 74 01            [12] 2329 	mov	a,#0x01
      000668 26               [12] 2330 	add	a,@r0
      000669 FB               [12] 2331 	mov	r3,a
      00066A E4               [12] 2332 	clr	a
      00066B 08               [12] 2333 	inc	r0
      00066C 36               [12] 2334 	addc	a,@r0
      00066D FC               [12] 2335 	mov	r4,a
      00066E E5 81            [12] 2336 	mov	a,sp
      000670 24 F9            [12] 2337 	add	a,#0xf9
      000672 F8               [12] 2338 	mov	r0,a
      000673 74 42            [12] 2339 	mov	a,#0x42
      000675 26               [12] 2340 	add	a,@r0
      000676 FA               [12] 2341 	mov	r2,a
      000677 E4               [12] 2342 	clr	a
      000678 08               [12] 2343 	inc	r0
      000679 36               [12] 2344 	addc	a,@r0
      00067A FE               [12] 2345 	mov	r6,a
      00067B 08               [12] 2346 	inc	r0
      00067C 86 07            [24] 2347 	mov	ar7,@r0
      00067E 8A 82            [24] 2348 	mov	dpl,r2
      000680 8E 83            [24] 2349 	mov	dph,r6
      000682 8F F0            [24] 2350 	mov	b,r7
      000684 12r00r00         [24] 2351 	lcall	__gptrget
      000687 FA               [12] 2352 	mov	r2,a
      000688 A3               [24] 2353 	inc	dptr
      000689 12r00r00         [24] 2354 	lcall	__gptrget
      00068C FE               [12] 2355 	mov	r6,a
      00068D C3               [12] 2356 	clr	c
      00068E EB               [12] 2357 	mov	a,r3
      00068F 9A               [12] 2358 	subb	a,r2
      000690 EC               [12] 2359 	mov	a,r4
      000691 9E               [12] 2360 	subb	a,r6
      000692 D0 04            [24] 2361 	pop	ar4
      000694 D0 03            [24] 2362 	pop	ar3
      000696 D0 02            [24] 2363 	pop	ar2
      000698 50 23            [24] 2364 	jnc	00108$
                                   2365 ;	/home/user/contiki/core/net/rime/rudolph2.c:281: c->snd_nxt++;
      00069A E5 81            [12] 2366 	mov	a,sp
      00069C 24 FA            [12] 2367 	add	a,#0xfa
      00069E F8               [12] 2368 	mov	r0,a
      00069F 74 01            [12] 2369 	mov	a,#0x01
      0006A1 26               [12] 2370 	add	a,@r0
      0006A2 FE               [12] 2371 	mov	r6,a
      0006A3 E4               [12] 2372 	clr	a
      0006A4 08               [12] 2373 	inc	r0
      0006A5 36               [12] 2374 	addc	a,@r0
      0006A6 FF               [12] 2375 	mov	r7,a
      0006A7 E5 81            [12] 2376 	mov	a,sp
      0006A9 24 F7            [12] 2377 	add	a,#0xf7
      0006AB F8               [12] 2378 	mov	r0,a
      0006AC 86 82            [24] 2379 	mov	dpl,@r0
      0006AE 08               [12] 2380 	inc	r0
      0006AF 86 83            [24] 2381 	mov	dph,@r0
      0006B1 08               [12] 2382 	inc	r0
      0006B2 86 F0            [24] 2383 	mov	b,@r0
      0006B4 EE               [12] 2384 	mov	a,r6
      0006B5 12r00r00         [24] 2385 	lcall	__gptrput
      0006B8 A3               [24] 2386 	inc	dptr
      0006B9 EF               [12] 2387 	mov	a,r7
      0006BA 12r00r00         [24] 2388 	lcall	__gptrput
      0006BD                       2389 00108$:
                                   2390 ;	/home/user/contiki/core/net/rime/rudolph2.c:283: c->nacks = 0;
      0006BD 8A 82            [24] 2391 	mov	dpl,r2
      0006BF 8B 83            [24] 2392 	mov	dph,r3
      0006C1 8C F0            [24] 2393 	mov	b,r4
      0006C3 E4               [12] 2394 	clr	a
      0006C4 12r00r00         [24] 2395 	lcall	__gptrput
                                   2396 ;	/home/user/contiki/core/net/rime/rudolph2.c:284: ctimer_set(&c->t, interval, timed_send, c);
      0006C7 E5 81            [12] 2397 	mov	a,sp
      0006C9 24 FC            [12] 2398 	add	a,#0xfc
      0006CB F8               [12] 2399 	mov	r0,a
      0006CC 86 05            [24] 2400 	mov	ar5,@r0
      0006CE 08               [12] 2401 	inc	r0
      0006CF 86 06            [24] 2402 	mov	ar6,@r0
      0006D1 08               [12] 2403 	inc	r0
      0006D2 86 07            [24] 2404 	mov	ar7,@r0
      0006D4 E5 81            [12] 2405 	mov	a,sp
      0006D6 24 FC            [12] 2406 	add	a,#0xfc
      0006D8 F8               [12] 2407 	mov	r0,a
      0006D9 74 2B            [12] 2408 	mov	a,#0x2B
      0006DB 26               [12] 2409 	add	a,@r0
      0006DC FA               [12] 2410 	mov	r2,a
      0006DD E4               [12] 2411 	clr	a
      0006DE 08               [12] 2412 	inc	r0
      0006DF 36               [12] 2413 	addc	a,@r0
      0006E0 FB               [12] 2414 	mov	r3,a
      0006E1 08               [12] 2415 	inc	r0
      0006E2 86 04            [24] 2416 	mov	ar4,@r0
      0006E4 C0 05            [24] 2417 	push	ar5
      0006E6 C0 06            [24] 2418 	push	ar6
      0006E8 C0 07            [24] 2419 	push	ar7
      0006EA 74r3C            [12] 2420 	mov	a,#_timed_send
      0006EC C0 E0            [24] 2421 	push	acc
      0006EE 74s05            [12] 2422 	mov	a,#(_timed_send >> 8)
      0006F0 C0 E0            [24] 2423 	push	acc
      0006F2 E5 81            [12] 2424 	mov	a,sp
      0006F4 24 FA            [12] 2425 	add	a,#0xfa
      0006F6 F8               [12] 2426 	mov	r0,a
      0006F7 E6               [12] 2427 	mov	a,@r0
      0006F8 C0 E0            [24] 2428 	push	acc
      0006FA 08               [12] 2429 	inc	r0
      0006FB E6               [12] 2430 	mov	a,@r0
      0006FC C0 E0            [24] 2431 	push	acc
      0006FE 8A 82            [24] 2432 	mov	dpl,r2
      000700 8B 83            [24] 2433 	mov	dph,r3
      000702 8C F0            [24] 2434 	mov	b,r4
      000704 12r00r00         [24] 2435 	lcall	_ctimer_set
      000707 E5 81            [12] 2436 	mov	a,sp
      000709 24 F9            [12] 2437 	add	a,#0xf9
      00070B F5 81            [12] 2438 	mov	sp,a
      00070D                       2439 00114$:
      00070D E5 81            [12] 2440 	mov	a,sp
      00070F 24 F6            [12] 2441 	add	a,#0xF6
      000711 F5 81            [12] 2442 	mov	sp,a
      000713 22               [24] 2443 	ret
                                   2444 ;------------------------------------------------------------
                                   2445 ;Allocation info for local variables in function 'recv'
                                   2446 ;------------------------------------------------------------
                                   2447 ;polite                    Allocated to registers r5 r6 r7 
                                   2448 ;c                         Allocated to stack - sp -5
                                   2449 ;hdr                       Allocated to stack - sp -2
                                   2450 ;len                       Allocated to registers r4 r3 
                                   2451 ;sloc0                     Allocated to stack - sp -13
                                   2452 ;sloc1                     Allocated to stack - sp +1
                                   2453 ;sloc2                     Allocated to stack - sp -10
                                   2454 ;sloc3                     Allocated to stack - sp -8
                                   2455 ;------------------------------------------------------------
                                   2456 ;	/home/user/contiki/core/net/rime/rudolph2.c:289: recv(struct polite_conn *polite)
                                   2457 ;	-----------------------------------------
                                   2458 ;	 function recv
                                   2459 ;	-----------------------------------------
      000714                       2460 _recv:
      000714 E5 81            [12] 2461 	mov	a,sp
      000716 24 0E            [12] 2462 	add	a,#0x0E
      000718 F5 81            [12] 2463 	mov	sp,a
      00071A AD 82            [24] 2464 	mov	r5,dpl
      00071C AE 83            [24] 2465 	mov	r6,dph
      00071E AF F0            [24] 2466 	mov	r7,b
                                   2467 ;	/home/user/contiki/core/net/rime/rudolph2.c:291: struct rudolph2_conn *c = (struct rudolph2_conn *)polite;
      000720 E5 81            [12] 2468 	mov	a,sp
      000722 24 FB            [12] 2469 	add	a,#0xfb
      000724 F8               [12] 2470 	mov	r0,a
      000725 A6 05            [24] 2471 	mov	@r0,ar5
      000727 08               [12] 2472 	inc	r0
      000728 A6 06            [24] 2473 	mov	@r0,ar6
      00072A 08               [12] 2474 	inc	r0
      00072B A6 07            [24] 2475 	mov	@r0,ar7
                                   2476 ;	/home/user/contiki/core/net/rime/rudolph2.c:292: struct rudolph2_hdr *hdr = packetbuf_dataptr();
      00072D 12r00r00         [24] 2477 	lcall	_packetbuf_dataptr
      000730 AA 82            [24] 2478 	mov	r2,dpl
      000732 AB 83            [24] 2479 	mov	r3,dph
      000734 AC F0            [24] 2480 	mov	r4,b
      000736 A8 81            [24] 2481 	mov	r0,sp
      000738 18               [12] 2482 	dec	r0
      000739 18               [12] 2483 	dec	r0
      00073A A6 02            [24] 2484 	mov	@r0,ar2
      00073C 08               [12] 2485 	inc	r0
      00073D A6 03            [24] 2486 	mov	@r0,ar3
      00073F 08               [12] 2487 	inc	r0
      000740 A6 04            [24] 2488 	mov	@r0,ar4
                                   2489 ;	/home/user/contiki/core/net/rime/rudolph2.c:297: if(hdr->type == TYPE_NACK && hdr->hops_from_base > c->hops_from_base) {
      000742 A8 81            [24] 2490 	mov	r0,sp
      000744 18               [12] 2491 	dec	r0
      000745 18               [12] 2492 	dec	r0
      000746 86 82            [24] 2493 	mov	dpl,@r0
      000748 08               [12] 2494 	inc	r0
      000749 86 83            [24] 2495 	mov	dph,@r0
      00074B 08               [12] 2496 	inc	r0
      00074C 86 F0            [24] 2497 	mov	b,@r0
      00074E 12r00r00         [24] 2498 	lcall	__gptrget
      000751 FF               [12] 2499 	mov	r7,a
      000752 BF 01 02         [24] 2500 	cjne	r7,#0x01,00173$
      000755 80 03            [24] 2501 	sjmp	00174$
      000757                       2502 00173$:
      000757 02r08rD6         [24] 2503 	ljmp	00129$
      00075A                       2504 00174$:
      00075A C0 07            [24] 2505 	push	ar7
      00075C E5 81            [12] 2506 	mov	a,sp
      00075E 24 FD            [12] 2507 	add	a,#0xfd
      000760 F8               [12] 2508 	mov	r0,a
      000761 74 01            [12] 2509 	mov	a,#0x01
      000763 26               [12] 2510 	add	a,@r0
      000764 FD               [12] 2511 	mov	r5,a
      000765 E4               [12] 2512 	clr	a
      000766 08               [12] 2513 	inc	r0
      000767 36               [12] 2514 	addc	a,@r0
      000768 FE               [12] 2515 	mov	r6,a
      000769 08               [12] 2516 	inc	r0
      00076A 86 07            [24] 2517 	mov	ar7,@r0
      00076C 8D 82            [24] 2518 	mov	dpl,r5
      00076E 8E 83            [24] 2519 	mov	dph,r6
      000770 8F F0            [24] 2520 	mov	b,r7
      000772 12r00r00         [24] 2521 	lcall	__gptrget
      000775 FD               [12] 2522 	mov	r5,a
      000776 E5 81            [12] 2523 	mov	a,sp
      000778 24 FA            [12] 2524 	add	a,#0xfa
      00077A F8               [12] 2525 	mov	r0,a
      00077B 74 46            [12] 2526 	mov	a,#0x46
      00077D 26               [12] 2527 	add	a,@r0
      00077E FC               [12] 2528 	mov	r4,a
      00077F E4               [12] 2529 	clr	a
      000780 08               [12] 2530 	inc	r0
      000781 36               [12] 2531 	addc	a,@r0
      000782 FE               [12] 2532 	mov	r6,a
      000783 08               [12] 2533 	inc	r0
      000784 86 07            [24] 2534 	mov	ar7,@r0
      000786 8C 82            [24] 2535 	mov	dpl,r4
      000788 8E 83            [24] 2536 	mov	dph,r6
      00078A 8F F0            [24] 2537 	mov	b,r7
      00078C 12r00r00         [24] 2538 	lcall	__gptrget
      00078F FC               [12] 2539 	mov	r4,a
      000790 C3               [12] 2540 	clr	c
      000791 9D               [12] 2541 	subb	a,r5
      000792 D0 07            [24] 2542 	pop	ar7
      000794 40 03            [24] 2543 	jc	00175$
      000796 02r08rD6         [24] 2544 	ljmp	00129$
      000799                       2545 00175$:
                                   2546 ;	/home/user/contiki/core/net/rime/rudolph2.c:298: c->nacks++;
      000799 E5 81            [12] 2547 	mov	a,sp
      00079B 24 FB            [12] 2548 	add	a,#0xfb
      00079D F8               [12] 2549 	mov	r0,a
      00079E 74 47            [12] 2550 	mov	a,#0x47
      0007A0 26               [12] 2551 	add	a,@r0
      0007A1 FC               [12] 2552 	mov	r4,a
      0007A2 E4               [12] 2553 	clr	a
      0007A3 08               [12] 2554 	inc	r0
      0007A4 36               [12] 2555 	addc	a,@r0
      0007A5 FD               [12] 2556 	mov	r5,a
      0007A6 08               [12] 2557 	inc	r0
      0007A7 86 06            [24] 2558 	mov	ar6,@r0
      0007A9 8C 82            [24] 2559 	mov	dpl,r4
      0007AB 8D 83            [24] 2560 	mov	dph,r5
      0007AD 8E F0            [24] 2561 	mov	b,r6
      0007AF 12r00r00         [24] 2562 	lcall	__gptrget
      0007B2 FB               [12] 2563 	mov	r3,a
      0007B3 0B               [12] 2564 	inc	r3
      0007B4 8C 82            [24] 2565 	mov	dpl,r4
      0007B6 8D 83            [24] 2566 	mov	dph,r5
      0007B8 8E F0            [24] 2567 	mov	b,r6
      0007BA EB               [12] 2568 	mov	a,r3
      0007BB 12r00r00         [24] 2569 	lcall	__gptrput
                                   2570 ;	/home/user/contiki/core/net/rime/rudolph2.c:303: if(hdr->version == c->version) {
      0007BE A8 81            [24] 2571 	mov	r0,sp
      0007C0 18               [12] 2572 	dec	r0
      0007C1 18               [12] 2573 	dec	r0
      0007C2 74 02            [12] 2574 	mov	a,#0x02
      0007C4 26               [12] 2575 	add	a,@r0
      0007C5 FC               [12] 2576 	mov	r4,a
      0007C6 E4               [12] 2577 	clr	a
      0007C7 08               [12] 2578 	inc	r0
      0007C8 36               [12] 2579 	addc	a,@r0
      0007C9 FD               [12] 2580 	mov	r5,a
      0007CA 08               [12] 2581 	inc	r0
      0007CB 86 06            [24] 2582 	mov	ar6,@r0
      0007CD 8C 82            [24] 2583 	mov	dpl,r4
      0007CF 8D 83            [24] 2584 	mov	dph,r5
      0007D1 8E F0            [24] 2585 	mov	b,r6
      0007D3 12r00r00         [24] 2586 	lcall	__gptrget
      0007D6 FD               [12] 2587 	mov	r5,a
      0007D7 A3               [24] 2588 	inc	dptr
      0007D8 12r00r00         [24] 2589 	lcall	__gptrget
      0007DB FE               [12] 2590 	mov	r6,a
      0007DC E5 81            [12] 2591 	mov	a,sp
      0007DE 24 FB            [12] 2592 	add	a,#0xfb
      0007E0 F8               [12] 2593 	mov	r0,a
      0007E1 74 44            [12] 2594 	mov	a,#0x44
      0007E3 26               [12] 2595 	add	a,@r0
      0007E4 FA               [12] 2596 	mov	r2,a
      0007E5 E4               [12] 2597 	clr	a
      0007E6 08               [12] 2598 	inc	r0
      0007E7 36               [12] 2599 	addc	a,@r0
      0007E8 FB               [12] 2600 	mov	r3,a
      0007E9 08               [12] 2601 	inc	r0
      0007EA 86 04            [24] 2602 	mov	ar4,@r0
      0007EC 8A 82            [24] 2603 	mov	dpl,r2
      0007EE 8B 83            [24] 2604 	mov	dph,r3
      0007F0 8C F0            [24] 2605 	mov	b,r4
      0007F2 12r00r00         [24] 2606 	lcall	__gptrget
      0007F5 FB               [12] 2607 	mov	r3,a
      0007F6 A3               [24] 2608 	inc	dptr
      0007F7 12r00r00         [24] 2609 	lcall	__gptrget
      0007FA FC               [12] 2610 	mov	r4,a
      0007FB ED               [12] 2611 	mov	a,r5
      0007FC B5 03 06         [24] 2612 	cjne	a,ar3,00176$
      0007FF EE               [12] 2613 	mov	a,r6
      000800 B5 04 02         [24] 2614 	cjne	a,ar4,00176$
      000803 80 03            [24] 2615 	sjmp	00177$
      000805                       2616 00176$:
      000805 02r08r8C         [24] 2617 	ljmp	00106$
      000808                       2618 00177$:
                                   2619 ;	/home/user/contiki/core/net/rime/rudolph2.c:304: if(hdr->chunk < c->rcv_nxt) {
      000808 A8 81            [24] 2620 	mov	r0,sp
      00080A 18               [12] 2621 	dec	r0
      00080B 18               [12] 2622 	dec	r0
      00080C 74 04            [12] 2623 	mov	a,#0x04
      00080E 26               [12] 2624 	add	a,@r0
      00080F FF               [12] 2625 	mov	r7,a
      000810 E4               [12] 2626 	clr	a
      000811 08               [12] 2627 	inc	r0
      000812 36               [12] 2628 	addc	a,@r0
      000813 FE               [12] 2629 	mov	r6,a
      000814 08               [12] 2630 	inc	r0
      000815 86 05            [24] 2631 	mov	ar5,@r0
      000817 8F 82            [24] 2632 	mov	dpl,r7
      000819 8E 83            [24] 2633 	mov	dph,r6
      00081B 8D F0            [24] 2634 	mov	b,r5
      00081D 12r00r00         [24] 2635 	lcall	__gptrget
      000820 FF               [12] 2636 	mov	r7,a
      000821 A3               [24] 2637 	inc	dptr
      000822 12r00r00         [24] 2638 	lcall	__gptrget
      000825 FE               [12] 2639 	mov	r6,a
      000826 E5 81            [12] 2640 	mov	a,sp
      000828 24 FB            [12] 2641 	add	a,#0xfb
      00082A F8               [12] 2642 	mov	r0,a
      00082B 74 42            [12] 2643 	mov	a,#0x42
      00082D 26               [12] 2644 	add	a,@r0
      00082E FD               [12] 2645 	mov	r5,a
      00082F E4               [12] 2646 	clr	a
      000830 08               [12] 2647 	inc	r0
      000831 36               [12] 2648 	addc	a,@r0
      000832 FC               [12] 2649 	mov	r4,a
      000833 08               [12] 2650 	inc	r0
      000834 86 03            [24] 2651 	mov	ar3,@r0
      000836 8D 82            [24] 2652 	mov	dpl,r5
      000838 8C 83            [24] 2653 	mov	dph,r4
      00083A 8B F0            [24] 2654 	mov	b,r3
      00083C 12r00r00         [24] 2655 	lcall	__gptrget
      00083F FD               [12] 2656 	mov	r5,a
      000840 A3               [24] 2657 	inc	dptr
      000841 12r00r00         [24] 2658 	lcall	__gptrget
      000844 FC               [12] 2659 	mov	r4,a
      000845 C3               [12] 2660 	clr	c
      000846 EF               [12] 2661 	mov	a,r7
      000847 9D               [12] 2662 	subb	a,r5
      000848 EE               [12] 2663 	mov	a,r6
      000849 9C               [12] 2664 	subb	a,r4
      00084A 40 03            [24] 2665 	jc	00178$
      00084C 02r0Cr66         [24] 2666 	ljmp	00132$
      00084F                       2667 00178$:
                                   2668 ;	/home/user/contiki/core/net/rime/rudolph2.c:305: c->snd_nxt = hdr->chunk;
      00084F E5 81            [12] 2669 	mov	a,sp
      000851 24 FB            [12] 2670 	add	a,#0xfb
      000853 F8               [12] 2671 	mov	r0,a
      000854 74 40            [12] 2672 	mov	a,#0x40
      000856 26               [12] 2673 	add	a,@r0
      000857 FD               [12] 2674 	mov	r5,a
      000858 E4               [12] 2675 	clr	a
      000859 08               [12] 2676 	inc	r0
      00085A 36               [12] 2677 	addc	a,@r0
      00085B FC               [12] 2678 	mov	r4,a
      00085C 08               [12] 2679 	inc	r0
      00085D 86 03            [24] 2680 	mov	ar3,@r0
      00085F 8D 82            [24] 2681 	mov	dpl,r5
      000861 8C 83            [24] 2682 	mov	dph,r4
      000863 8B F0            [24] 2683 	mov	b,r3
      000865 EF               [12] 2684 	mov	a,r7
      000866 12r00r00         [24] 2685 	lcall	__gptrput
      000869 A3               [24] 2686 	inc	dptr
      00086A EE               [12] 2687 	mov	a,r6
      00086B 12r00r00         [24] 2688 	lcall	__gptrput
                                   2689 ;	/home/user/contiki/core/net/rime/rudolph2.c:306: send_data(c, SEND_INTERVAL);
      00086E 74 40            [12] 2690 	mov	a,#0x40
      000870 C0 E0            [24] 2691 	push	acc
      000872 E4               [12] 2692 	clr	a
      000873 C0 E0            [24] 2693 	push	acc
      000875 E5 81            [12] 2694 	mov	a,sp
      000877 24 F9            [12] 2695 	add	a,#0xf9
      000879 F8               [12] 2696 	mov	r0,a
      00087A 86 82            [24] 2697 	mov	dpl,@r0
      00087C 08               [12] 2698 	inc	r0
      00087D 86 83            [24] 2699 	mov	dph,@r0
      00087F 08               [12] 2700 	inc	r0
      000880 86 F0            [24] 2701 	mov	b,@r0
      000882 12r03rC1         [24] 2702 	lcall	_send_data
      000885 15 81            [12] 2703 	dec	sp
      000887 15 81            [12] 2704 	dec	sp
      000889 02r0Cr66         [24] 2705 	ljmp	00132$
      00088C                       2706 00106$:
                                   2707 ;	/home/user/contiki/core/net/rime/rudolph2.c:308: } else if(LT(hdr->version, c->version)) {
      00088C ED               [12] 2708 	mov	a,r5
      00088D C3               [12] 2709 	clr	c
      00088E 9B               [12] 2710 	subb	a,r3
      00088F FD               [12] 2711 	mov	r5,a
      000890 EE               [12] 2712 	mov	a,r6
      000891 9C               [12] 2713 	subb	a,r4
      000892 FE               [12] 2714 	mov	r6,a
      000893 20 E7 03         [24] 2715 	jb	acc.7,00179$
      000896 02r0Cr66         [24] 2716 	ljmp	00132$
      000899                       2717 00179$:
                                   2718 ;	/home/user/contiki/core/net/rime/rudolph2.c:309: c->snd_nxt = 0;
      000899 E5 81            [12] 2719 	mov	a,sp
      00089B 24 FB            [12] 2720 	add	a,#0xfb
      00089D F8               [12] 2721 	mov	r0,a
      00089E 74 40            [12] 2722 	mov	a,#0x40
      0008A0 26               [12] 2723 	add	a,@r0
      0008A1 FC               [12] 2724 	mov	r4,a
      0008A2 E4               [12] 2725 	clr	a
      0008A3 08               [12] 2726 	inc	r0
      0008A4 36               [12] 2727 	addc	a,@r0
      0008A5 FD               [12] 2728 	mov	r5,a
      0008A6 08               [12] 2729 	inc	r0
      0008A7 86 06            [24] 2730 	mov	ar6,@r0
      0008A9 8C 82            [24] 2731 	mov	dpl,r4
      0008AB 8D 83            [24] 2732 	mov	dph,r5
      0008AD 8E F0            [24] 2733 	mov	b,r6
      0008AF E4               [12] 2734 	clr	a
      0008B0 12r00r00         [24] 2735 	lcall	__gptrput
      0008B3 A3               [24] 2736 	inc	dptr
      0008B4 E4               [12] 2737 	clr	a
      0008B5 12r00r00         [24] 2738 	lcall	__gptrput
                                   2739 ;	/home/user/contiki/core/net/rime/rudolph2.c:310: send_data(c, SEND_INTERVAL);
      0008B8 74 40            [12] 2740 	mov	a,#0x40
      0008BA C0 E0            [24] 2741 	push	acc
      0008BC E4               [12] 2742 	clr	a
      0008BD C0 E0            [24] 2743 	push	acc
      0008BF E5 81            [12] 2744 	mov	a,sp
      0008C1 24 F9            [12] 2745 	add	a,#0xf9
      0008C3 F8               [12] 2746 	mov	r0,a
      0008C4 86 82            [24] 2747 	mov	dpl,@r0
      0008C6 08               [12] 2748 	inc	r0
      0008C7 86 83            [24] 2749 	mov	dph,@r0
      0008C9 08               [12] 2750 	inc	r0
      0008CA 86 F0            [24] 2751 	mov	b,@r0
      0008CC 12r03rC1         [24] 2752 	lcall	_send_data
      0008CF 15 81            [12] 2753 	dec	sp
      0008D1 15 81            [12] 2754 	dec	sp
      0008D3 02r0Cr66         [24] 2755 	ljmp	00132$
      0008D6                       2756 00129$:
                                   2757 ;	/home/user/contiki/core/net/rime/rudolph2.c:312: } else if(hdr->type == TYPE_DATA) {
      0008D6 EF               [12] 2758 	mov	a,r7
      0008D7 60 03            [24] 2759 	jz	00180$
      0008D9 02r0Cr66         [24] 2760 	ljmp	00132$
      0008DC                       2761 00180$:
                                   2762 ;	/home/user/contiki/core/net/rime/rudolph2.c:313: if(hdr->hops_from_base < c->hops_from_base) {
      0008DC A8 81            [24] 2763 	mov	r0,sp
      0008DE 18               [12] 2764 	dec	r0
      0008DF 18               [12] 2765 	dec	r0
      0008E0 74 01            [12] 2766 	mov	a,#0x01
      0008E2 26               [12] 2767 	add	a,@r0
      0008E3 FD               [12] 2768 	mov	r5,a
      0008E4 E4               [12] 2769 	clr	a
      0008E5 08               [12] 2770 	inc	r0
      0008E6 36               [12] 2771 	addc	a,@r0
      0008E7 FE               [12] 2772 	mov	r6,a
      0008E8 08               [12] 2773 	inc	r0
      0008E9 86 07            [24] 2774 	mov	ar7,@r0
      0008EB 8D 82            [24] 2775 	mov	dpl,r5
      0008ED 8E 83            [24] 2776 	mov	dph,r6
      0008EF 8F F0            [24] 2777 	mov	b,r7
      0008F1 12r00r00         [24] 2778 	lcall	__gptrget
      0008F4 FF               [12] 2779 	mov	r7,a
      0008F5 E5 81            [12] 2780 	mov	a,sp
      0008F7 24 FB            [12] 2781 	add	a,#0xfb
      0008F9 F8               [12] 2782 	mov	r0,a
      0008FA 74 46            [12] 2783 	mov	a,#0x46
      0008FC 26               [12] 2784 	add	a,@r0
      0008FD FC               [12] 2785 	mov	r4,a
      0008FE E4               [12] 2786 	clr	a
      0008FF 08               [12] 2787 	inc	r0
      000900 36               [12] 2788 	addc	a,@r0
      000901 FD               [12] 2789 	mov	r5,a
      000902 08               [12] 2790 	inc	r0
      000903 86 06            [24] 2791 	mov	ar6,@r0
      000905 8C 82            [24] 2792 	mov	dpl,r4
      000907 8D 83            [24] 2793 	mov	dph,r5
      000909 8E F0            [24] 2794 	mov	b,r6
      00090B 12r00r00         [24] 2795 	lcall	__gptrget
      00090E FB               [12] 2796 	mov	r3,a
      00090F C3               [12] 2797 	clr	c
      000910 EF               [12] 2798 	mov	a,r7
      000911 9B               [12] 2799 	subb	a,r3
      000912 40 03            [24] 2800 	jc	00181$
      000914 02r0Cr66         [24] 2801 	ljmp	00132$
      000917                       2802 00181$:
                                   2803 ;	/home/user/contiki/core/net/rime/rudolph2.c:316: c->hops_from_base = hdr->hops_from_base + 1;
      000917 0F               [12] 2804 	inc	r7
      000918 8C 82            [24] 2805 	mov	dpl,r4
      00091A 8D 83            [24] 2806 	mov	dph,r5
      00091C 8E F0            [24] 2807 	mov	b,r6
      00091E EF               [12] 2808 	mov	a,r7
      00091F 12r00r00         [24] 2809 	lcall	__gptrput
                                   2810 ;	/home/user/contiki/core/net/rime/rudolph2.c:317: if(LT(c->version, hdr->version)) {
      000922 E5 81            [12] 2811 	mov	a,sp
      000924 24 FB            [12] 2812 	add	a,#0xfb
      000926 F8               [12] 2813 	mov	r0,a
      000927 E5 81            [12] 2814 	mov	a,sp
      000929 24 F3            [12] 2815 	add	a,#0xf3
      00092B F9               [12] 2816 	mov	r1,a
      00092C 74 44            [12] 2817 	mov	a,#0x44
      00092E 26               [12] 2818 	add	a,@r0
      00092F F7               [12] 2819 	mov	@r1,a
      000930 E4               [12] 2820 	clr	a
      000931 08               [12] 2821 	inc	r0
      000932 36               [12] 2822 	addc	a,@r0
      000933 09               [12] 2823 	inc	r1
      000934 F7               [12] 2824 	mov	@r1,a
      000935 08               [12] 2825 	inc	r0
      000936 09               [12] 2826 	inc	r1
      000937 E6               [12] 2827 	mov	a,@r0
      000938 F7               [12] 2828 	mov	@r1,a
      000939 E5 81            [12] 2829 	mov	a,sp
      00093B 24 F3            [12] 2830 	add	a,#0xf3
      00093D F8               [12] 2831 	mov	r0,a
      00093E 86 82            [24] 2832 	mov	dpl,@r0
      000940 08               [12] 2833 	inc	r0
      000941 86 83            [24] 2834 	mov	dph,@r0
      000943 08               [12] 2835 	inc	r0
      000944 86 F0            [24] 2836 	mov	b,@r0
      000946 12r00r00         [24] 2837 	lcall	__gptrget
      000949 FE               [12] 2838 	mov	r6,a
      00094A A3               [24] 2839 	inc	dptr
      00094B 12r00r00         [24] 2840 	lcall	__gptrget
      00094E FD               [12] 2841 	mov	r5,a
      00094F A8 81            [24] 2842 	mov	r0,sp
      000951 18               [12] 2843 	dec	r0
      000952 18               [12] 2844 	dec	r0
      000953 74 02            [12] 2845 	mov	a,#0x02
      000955 26               [12] 2846 	add	a,@r0
      000956 FA               [12] 2847 	mov	r2,a
      000957 E4               [12] 2848 	clr	a
      000958 08               [12] 2849 	inc	r0
      000959 36               [12] 2850 	addc	a,@r0
      00095A FB               [12] 2851 	mov	r3,a
      00095B 08               [12] 2852 	inc	r0
      00095C 86 04            [24] 2853 	mov	ar4,@r0
      00095E 8A 82            [24] 2854 	mov	dpl,r2
      000960 8B 83            [24] 2855 	mov	dph,r3
      000962 8C F0            [24] 2856 	mov	b,r4
      000964 12r00r00         [24] 2857 	lcall	__gptrget
      000967 FB               [12] 2858 	mov	r3,a
      000968 A3               [24] 2859 	inc	dptr
      000969 12r00r00         [24] 2860 	lcall	__gptrget
      00096C FC               [12] 2861 	mov	r4,a
      00096D EE               [12] 2862 	mov	a,r6
      00096E C3               [12] 2863 	clr	c
      00096F 9B               [12] 2864 	subb	a,r3
      000970 FA               [12] 2865 	mov	r2,a
      000971 ED               [12] 2866 	mov	a,r5
      000972 9C               [12] 2867 	subb	a,r4
      000973 FF               [12] 2868 	mov	r7,a
      000974 20 E7 03         [24] 2869 	jb	acc.7,00182$
      000977 02r0Ar7E         [24] 2870 	ljmp	00122$
      00097A                       2871 00182$:
                                   2872 ;	/home/user/contiki/core/net/rime/rudolph2.c:321: c->version = hdr->version;
      00097A E5 81            [12] 2873 	mov	a,sp
      00097C 24 F3            [12] 2874 	add	a,#0xf3
      00097E F8               [12] 2875 	mov	r0,a
      00097F 86 82            [24] 2876 	mov	dpl,@r0
      000981 08               [12] 2877 	inc	r0
      000982 86 83            [24] 2878 	mov	dph,@r0
      000984 08               [12] 2879 	inc	r0
      000985 86 F0            [24] 2880 	mov	b,@r0
      000987 EB               [12] 2881 	mov	a,r3
      000988 12r00r00         [24] 2882 	lcall	__gptrput
      00098B A3               [24] 2883 	inc	dptr
      00098C EC               [12] 2884 	mov	a,r4
      00098D 12r00r00         [24] 2885 	lcall	__gptrput
                                   2886 ;	/home/user/contiki/core/net/rime/rudolph2.c:322: c->snd_nxt = c->rcv_nxt = 0;
      000990 E5 81            [12] 2887 	mov	a,sp
      000992 24 FB            [12] 2888 	add	a,#0xfb
      000994 F8               [12] 2889 	mov	r0,a
      000995 74 40            [12] 2890 	mov	a,#0x40
      000997 26               [12] 2891 	add	a,@r0
      000998 FD               [12] 2892 	mov	r5,a
      000999 E4               [12] 2893 	clr	a
      00099A 08               [12] 2894 	inc	r0
      00099B 36               [12] 2895 	addc	a,@r0
      00099C FC               [12] 2896 	mov	r4,a
      00099D 08               [12] 2897 	inc	r0
      00099E 86 03            [24] 2898 	mov	ar3,@r0
      0009A0 E5 81            [12] 2899 	mov	a,sp
      0009A2 24 FB            [12] 2900 	add	a,#0xfb
      0009A4 F8               [12] 2901 	mov	r0,a
      0009A5 74 42            [12] 2902 	mov	a,#0x42
      0009A7 26               [12] 2903 	add	a,@r0
      0009A8 FA               [12] 2904 	mov	r2,a
      0009A9 E4               [12] 2905 	clr	a
      0009AA 08               [12] 2906 	inc	r0
      0009AB 36               [12] 2907 	addc	a,@r0
      0009AC FE               [12] 2908 	mov	r6,a
      0009AD 08               [12] 2909 	inc	r0
      0009AE 86 07            [24] 2910 	mov	ar7,@r0
      0009B0 8A 82            [24] 2911 	mov	dpl,r2
      0009B2 8E 83            [24] 2912 	mov	dph,r6
      0009B4 8F F0            [24] 2913 	mov	b,r7
      0009B6 E4               [12] 2914 	clr	a
      0009B7 12r00r00         [24] 2915 	lcall	__gptrput
      0009BA A3               [24] 2916 	inc	dptr
      0009BB E4               [12] 2917 	clr	a
      0009BC 12r00r00         [24] 2918 	lcall	__gptrput
      0009BF 8D 82            [24] 2919 	mov	dpl,r5
      0009C1 8C 83            [24] 2920 	mov	dph,r4
      0009C3 8B F0            [24] 2921 	mov	b,r3
      0009C5 E4               [12] 2922 	clr	a
      0009C6 12r00r00         [24] 2923 	lcall	__gptrput
      0009C9 A3               [24] 2924 	inc	dptr
      0009CA E4               [12] 2925 	clr	a
      0009CB 12r00r00         [24] 2926 	lcall	__gptrput
                                   2927 ;	/home/user/contiki/core/net/rime/rudolph2.c:323: c->flags &= ~FLAG_LAST_RECEIVED;
      0009CE E5 81            [12] 2928 	mov	a,sp
      0009D0 24 FB            [12] 2929 	add	a,#0xfb
      0009D2 F8               [12] 2930 	mov	r0,a
      0009D3 74 48            [12] 2931 	mov	a,#0x48
      0009D5 26               [12] 2932 	add	a,@r0
      0009D6 FD               [12] 2933 	mov	r5,a
      0009D7 E4               [12] 2934 	clr	a
      0009D8 08               [12] 2935 	inc	r0
      0009D9 36               [12] 2936 	addc	a,@r0
      0009DA FE               [12] 2937 	mov	r6,a
      0009DB 08               [12] 2938 	inc	r0
      0009DC 86 07            [24] 2939 	mov	ar7,@r0
      0009DE 8D 82            [24] 2940 	mov	dpl,r5
      0009E0 8E 83            [24] 2941 	mov	dph,r6
      0009E2 8F F0            [24] 2942 	mov	b,r7
      0009E4 12r00r00         [24] 2943 	lcall	__gptrget
      0009E7 FA               [12] 2944 	mov	r2,a
      0009E8 53 02 FD         [24] 2945 	anl	ar2,#0xFD
      0009EB 8D 82            [24] 2946 	mov	dpl,r5
      0009ED 8E 83            [24] 2947 	mov	dph,r6
      0009EF 8F F0            [24] 2948 	mov	b,r7
      0009F1 EA               [12] 2949 	mov	a,r2
      0009F2 12r00r00         [24] 2950 	lcall	__gptrput
                                   2951 ;	/home/user/contiki/core/net/rime/rudolph2.c:324: c->flags &= ~FLAG_LAST_SENT;
      0009F5 8D 82            [24] 2952 	mov	dpl,r5
      0009F7 8E 83            [24] 2953 	mov	dph,r6
      0009F9 8F F0            [24] 2954 	mov	b,r7
      0009FB 12r00r00         [24] 2955 	lcall	__gptrget
      0009FE FA               [12] 2956 	mov	r2,a
      0009FF 53 02 FE         [24] 2957 	anl	ar2,#0xFE
      000A02 8D 82            [24] 2958 	mov	dpl,r5
      000A04 8E 83            [24] 2959 	mov	dph,r6
      000A06 8F F0            [24] 2960 	mov	b,r7
      000A08 EA               [12] 2961 	mov	a,r2
      000A09 12r00r00         [24] 2962 	lcall	__gptrput
                                   2963 ;	/home/user/contiki/core/net/rime/rudolph2.c:325: if(hdr->chunk != 0) {
      000A0C A8 81            [24] 2964 	mov	r0,sp
      000A0E 18               [12] 2965 	dec	r0
      000A0F 18               [12] 2966 	dec	r0
      000A10 74 04            [12] 2967 	mov	a,#0x04
      000A12 26               [12] 2968 	add	a,@r0
      000A13 FD               [12] 2969 	mov	r5,a
      000A14 E4               [12] 2970 	clr	a
      000A15 08               [12] 2971 	inc	r0
      000A16 36               [12] 2972 	addc	a,@r0
      000A17 FE               [12] 2973 	mov	r6,a
      000A18 08               [12] 2974 	inc	r0
      000A19 86 07            [24] 2975 	mov	ar7,@r0
      000A1B 8D 82            [24] 2976 	mov	dpl,r5
      000A1D 8E 83            [24] 2977 	mov	dph,r6
      000A1F 8F F0            [24] 2978 	mov	b,r7
      000A21 12r00r00         [24] 2979 	lcall	__gptrget
      000A24 FD               [12] 2980 	mov	r5,a
      000A25 A3               [24] 2981 	inc	dptr
      000A26 12r00r00         [24] 2982 	lcall	__gptrget
      000A29 FE               [12] 2983 	mov	r6,a
      000A2A 4D               [12] 2984 	orl	a,r5
      000A2B 60 13            [24] 2985 	jz	00109$
                                   2986 ;	/home/user/contiki/core/net/rime/rudolph2.c:326: send_nack(c);
      000A2D E5 81            [12] 2987 	mov	a,sp
      000A2F 24 FB            [12] 2988 	add	a,#0xfb
      000A31 F8               [12] 2989 	mov	r0,a
      000A32 86 82            [24] 2990 	mov	dpl,@r0
      000A34 08               [12] 2991 	inc	r0
      000A35 86 83            [24] 2992 	mov	dph,@r0
      000A37 08               [12] 2993 	inc	r0
      000A38 86 F0            [24] 2994 	mov	b,@r0
      000A3A 12r04r2C         [24] 2995 	lcall	_send_nack
      000A3D 02r0Cr66         [24] 2996 	ljmp	00132$
      000A40                       2997 00109$:
                                   2998 ;	/home/user/contiki/core/net/rime/rudolph2.c:328: packetbuf_hdrreduce(sizeof(struct rudolph2_hdr));
      000A40 90 00 06         [24] 2999 	mov	dptr,#0x0006
      000A43 12r00r00         [24] 3000 	lcall	_packetbuf_hdrreduce
                                   3001 ;	/home/user/contiki/core/net/rime/rudolph2.c:329: write_data(c, 0, packetbuf_dataptr(), packetbuf_totlen());
      000A46 12r00r00         [24] 3002 	lcall	_packetbuf_totlen
      000A49 AE 82            [24] 3003 	mov	r6,dpl
      000A4B AC 83            [24] 3004 	mov	r4,dph
      000A4D C0 06            [24] 3005 	push	ar6
      000A4F C0 04            [24] 3006 	push	ar4
      000A51 12r00r00         [24] 3007 	lcall	_packetbuf_dataptr
      000A54 AA 82            [24] 3008 	mov	r2,dpl
      000A56 AD 83            [24] 3009 	mov	r5,dph
      000A58 AF F0            [24] 3010 	mov	r7,b
      000A5A C0 02            [24] 3011 	push	ar2
      000A5C C0 05            [24] 3012 	push	ar5
      000A5E C0 07            [24] 3013 	push	ar7
      000A60 E4               [12] 3014 	clr	a
      000A61 C0 E0            [24] 3015 	push	acc
      000A63 C0 E0            [24] 3016 	push	acc
      000A65 E5 81            [12] 3017 	mov	a,sp
      000A67 24 F4            [12] 3018 	add	a,#0xf4
      000A69 F8               [12] 3019 	mov	r0,a
      000A6A 86 82            [24] 3020 	mov	dpl,@r0
      000A6C 08               [12] 3021 	inc	r0
      000A6D 86 83            [24] 3022 	mov	dph,@r0
      000A6F 08               [12] 3023 	inc	r0
      000A70 86 F0            [24] 3024 	mov	b,@r0
      000A72 12r01rD0         [24] 3025 	lcall	_write_data
      000A75 E5 81            [12] 3026 	mov	a,sp
      000A77 24 F9            [12] 3027 	add	a,#0xf9
      000A79 F5 81            [12] 3028 	mov	sp,a
      000A7B 02r0Cr66         [24] 3029 	ljmp	00132$
      000A7E                       3030 00122$:
                                   3031 ;	/home/user/contiki/core/net/rime/rudolph2.c:331: } else if(hdr->version == c->version) {
      000A7E EB               [12] 3032 	mov	a,r3
      000A7F B5 06 06         [24] 3033 	cjne	a,ar6,00184$
      000A82 EC               [12] 3034 	mov	a,r4
      000A83 B5 05 02         [24] 3035 	cjne	a,ar5,00184$
      000A86 80 03            [24] 3036 	sjmp	00185$
      000A88                       3037 00184$:
      000A88 02r0Cr66         [24] 3038 	ljmp	00132$
      000A8B                       3039 00185$:
                                   3040 ;	/home/user/contiki/core/net/rime/rudolph2.c:336: if(hdr->chunk == c->rcv_nxt) {
      000A8B A8 81            [24] 3041 	mov	r0,sp
      000A8D 18               [12] 3042 	dec	r0
      000A8E 18               [12] 3043 	dec	r0
      000A8F E5 81            [12] 3044 	mov	a,sp
      000A91 24 F3            [12] 3045 	add	a,#0xf3
      000A93 F9               [12] 3046 	mov	r1,a
      000A94 74 04            [12] 3047 	mov	a,#0x04
      000A96 26               [12] 3048 	add	a,@r0
      000A97 F7               [12] 3049 	mov	@r1,a
      000A98 E4               [12] 3050 	clr	a
      000A99 08               [12] 3051 	inc	r0
      000A9A 36               [12] 3052 	addc	a,@r0
      000A9B 09               [12] 3053 	inc	r1
      000A9C F7               [12] 3054 	mov	@r1,a
      000A9D 08               [12] 3055 	inc	r0
      000A9E 09               [12] 3056 	inc	r1
      000A9F E6               [12] 3057 	mov	a,@r0
      000AA0 F7               [12] 3058 	mov	@r1,a
      000AA1 E5 81            [12] 3059 	mov	a,sp
      000AA3 24 F3            [12] 3060 	add	a,#0xf3
      000AA5 F8               [12] 3061 	mov	r0,a
      000AA6 86 82            [24] 3062 	mov	dpl,@r0
      000AA8 08               [12] 3063 	inc	r0
      000AA9 86 83            [24] 3064 	mov	dph,@r0
      000AAB 08               [12] 3065 	inc	r0
      000AAC 86 F0            [24] 3066 	mov	b,@r0
      000AAE 12r00r00         [24] 3067 	lcall	__gptrget
      000AB1 FF               [12] 3068 	mov	r7,a
      000AB2 A3               [24] 3069 	inc	dptr
      000AB3 12r00r00         [24] 3070 	lcall	__gptrget
      000AB6 FE               [12] 3071 	mov	r6,a
      000AB7 E5 81            [12] 3072 	mov	a,sp
      000AB9 24 FB            [12] 3073 	add	a,#0xfb
      000ABB F8               [12] 3074 	mov	r0,a
      000ABC 74 42            [12] 3075 	mov	a,#0x42
      000ABE 26               [12] 3076 	add	a,@r0
      000ABF FA               [12] 3077 	mov	r2,a
      000AC0 E4               [12] 3078 	clr	a
      000AC1 08               [12] 3079 	inc	r0
      000AC2 36               [12] 3080 	addc	a,@r0
      000AC3 FB               [12] 3081 	mov	r3,a
      000AC4 08               [12] 3082 	inc	r0
      000AC5 86 04            [24] 3083 	mov	ar4,@r0
      000AC7 8A 82            [24] 3084 	mov	dpl,r2
      000AC9 8B 83            [24] 3085 	mov	dph,r3
      000ACB 8C F0            [24] 3086 	mov	b,r4
      000ACD 12r00r00         [24] 3087 	lcall	__gptrget
      000AD0 FB               [12] 3088 	mov	r3,a
      000AD1 A3               [24] 3089 	inc	dptr
      000AD2 12r00r00         [24] 3090 	lcall	__gptrget
      000AD5 FC               [12] 3091 	mov	r4,a
      000AD6 EF               [12] 3092 	mov	a,r7
      000AD7 B5 03 06         [24] 3093 	cjne	a,ar3,00186$
      000ADA EE               [12] 3094 	mov	a,r6
      000ADB B5 04 02         [24] 3095 	cjne	a,ar4,00186$
      000ADE 80 03            [24] 3096 	sjmp	00187$
      000AE0                       3097 00186$:
      000AE0 02r0Cr4F         [24] 3098 	ljmp	00117$
      000AE3                       3099 00187$:
                                   3100 ;	/home/user/contiki/core/net/rime/rudolph2.c:338: packetbuf_hdrreduce(sizeof(struct rudolph2_hdr));
      000AE3 90 00 06         [24] 3101 	mov	dptr,#0x0006
      000AE6 12r00r00         [24] 3102 	lcall	_packetbuf_hdrreduce
                                   3103 ;	/home/user/contiki/core/net/rime/rudolph2.c:342: len = packetbuf_totlen();
      000AE9 12r00r00         [24] 3104 	lcall	_packetbuf_totlen
      000AEC AF 82            [24] 3105 	mov	r7,dpl
      000AEE AE 83            [24] 3106 	mov	r6,dph
      000AF0 8F 04            [24] 3107 	mov	ar4,r7
      000AF2 8E 03            [24] 3108 	mov	ar3,r6
                                   3109 ;	/home/user/contiki/core/net/rime/rudolph2.c:343: write_data(c, hdr->chunk, packetbuf_dataptr(), packetbuf_totlen());
      000AF4 C0 04            [24] 3110 	push	ar4
      000AF6 C0 03            [24] 3111 	push	ar3
      000AF8 12r00r00         [24] 3112 	lcall	_packetbuf_totlen
      000AFB C8               [12] 3113 	xch	a,r0
      000AFC E5 81            [12] 3114 	mov	a,sp
      000AFE 24 F4            [12] 3115 	add	a,#0xf4
      000B00 C8               [12] 3116 	xch	a,r0
      000B01 A6 82            [24] 3117 	mov	@r0,dpl
      000B03 08               [12] 3118 	inc	r0
      000B04 A6 83            [24] 3119 	mov	@r0,dph
      000B06 12r00r00         [24] 3120 	lcall	_packetbuf_dataptr
      000B09 AD 82            [24] 3121 	mov	r5,dpl
      000B0B AE 83            [24] 3122 	mov	r6,dph
      000B0D AF F0            [24] 3123 	mov	r7,b
      000B0F D0 03            [24] 3124 	pop	ar3
      000B11 D0 04            [24] 3125 	pop	ar4
      000B13 E5 81            [12] 3126 	mov	a,sp
      000B15 24 F8            [12] 3127 	add	a,#0xf8
      000B17 F8               [12] 3128 	mov	r0,a
      000B18 A6 05            [24] 3129 	mov	@r0,ar5
      000B1A 08               [12] 3130 	inc	r0
      000B1B A6 06            [24] 3131 	mov	@r0,ar6
      000B1D 08               [12] 3132 	inc	r0
      000B1E A6 07            [24] 3133 	mov	@r0,ar7
      000B20 E5 81            [12] 3134 	mov	a,sp
      000B22 24 F3            [12] 3135 	add	a,#0xf3
      000B24 F8               [12] 3136 	mov	r0,a
      000B25 86 82            [24] 3137 	mov	dpl,@r0
      000B27 08               [12] 3138 	inc	r0
      000B28 86 83            [24] 3139 	mov	dph,@r0
      000B2A 08               [12] 3140 	inc	r0
      000B2B 86 F0            [24] 3141 	mov	b,@r0
      000B2D 12r00r00         [24] 3142 	lcall	__gptrget
      000B30 FA               [12] 3143 	mov	r2,a
      000B31 A3               [24] 3144 	inc	dptr
      000B32 12r00r00         [24] 3145 	lcall	__gptrget
      000B35 FF               [12] 3146 	mov	r7,a
      000B36 C0 04            [24] 3147 	push	ar4
      000B38 C0 03            [24] 3148 	push	ar3
      000B3A E5 81            [12] 3149 	mov	a,sp
      000B3C 24 F4            [12] 3150 	add	a,#0xf4
      000B3E F8               [12] 3151 	mov	r0,a
      000B3F E6               [12] 3152 	mov	a,@r0
      000B40 C0 E0            [24] 3153 	push	acc
      000B42 08               [12] 3154 	inc	r0
      000B43 E6               [12] 3155 	mov	a,@r0
      000B44 C0 E0            [24] 3156 	push	acc
      000B46 E5 81            [12] 3157 	mov	a,sp
      000B48 24 F4            [12] 3158 	add	a,#0xf4
      000B4A F8               [12] 3159 	mov	r0,a
      000B4B E6               [12] 3160 	mov	a,@r0
      000B4C C0 E0            [24] 3161 	push	acc
      000B4E 08               [12] 3162 	inc	r0
      000B4F E6               [12] 3163 	mov	a,@r0
      000B50 C0 E0            [24] 3164 	push	acc
      000B52 08               [12] 3165 	inc	r0
      000B53 E6               [12] 3166 	mov	a,@r0
      000B54 C0 E0            [24] 3167 	push	acc
      000B56 C0 02            [24] 3168 	push	ar2
      000B58 C0 07            [24] 3169 	push	ar7
      000B5A E5 81            [12] 3170 	mov	a,sp
      000B5C 24 F2            [12] 3171 	add	a,#0xf2
      000B5E F8               [12] 3172 	mov	r0,a
      000B5F 86 82            [24] 3173 	mov	dpl,@r0
      000B61 08               [12] 3174 	inc	r0
      000B62 86 83            [24] 3175 	mov	dph,@r0
      000B64 08               [12] 3176 	inc	r0
      000B65 86 F0            [24] 3177 	mov	b,@r0
      000B67 12r01rD0         [24] 3178 	lcall	_write_data
      000B6A E5 81            [12] 3179 	mov	a,sp
      000B6C 24 F9            [12] 3180 	add	a,#0xf9
      000B6E F5 81            [12] 3181 	mov	sp,a
      000B70 D0 03            [24] 3182 	pop	ar3
      000B72 D0 04            [24] 3183 	pop	ar4
                                   3184 ;	/home/user/contiki/core/net/rime/rudolph2.c:344: c->rcv_nxt++;
      000B74 E5 81            [12] 3185 	mov	a,sp
      000B76 24 FB            [12] 3186 	add	a,#0xfb
      000B78 F8               [12] 3187 	mov	r0,a
      000B79 E5 81            [12] 3188 	mov	a,sp
      000B7B 24 F8            [12] 3189 	add	a,#0xf8
      000B7D F9               [12] 3190 	mov	r1,a
      000B7E 74 42            [12] 3191 	mov	a,#0x42
      000B80 26               [12] 3192 	add	a,@r0
      000B81 F7               [12] 3193 	mov	@r1,a
      000B82 E4               [12] 3194 	clr	a
      000B83 08               [12] 3195 	inc	r0
      000B84 36               [12] 3196 	addc	a,@r0
      000B85 09               [12] 3197 	inc	r1
      000B86 F7               [12] 3198 	mov	@r1,a
      000B87 08               [12] 3199 	inc	r0
      000B88 09               [12] 3200 	inc	r1
      000B89 E6               [12] 3201 	mov	a,@r0
      000B8A F7               [12] 3202 	mov	@r1,a
      000B8B E5 81            [12] 3203 	mov	a,sp
      000B8D 24 F8            [12] 3204 	add	a,#0xf8
      000B8F F8               [12] 3205 	mov	r0,a
      000B90 86 82            [24] 3206 	mov	dpl,@r0
      000B92 08               [12] 3207 	inc	r0
      000B93 86 83            [24] 3208 	mov	dph,@r0
      000B95 08               [12] 3209 	inc	r0
      000B96 86 F0            [24] 3210 	mov	b,@r0
      000B98 12r00r00         [24] 3211 	lcall	__gptrget
      000B9B FA               [12] 3212 	mov	r2,a
      000B9C A3               [24] 3213 	inc	dptr
      000B9D 12r00r00         [24] 3214 	lcall	__gptrget
      000BA0 FF               [12] 3215 	mov	r7,a
      000BA1 0A               [12] 3216 	inc	r2
      000BA2 BA 00 01         [24] 3217 	cjne	r2,#0x00,00188$
      000BA5 0F               [12] 3218 	inc	r7
      000BA6                       3219 00188$:
      000BA6 E5 81            [12] 3220 	mov	a,sp
      000BA8 24 F8            [12] 3221 	add	a,#0xf8
      000BAA F8               [12] 3222 	mov	r0,a
      000BAB 86 82            [24] 3223 	mov	dpl,@r0
      000BAD 08               [12] 3224 	inc	r0
      000BAE 86 83            [24] 3225 	mov	dph,@r0
      000BB0 08               [12] 3226 	inc	r0
      000BB1 86 F0            [24] 3227 	mov	b,@r0
      000BB3 EA               [12] 3228 	mov	a,r2
      000BB4 12r00r00         [24] 3229 	lcall	__gptrput
      000BB7 A3               [24] 3230 	inc	dptr
      000BB8 EF               [12] 3231 	mov	a,r7
      000BB9 12r00r00         [24] 3232 	lcall	__gptrput
                                   3233 ;	/home/user/contiki/core/net/rime/rudolph2.c:345: if(len < RUDOLPH2_DATASIZE) {
      000BBC C3               [12] 3234 	clr	c
      000BBD EC               [12] 3235 	mov	a,r4
      000BBE 94 40            [12] 3236 	subb	a,#0x40
      000BC0 EB               [12] 3237 	mov	a,r3
      000BC1 64 80            [12] 3238 	xrl	a,#0x80
      000BC3 94 80            [12] 3239 	subb	a,#0x80
      000BC5 40 03            [24] 3240 	jc	00189$
      000BC7 02r0Cr66         [24] 3241 	ljmp	00132$
      000BCA                       3242 00189$:
                                   3243 ;	/home/user/contiki/core/net/rime/rudolph2.c:346: c->flags |= FLAG_LAST_RECEIVED;
      000BCA E5 81            [12] 3244 	mov	a,sp
      000BCC 24 FB            [12] 3245 	add	a,#0xfb
      000BCE F8               [12] 3246 	mov	r0,a
      000BCF 74 48            [12] 3247 	mov	a,#0x48
      000BD1 26               [12] 3248 	add	a,@r0
      000BD2 FD               [12] 3249 	mov	r5,a
      000BD3 E4               [12] 3250 	clr	a
      000BD4 08               [12] 3251 	inc	r0
      000BD5 36               [12] 3252 	addc	a,@r0
      000BD6 FE               [12] 3253 	mov	r6,a
      000BD7 08               [12] 3254 	inc	r0
      000BD8 86 07            [24] 3255 	mov	ar7,@r0
      000BDA 8D 82            [24] 3256 	mov	dpl,r5
      000BDC 8E 83            [24] 3257 	mov	dph,r6
      000BDE 8F F0            [24] 3258 	mov	b,r7
      000BE0 12r00r00         [24] 3259 	lcall	__gptrget
      000BE3 FA               [12] 3260 	mov	r2,a
      000BE4 43 02 02         [24] 3261 	orl	ar2,#0x02
      000BE7 8D 82            [24] 3262 	mov	dpl,r5
      000BE9 8E 83            [24] 3263 	mov	dph,r6
      000BEB 8F F0            [24] 3264 	mov	b,r7
      000BED EA               [12] 3265 	mov	a,r2
      000BEE 12r00r00         [24] 3266 	lcall	__gptrput
                                   3267 ;	/home/user/contiki/core/net/rime/rudolph2.c:347: send_data(c, RESEND_INTERVAL);
      000BF1 E4               [12] 3268 	clr	a
      000BF2 C0 E0            [24] 3269 	push	acc
      000BF4 74 01            [12] 3270 	mov	a,#0x01
      000BF6 C0 E0            [24] 3271 	push	acc
      000BF8 E5 81            [12] 3272 	mov	a,sp
      000BFA 24 F9            [12] 3273 	add	a,#0xf9
      000BFC F8               [12] 3274 	mov	r0,a
      000BFD 86 82            [24] 3275 	mov	dpl,@r0
      000BFF 08               [12] 3276 	inc	r0
      000C00 86 83            [24] 3277 	mov	dph,@r0
      000C02 08               [12] 3278 	inc	r0
      000C03 86 F0            [24] 3279 	mov	b,@r0
      000C05 12r03rC1         [24] 3280 	lcall	_send_data
      000C08 15 81            [12] 3281 	dec	sp
      000C0A 15 81            [12] 3282 	dec	sp
                                   3283 ;	/home/user/contiki/core/net/rime/rudolph2.c:348: ctimer_set(&c->t, RESEND_INTERVAL, timed_send, c);
      000C0C E5 81            [12] 3284 	mov	a,sp
      000C0E 24 FB            [12] 3285 	add	a,#0xfb
      000C10 F8               [12] 3286 	mov	r0,a
      000C11 86 05            [24] 3287 	mov	ar5,@r0
      000C13 08               [12] 3288 	inc	r0
      000C14 86 04            [24] 3289 	mov	ar4,@r0
      000C16 08               [12] 3290 	inc	r0
      000C17 86 03            [24] 3291 	mov	ar3,@r0
      000C19 E5 81            [12] 3292 	mov	a,sp
      000C1B 24 FB            [12] 3293 	add	a,#0xfb
      000C1D F8               [12] 3294 	mov	r0,a
      000C1E 74 2B            [12] 3295 	mov	a,#0x2B
      000C20 26               [12] 3296 	add	a,@r0
      000C21 FA               [12] 3297 	mov	r2,a
      000C22 E4               [12] 3298 	clr	a
      000C23 08               [12] 3299 	inc	r0
      000C24 36               [12] 3300 	addc	a,@r0
      000C25 FE               [12] 3301 	mov	r6,a
      000C26 08               [12] 3302 	inc	r0
      000C27 86 07            [24] 3303 	mov	ar7,@r0
      000C29 C0 05            [24] 3304 	push	ar5
      000C2B C0 04            [24] 3305 	push	ar4
      000C2D C0 03            [24] 3306 	push	ar3
      000C2F 74r3C            [12] 3307 	mov	a,#_timed_send
      000C31 C0 E0            [24] 3308 	push	acc
      000C33 74s05            [12] 3309 	mov	a,#(_timed_send >> 8)
      000C35 C0 E0            [24] 3310 	push	acc
      000C37 E4               [12] 3311 	clr	a
      000C38 C0 E0            [24] 3312 	push	acc
      000C3A 74 01            [12] 3313 	mov	a,#0x01
      000C3C C0 E0            [24] 3314 	push	acc
      000C3E 8A 82            [24] 3315 	mov	dpl,r2
      000C40 8E 83            [24] 3316 	mov	dph,r6
      000C42 8F F0            [24] 3317 	mov	b,r7
      000C44 12r00r00         [24] 3318 	lcall	_ctimer_set
      000C47 E5 81            [12] 3319 	mov	a,sp
      000C49 24 F9            [12] 3320 	add	a,#0xf9
      000C4B F5 81            [12] 3321 	mov	sp,a
      000C4D 80 17            [24] 3322 	sjmp	00132$
      000C4F                       3323 00117$:
                                   3324 ;	/home/user/contiki/core/net/rime/rudolph2.c:350: } else if(hdr->chunk > c->rcv_nxt) {
      000C4F C3               [12] 3325 	clr	c
      000C50 EB               [12] 3326 	mov	a,r3
      000C51 9F               [12] 3327 	subb	a,r7
      000C52 EC               [12] 3328 	mov	a,r4
      000C53 9E               [12] 3329 	subb	a,r6
      000C54 50 10            [24] 3330 	jnc	00132$
                                   3331 ;	/home/user/contiki/core/net/rime/rudolph2.c:354: send_nack(c);
      000C56 E5 81            [12] 3332 	mov	a,sp
      000C58 24 FB            [12] 3333 	add	a,#0xfb
      000C5A F8               [12] 3334 	mov	r0,a
      000C5B 86 82            [24] 3335 	mov	dpl,@r0
      000C5D 08               [12] 3336 	inc	r0
      000C5E 86 83            [24] 3337 	mov	dph,@r0
      000C60 08               [12] 3338 	inc	r0
      000C61 86 F0            [24] 3339 	mov	b,@r0
      000C63 12r04r2C         [24] 3340 	lcall	_send_nack
                                   3341 ;	/home/user/contiki/core/net/rime/rudolph2.c:355: } else if(hdr->chunk < c->rcv_nxt) {
      000C66                       3342 00132$:
      000C66 E5 81            [12] 3343 	mov	a,sp
      000C68 24 F2            [12] 3344 	add	a,#0xF2
      000C6A F5 81            [12] 3345 	mov	sp,a
      000C6C 22               [24] 3346 	ret
                                   3347 ;------------------------------------------------------------
                                   3348 ;Allocation info for local variables in function 'rudolph2_open'
                                   3349 ;------------------------------------------------------------
                                   3350 ;channel                   Allocated to stack - sp -3
                                   3351 ;cb                        Allocated to stack - sp -6
                                   3352 ;c                         Allocated to registers r5 r6 r7 
                                   3353 ;------------------------------------------------------------
                                   3354 ;	/home/user/contiki/core/net/rime/rudolph2.c:366: rudolph2_open(struct rudolph2_conn *c, uint16_t channel,
                                   3355 ;	-----------------------------------------
                                   3356 ;	 function rudolph2_open
                                   3357 ;	-----------------------------------------
      000C6D                       3358 _rudolph2_open:
      000C6D AD 82            [24] 3359 	mov	r5,dpl
      000C6F AE 83            [24] 3360 	mov	r6,dph
      000C71 AF F0            [24] 3361 	mov	r7,b
                                   3362 ;	/home/user/contiki/core/net/rime/rudolph2.c:369: polite_open(&c->c, channel, &polite);
      000C73 C0 07            [24] 3363 	push	ar7
      000C75 C0 06            [24] 3364 	push	ar6
      000C77 C0 05            [24] 3365 	push	ar5
      000C79 74r00            [12] 3366 	mov	a,#_polite
      000C7B C0 E0            [24] 3367 	push	acc
      000C7D 74s00            [12] 3368 	mov	a,#(_polite >> 8)
      000C7F C0 E0            [24] 3369 	push	acc
      000C81 74 80            [12] 3370 	mov	a,#0x80
      000C83 C0 E0            [24] 3371 	push	acc
      000C85 E5 81            [12] 3372 	mov	a,sp
      000C87 24 F7            [12] 3373 	add	a,#0xf7
      000C89 F8               [12] 3374 	mov	r0,a
      000C8A E6               [12] 3375 	mov	a,@r0
      000C8B C0 E0            [24] 3376 	push	acc
      000C8D 08               [12] 3377 	inc	r0
      000C8E E6               [12] 3378 	mov	a,@r0
      000C8F C0 E0            [24] 3379 	push	acc
      000C91 8D 82            [24] 3380 	mov	dpl,r5
      000C93 8E 83            [24] 3381 	mov	dph,r6
      000C95 8F F0            [24] 3382 	mov	b,r7
      000C97 12r00r00         [24] 3383 	lcall	_polite_open
      000C9A E5 81            [12] 3384 	mov	a,sp
      000C9C 24 FB            [12] 3385 	add	a,#0xfb
      000C9E F5 81            [12] 3386 	mov	sp,a
      000CA0 D0 05            [24] 3387 	pop	ar5
      000CA2 D0 06            [24] 3388 	pop	ar6
      000CA4 D0 07            [24] 3389 	pop	ar7
                                   3390 ;	/home/user/contiki/core/net/rime/rudolph2.c:370: c->cb = cb;
      000CA6 74 28            [12] 3391 	mov	a,#0x28
      000CA8 2D               [12] 3392 	add	a,r5
      000CA9 FA               [12] 3393 	mov	r2,a
      000CAA E4               [12] 3394 	clr	a
      000CAB 3E               [12] 3395 	addc	a,r6
      000CAC FB               [12] 3396 	mov	r3,a
      000CAD 8F 04            [24] 3397 	mov	ar4,r7
      000CAF 8A 82            [24] 3398 	mov	dpl,r2
      000CB1 8B 83            [24] 3399 	mov	dph,r3
      000CB3 8C F0            [24] 3400 	mov	b,r4
      000CB5 E5 81            [12] 3401 	mov	a,sp
      000CB7 24 FA            [12] 3402 	add	a,#0xfa
      000CB9 F8               [12] 3403 	mov	r0,a
      000CBA E6               [12] 3404 	mov	a,@r0
      000CBB 12r00r00         [24] 3405 	lcall	__gptrput
      000CBE A3               [24] 3406 	inc	dptr
      000CBF 08               [12] 3407 	inc	r0
      000CC0 E6               [12] 3408 	mov	a,@r0
      000CC1 12r00r00         [24] 3409 	lcall	__gptrput
      000CC4 A3               [24] 3410 	inc	dptr
      000CC5 08               [12] 3411 	inc	r0
      000CC6 E6               [12] 3412 	mov	a,@r0
      000CC7 12r00r00         [24] 3413 	lcall	__gptrput
                                   3414 ;	/home/user/contiki/core/net/rime/rudolph2.c:371: c->version = 0;
      000CCA 74 44            [12] 3415 	mov	a,#0x44
      000CCC 2D               [12] 3416 	add	a,r5
      000CCD FA               [12] 3417 	mov	r2,a
      000CCE E4               [12] 3418 	clr	a
      000CCF 3E               [12] 3419 	addc	a,r6
      000CD0 FB               [12] 3420 	mov	r3,a
      000CD1 8F 04            [24] 3421 	mov	ar4,r7
      000CD3 8A 82            [24] 3422 	mov	dpl,r2
      000CD5 8B 83            [24] 3423 	mov	dph,r3
      000CD7 8C F0            [24] 3424 	mov	b,r4
      000CD9 E4               [12] 3425 	clr	a
      000CDA 12r00r00         [24] 3426 	lcall	__gptrput
      000CDD A3               [24] 3427 	inc	dptr
      000CDE E4               [12] 3428 	clr	a
      000CDF 12r00r00         [24] 3429 	lcall	__gptrput
                                   3430 ;	/home/user/contiki/core/net/rime/rudolph2.c:372: c->hops_from_base = HOPS_MAX;
      000CE2 74 46            [12] 3431 	mov	a,#0x46
      000CE4 2D               [12] 3432 	add	a,r5
      000CE5 FD               [12] 3433 	mov	r5,a
      000CE6 E4               [12] 3434 	clr	a
      000CE7 3E               [12] 3435 	addc	a,r6
      000CE8 FE               [12] 3436 	mov	r6,a
      000CE9 8D 82            [24] 3437 	mov	dpl,r5
      000CEB 8E 83            [24] 3438 	mov	dph,r6
      000CED 8F F0            [24] 3439 	mov	b,r7
      000CEF 74 40            [12] 3440 	mov	a,#0x40
      000CF1 02r00r00         [24] 3441 	ljmp	__gptrput
                                   3442 ;------------------------------------------------------------
                                   3443 ;Allocation info for local variables in function 'rudolph2_close'
                                   3444 ;------------------------------------------------------------
                                   3445 ;c                         Allocated to registers r5 r6 r7 
                                   3446 ;------------------------------------------------------------
                                   3447 ;	/home/user/contiki/core/net/rime/rudolph2.c:376: rudolph2_close(struct rudolph2_conn *c)
                                   3448 ;	-----------------------------------------
                                   3449 ;	 function rudolph2_close
                                   3450 ;	-----------------------------------------
      000CF4                       3451 _rudolph2_close:
                                   3452 ;	/home/user/contiki/core/net/rime/rudolph2.c:378: polite_close(&c->c);
      000CF4 02r00r00         [24] 3453 	ljmp	_polite_close
                                   3454 ;------------------------------------------------------------
                                   3455 ;Allocation info for local variables in function 'rudolph2_send'
                                   3456 ;------------------------------------------------------------
                                   3457 ;send_interval             Allocated to stack - sp -11
                                   3458 ;c                         Allocated to stack - sp -7
                                   3459 ;len                       Allocated to stack - sp -1
                                   3460 ;sloc0                     Allocated to stack - sp -4
                                   3461 ;sloc1                     Allocated to stack - sp -1
                                   3462 ;------------------------------------------------------------
                                   3463 ;	/home/user/contiki/core/net/rime/rudolph2.c:382: rudolph2_send(struct rudolph2_conn *c, clock_time_t send_interval)
                                   3464 ;	-----------------------------------------
                                   3465 ;	 function rudolph2_send
                                   3466 ;	-----------------------------------------
      000CF7                       3467 _rudolph2_send:
      000CF7 C0 82            [24] 3468 	push	dpl
      000CF9 C0 83            [24] 3469 	push	dph
      000CFB C0 F0            [24] 3470 	push	b
      000CFD E5 81            [12] 3471 	mov	a,sp
      000CFF 24 05            [12] 3472 	add	a,#0x05
                                   3473 ;	/home/user/contiki/core/net/rime/rudolph2.c:386: c->hops_from_base = 0;
      000D01 F5 81            [12] 3474 	mov	sp,a
      000D03 24 F9            [12] 3475 	add	a,#0xf9
      000D05 F8               [12] 3476 	mov	r0,a
      000D06 74 46            [12] 3477 	mov	a,#0x46
      000D08 26               [12] 3478 	add	a,@r0
      000D09 FA               [12] 3479 	mov	r2,a
      000D0A E4               [12] 3480 	clr	a
      000D0B 08               [12] 3481 	inc	r0
      000D0C 36               [12] 3482 	addc	a,@r0
      000D0D FB               [12] 3483 	mov	r3,a
      000D0E 08               [12] 3484 	inc	r0
      000D0F 86 04            [24] 3485 	mov	ar4,@r0
      000D11 8A 82            [24] 3486 	mov	dpl,r2
      000D13 8B 83            [24] 3487 	mov	dph,r3
      000D15 8C F0            [24] 3488 	mov	b,r4
      000D17 E4               [12] 3489 	clr	a
      000D18 12r00r00         [24] 3490 	lcall	__gptrput
                                   3491 ;	/home/user/contiki/core/net/rime/rudolph2.c:387: c->version++;
      000D1B E5 81            [12] 3492 	mov	a,sp
      000D1D 24 F9            [12] 3493 	add	a,#0xf9
      000D1F F8               [12] 3494 	mov	r0,a
      000D20 74 44            [12] 3495 	mov	a,#0x44
      000D22 26               [12] 3496 	add	a,@r0
      000D23 FA               [12] 3497 	mov	r2,a
      000D24 E4               [12] 3498 	clr	a
      000D25 08               [12] 3499 	inc	r0
      000D26 36               [12] 3500 	addc	a,@r0
      000D27 FB               [12] 3501 	mov	r3,a
      000D28 08               [12] 3502 	inc	r0
      000D29 86 04            [24] 3503 	mov	ar4,@r0
      000D2B 8A 82            [24] 3504 	mov	dpl,r2
      000D2D 8B 83            [24] 3505 	mov	dph,r3
      000D2F 8C F0            [24] 3506 	mov	b,r4
      000D31 12r00r00         [24] 3507 	lcall	__gptrget
      000D34 FE               [12] 3508 	mov	r6,a
      000D35 A3               [24] 3509 	inc	dptr
      000D36 12r00r00         [24] 3510 	lcall	__gptrget
      000D39 FF               [12] 3511 	mov	r7,a
      000D3A 0E               [12] 3512 	inc	r6
      000D3B BE 00 01         [24] 3513 	cjne	r6,#0x00,00113$
      000D3E 0F               [12] 3514 	inc	r7
      000D3F                       3515 00113$:
      000D3F 8A 82            [24] 3516 	mov	dpl,r2
      000D41 8B 83            [24] 3517 	mov	dph,r3
      000D43 8C F0            [24] 3518 	mov	b,r4
      000D45 EE               [12] 3519 	mov	a,r6
      000D46 12r00r00         [24] 3520 	lcall	__gptrput
      000D49 A3               [24] 3521 	inc	dptr
      000D4A EF               [12] 3522 	mov	a,r7
      000D4B 12r00r00         [24] 3523 	lcall	__gptrput
                                   3524 ;	/home/user/contiki/core/net/rime/rudolph2.c:388: c->snd_nxt = 0;
      000D4E E5 81            [12] 3525 	mov	a,sp
      000D50 24 F9            [12] 3526 	add	a,#0xf9
      000D52 F8               [12] 3527 	mov	r0,a
      000D53 74 40            [12] 3528 	mov	a,#0x40
      000D55 26               [12] 3529 	add	a,@r0
      000D56 FD               [12] 3530 	mov	r5,a
      000D57 E4               [12] 3531 	clr	a
      000D58 08               [12] 3532 	inc	r0
      000D59 36               [12] 3533 	addc	a,@r0
      000D5A FE               [12] 3534 	mov	r6,a
      000D5B 08               [12] 3535 	inc	r0
      000D5C 86 07            [24] 3536 	mov	ar7,@r0
      000D5E 8D 82            [24] 3537 	mov	dpl,r5
      000D60 8E 83            [24] 3538 	mov	dph,r6
      000D62 8F F0            [24] 3539 	mov	b,r7
      000D64 E4               [12] 3540 	clr	a
      000D65 12r00r00         [24] 3541 	lcall	__gptrput
      000D68 A3               [24] 3542 	inc	dptr
      000D69 E4               [12] 3543 	clr	a
      000D6A 12r00r00         [24] 3544 	lcall	__gptrput
                                   3545 ;	/home/user/contiki/core/net/rime/rudolph2.c:389: len = RUDOLPH2_DATASIZE;
      000D6D A8 81            [24] 3546 	mov	r0,sp
      000D6F 18               [12] 3547 	dec	r0
      000D70 76 40            [12] 3548 	mov	@r0,#0x40
      000D72 08               [12] 3549 	inc	r0
      000D73 76 00            [12] 3550 	mov	@r0,#0x00
                                   3551 ;	/home/user/contiki/core/net/rime/rudolph2.c:390: packetbuf_clear();
      000D75 12r00r00         [24] 3552 	lcall	_packetbuf_clear
                                   3553 ;	/home/user/contiki/core/net/rime/rudolph2.c:391: for(c->rcv_nxt = 0; len == RUDOLPH2_DATASIZE; c->rcv_nxt++) {
      000D78 E5 81            [12] 3554 	mov	a,sp
      000D7A 24 F9            [12] 3555 	add	a,#0xf9
      000D7C F8               [12] 3556 	mov	r0,a
      000D7D E5 81            [12] 3557 	mov	a,sp
      000D7F 24 FC            [12] 3558 	add	a,#0xfc
      000D81 F9               [12] 3559 	mov	r1,a
      000D82 74 42            [12] 3560 	mov	a,#0x42
      000D84 26               [12] 3561 	add	a,@r0
      000D85 F7               [12] 3562 	mov	@r1,a
      000D86 E4               [12] 3563 	clr	a
      000D87 08               [12] 3564 	inc	r0
      000D88 36               [12] 3565 	addc	a,@r0
      000D89 09               [12] 3566 	inc	r1
      000D8A F7               [12] 3567 	mov	@r1,a
      000D8B 08               [12] 3568 	inc	r0
      000D8C 09               [12] 3569 	inc	r1
      000D8D E6               [12] 3570 	mov	a,@r0
      000D8E F7               [12] 3571 	mov	@r1,a
      000D8F E5 81            [12] 3572 	mov	a,sp
      000D91 24 FC            [12] 3573 	add	a,#0xfc
      000D93 F8               [12] 3574 	mov	r0,a
      000D94 86 82            [24] 3575 	mov	dpl,@r0
      000D96 08               [12] 3576 	inc	r0
      000D97 86 83            [24] 3577 	mov	dph,@r0
      000D99 08               [12] 3578 	inc	r0
      000D9A 86 F0            [24] 3579 	mov	b,@r0
      000D9C E4               [12] 3580 	clr	a
      000D9D 12r00r00         [24] 3581 	lcall	__gptrput
      000DA0 A3               [24] 3582 	inc	dptr
      000DA1 E4               [12] 3583 	clr	a
      000DA2 12r00r00         [24] 3584 	lcall	__gptrput
      000DA5                       3585 00103$:
      000DA5 A8 81            [24] 3586 	mov	r0,sp
      000DA7 18               [12] 3587 	dec	r0
      000DA8 B6 40 06         [24] 3588 	cjne	@r0,#0x40,00114$
      000DAB 08               [12] 3589 	inc	r0
      000DAC B6 00 02         [24] 3590 	cjne	@r0,#0x00,00114$
      000DAF 80 03            [24] 3591 	sjmp	00115$
      000DB1                       3592 00114$:
      000DB1 02r0Er35         [24] 3593 	ljmp	00101$
      000DB4                       3594 00115$:
                                   3595 ;	/home/user/contiki/core/net/rime/rudolph2.c:392: len = read_data(c, packetbuf_dataptr(), c->rcv_nxt);
      000DB4 E5 81            [12] 3596 	mov	a,sp
      000DB6 24 FC            [12] 3597 	add	a,#0xfc
      000DB8 F8               [12] 3598 	mov	r0,a
      000DB9 86 82            [24] 3599 	mov	dpl,@r0
      000DBB 08               [12] 3600 	inc	r0
      000DBC 86 83            [24] 3601 	mov	dph,@r0
      000DBE 08               [12] 3602 	inc	r0
      000DBF 86 F0            [24] 3603 	mov	b,@r0
      000DC1 12r00r00         [24] 3604 	lcall	__gptrget
      000DC4 FF               [12] 3605 	mov	r7,a
      000DC5 A3               [24] 3606 	inc	dptr
      000DC6 12r00r00         [24] 3607 	lcall	__gptrget
      000DC9 FE               [12] 3608 	mov	r6,a
      000DCA C0 07            [24] 3609 	push	ar7
      000DCC C0 06            [24] 3610 	push	ar6
      000DCE 12r00r00         [24] 3611 	lcall	_packetbuf_dataptr
      000DD1 AB 82            [24] 3612 	mov	r3,dpl
      000DD3 AC 83            [24] 3613 	mov	r4,dph
      000DD5 AD F0            [24] 3614 	mov	r5,b
      000DD7 C0 03            [24] 3615 	push	ar3
      000DD9 C0 04            [24] 3616 	push	ar4
      000DDB C0 05            [24] 3617 	push	ar5
      000DDD E5 81            [12] 3618 	mov	a,sp
      000DDF 24 F4            [12] 3619 	add	a,#0xf4
      000DE1 F8               [12] 3620 	mov	r0,a
      000DE2 86 82            [24] 3621 	mov	dpl,@r0
      000DE4 08               [12] 3622 	inc	r0
      000DE5 86 83            [24] 3623 	mov	dph,@r0
      000DE7 08               [12] 3624 	inc	r0
      000DE8 86 F0            [24] 3625 	mov	b,@r0
      000DEA 12r00r00         [24] 3626 	lcall	_read_data
      000DED AC 82            [24] 3627 	mov	r4,dpl
      000DEF AD 83            [24] 3628 	mov	r5,dph
      000DF1 E5 81            [12] 3629 	mov	a,sp
      000DF3 24 FB            [12] 3630 	add	a,#0xfb
      000DF5 F5 81            [12] 3631 	mov	sp,a
      000DF7 A8 81            [24] 3632 	mov	r0,sp
      000DF9 18               [12] 3633 	dec	r0
      000DFA A6 04            [24] 3634 	mov	@r0,ar4
      000DFC 08               [12] 3635 	inc	r0
      000DFD A6 05            [24] 3636 	mov	@r0,ar5
                                   3637 ;	/home/user/contiki/core/net/rime/rudolph2.c:391: for(c->rcv_nxt = 0; len == RUDOLPH2_DATASIZE; c->rcv_nxt++) {
      000DFF E5 81            [12] 3638 	mov	a,sp
      000E01 24 F9            [12] 3639 	add	a,#0xf9
      000E03 F8               [12] 3640 	mov	r0,a
      000E04 74 42            [12] 3641 	mov	a,#0x42
      000E06 26               [12] 3642 	add	a,@r0
      000E07 FB               [12] 3643 	mov	r3,a
      000E08 E4               [12] 3644 	clr	a
      000E09 08               [12] 3645 	inc	r0
      000E0A 36               [12] 3646 	addc	a,@r0
      000E0B FC               [12] 3647 	mov	r4,a
      000E0C 08               [12] 3648 	inc	r0
      000E0D 86 05            [24] 3649 	mov	ar5,@r0
      000E0F 8B 82            [24] 3650 	mov	dpl,r3
      000E11 8C 83            [24] 3651 	mov	dph,r4
      000E13 8D F0            [24] 3652 	mov	b,r5
      000E15 12r00r00         [24] 3653 	lcall	__gptrget
      000E18 FA               [12] 3654 	mov	r2,a
      000E19 A3               [24] 3655 	inc	dptr
      000E1A 12r00r00         [24] 3656 	lcall	__gptrget
      000E1D FF               [12] 3657 	mov	r7,a
      000E1E 0A               [12] 3658 	inc	r2
      000E1F BA 00 01         [24] 3659 	cjne	r2,#0x00,00116$
      000E22 0F               [12] 3660 	inc	r7
      000E23                       3661 00116$:
      000E23 8B 82            [24] 3662 	mov	dpl,r3
      000E25 8C 83            [24] 3663 	mov	dph,r4
      000E27 8D F0            [24] 3664 	mov	b,r5
      000E29 EA               [12] 3665 	mov	a,r2
      000E2A 12r00r00         [24] 3666 	lcall	__gptrput
      000E2D A3               [24] 3667 	inc	dptr
      000E2E EF               [12] 3668 	mov	a,r7
      000E2F 12r00r00         [24] 3669 	lcall	__gptrput
      000E32 02r0DrA5         [24] 3670 	ljmp	00103$
      000E35                       3671 00101$:
                                   3672 ;	/home/user/contiki/core/net/rime/rudolph2.c:394: c->flags = FLAG_LAST_RECEIVED;
      000E35 E5 81            [12] 3673 	mov	a,sp
      000E37 24 F9            [12] 3674 	add	a,#0xf9
      000E39 F8               [12] 3675 	mov	r0,a
      000E3A 74 48            [12] 3676 	mov	a,#0x48
      000E3C 26               [12] 3677 	add	a,@r0
      000E3D FD               [12] 3678 	mov	r5,a
      000E3E E4               [12] 3679 	clr	a
      000E3F 08               [12] 3680 	inc	r0
      000E40 36               [12] 3681 	addc	a,@r0
      000E41 FE               [12] 3682 	mov	r6,a
      000E42 08               [12] 3683 	inc	r0
      000E43 86 07            [24] 3684 	mov	ar7,@r0
      000E45 8D 82            [24] 3685 	mov	dpl,r5
      000E47 8E 83            [24] 3686 	mov	dph,r6
      000E49 8F F0            [24] 3687 	mov	b,r7
      000E4B 74 02            [12] 3688 	mov	a,#0x02
      000E4D 12r00r00         [24] 3689 	lcall	__gptrput
                                   3690 ;	/home/user/contiki/core/net/rime/rudolph2.c:396: send_data(c, SEND_INTERVAL);
      000E50 74 40            [12] 3691 	mov	a,#0x40
      000E52 C0 E0            [24] 3692 	push	acc
      000E54 E4               [12] 3693 	clr	a
      000E55 C0 E0            [24] 3694 	push	acc
      000E57 E5 81            [12] 3695 	mov	a,sp
      000E59 24 F7            [12] 3696 	add	a,#0xf7
      000E5B F8               [12] 3697 	mov	r0,a
      000E5C 86 82            [24] 3698 	mov	dpl,@r0
      000E5E 08               [12] 3699 	inc	r0
      000E5F 86 83            [24] 3700 	mov	dph,@r0
      000E61 08               [12] 3701 	inc	r0
      000E62 86 F0            [24] 3702 	mov	b,@r0
      000E64 12r03rC1         [24] 3703 	lcall	_send_data
      000E67 15 81            [12] 3704 	dec	sp
      000E69 15 81            [12] 3705 	dec	sp
                                   3706 ;	/home/user/contiki/core/net/rime/rudolph2.c:397: ctimer_set(&c->t, SEND_INTERVAL, timed_send, c);
      000E6B E5 81            [12] 3707 	mov	a,sp
      000E6D 24 F9            [12] 3708 	add	a,#0xf9
      000E6F F8               [12] 3709 	mov	r0,a
      000E70 86 05            [24] 3710 	mov	ar5,@r0
      000E72 08               [12] 3711 	inc	r0
      000E73 86 06            [24] 3712 	mov	ar6,@r0
      000E75 08               [12] 3713 	inc	r0
      000E76 86 07            [24] 3714 	mov	ar7,@r0
      000E78 E5 81            [12] 3715 	mov	a,sp
      000E7A 24 F9            [12] 3716 	add	a,#0xf9
      000E7C F8               [12] 3717 	mov	r0,a
      000E7D 74 2B            [12] 3718 	mov	a,#0x2B
      000E7F 26               [12] 3719 	add	a,@r0
      000E80 FA               [12] 3720 	mov	r2,a
      000E81 E4               [12] 3721 	clr	a
      000E82 08               [12] 3722 	inc	r0
      000E83 36               [12] 3723 	addc	a,@r0
      000E84 FB               [12] 3724 	mov	r3,a
      000E85 08               [12] 3725 	inc	r0
      000E86 86 04            [24] 3726 	mov	ar4,@r0
      000E88 C0 05            [24] 3727 	push	ar5
      000E8A C0 06            [24] 3728 	push	ar6
      000E8C C0 07            [24] 3729 	push	ar7
      000E8E 74r3C            [12] 3730 	mov	a,#_timed_send
      000E90 C0 E0            [24] 3731 	push	acc
      000E92 74s05            [12] 3732 	mov	a,#(_timed_send >> 8)
      000E94 C0 E0            [24] 3733 	push	acc
      000E96 74 40            [12] 3734 	mov	a,#0x40
      000E98 C0 E0            [24] 3735 	push	acc
      000E9A E4               [12] 3736 	clr	a
      000E9B C0 E0            [24] 3737 	push	acc
      000E9D 8A 82            [24] 3738 	mov	dpl,r2
      000E9F 8B 83            [24] 3739 	mov	dph,r3
      000EA1 8C F0            [24] 3740 	mov	b,r4
      000EA3 12r00r00         [24] 3741 	lcall	_ctimer_set
      000EA6 E5 81            [12] 3742 	mov	a,sp
      000EA8 24 F9            [12] 3743 	add	a,#0xf9
      000EAA 24 F8            [12] 3744 	add	a,#0xF8
      000EAC F5 81            [12] 3745 	mov	sp,a
      000EAE 22               [24] 3746 	ret
                                   3747 ;------------------------------------------------------------
                                   3748 ;Allocation info for local variables in function 'rudolph2_stop'
                                   3749 ;------------------------------------------------------------
                                   3750 ;c                         Allocated to registers r5 r6 r7 
                                   3751 ;------------------------------------------------------------
                                   3752 ;	/home/user/contiki/core/net/rime/rudolph2.c:401: rudolph2_stop(struct rudolph2_conn *c)
                                   3753 ;	-----------------------------------------
                                   3754 ;	 function rudolph2_stop
                                   3755 ;	-----------------------------------------
      000EAF                       3756 _rudolph2_stop:
                                   3757 ;	/home/user/contiki/core/net/rime/rudolph2.c:403: polite_cancel(&c->c);
      000EAF AD 82            [24] 3758 	mov	r5,dpl
      000EB1 AE 83            [24] 3759 	mov	r6,dph
      000EB3 AF F0            [24] 3760 	mov	r7,b
      000EB5 C0 07            [24] 3761 	push	ar7
      000EB7 C0 06            [24] 3762 	push	ar6
      000EB9 C0 05            [24] 3763 	push	ar5
      000EBB 12r00r00         [24] 3764 	lcall	_polite_cancel
      000EBE D0 05            [24] 3765 	pop	ar5
      000EC0 D0 06            [24] 3766 	pop	ar6
      000EC2 D0 07            [24] 3767 	pop	ar7
                                   3768 ;	/home/user/contiki/core/net/rime/rudolph2.c:404: c->flags |= FLAG_IS_STOPPED;
      000EC4 74 48            [12] 3769 	mov	a,#0x48
      000EC6 2D               [12] 3770 	add	a,r5
      000EC7 FD               [12] 3771 	mov	r5,a
      000EC8 E4               [12] 3772 	clr	a
      000EC9 3E               [12] 3773 	addc	a,r6
      000ECA FE               [12] 3774 	mov	r6,a
      000ECB 8D 82            [24] 3775 	mov	dpl,r5
      000ECD 8E 83            [24] 3776 	mov	dph,r6
      000ECF 8F F0            [24] 3777 	mov	b,r7
      000ED1 12r00r00         [24] 3778 	lcall	__gptrget
      000ED4 FC               [12] 3779 	mov	r4,a
      000ED5 43 04 04         [24] 3780 	orl	ar4,#0x04
      000ED8 8D 82            [24] 3781 	mov	dpl,r5
      000EDA 8E 83            [24] 3782 	mov	dph,r6
      000EDC 8F F0            [24] 3783 	mov	b,r7
      000EDE EC               [12] 3784 	mov	a,r4
      000EDF 02r00r00         [24] 3785 	ljmp	__gptrput
                                   3786 	.area CSEG    (CODE)
                                   3787 	.area CONST   (CODE)
      000000                       3788 _polite:
      000000r14s07                 3789 	.byte _recv,(_recv >> 8)
      000002r3As05                 3790 	.byte _sent,(_sent >> 8)
      000004r3Bs05                 3791 	.byte _dropped,(_dropped >> 8)
                                   3792 	.area XINIT   (CODE)
                                   3793 	.area CABS    (ABS,CODE)
